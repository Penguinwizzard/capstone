/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2019 */

/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
static const char *getRegisterName(unsigned RegNo)
{


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
#ifndef CAPSTONE_DIET
  static const char AsmStrs[] = {
  /* 0 */ "**ROUNDING MODE**\0"
  /* 18 */ "**FRAME POINTER**\0"
  /* 36 */ "**BASE POINTER**\0"
  /* 53 */ "f10\0"
  /* 57 */ "vsp10\0"
  /* 63 */ "r10\0"
  /* 67 */ "vs10\0"
  /* 72 */ "v10\0"
  /* 76 */ "f20\0"
  /* 80 */ "vsp20\0"
  /* 86 */ "r20\0"
  /* 90 */ "vs20\0"
  /* 95 */ "v20\0"
  /* 99 */ "f30\0"
  /* 103 */ "vsp30\0"
  /* 109 */ "r30\0"
  /* 113 */ "vs30\0"
  /* 118 */ "v30\0"
  /* 122 */ "vsp40\0"
  /* 128 */ "vs40\0"
  /* 133 */ "vsp50\0"
  /* 139 */ "vs50\0"
  /* 144 */ "vsp60\0"
  /* 150 */ "vs60\0"
  /* 155 */ "acc0\0"
  /* 160 */ "f0\0"
  /* 163 */ "vsp0\0"
  /* 168 */ "cr0\0"
  /* 172 */ "vs0\0"
  /* 176 */ "v0\0"
  /* 179 */ "f11\0"
  /* 183 */ "r11\0"
  /* 187 */ "vs11\0"
  /* 192 */ "v11\0"
  /* 196 */ "f21\0"
  /* 200 */ "r21\0"
  /* 204 */ "vs21\0"
  /* 209 */ "v21\0"
  /* 213 */ "f31\0"
  /* 217 */ "r31\0"
  /* 221 */ "vs31\0"
  /* 226 */ "v31\0"
  /* 230 */ "vs41\0"
  /* 235 */ "vs51\0"
  /* 240 */ "vs61\0"
  /* 245 */ "acc1\0"
  /* 250 */ "f1\0"
  /* 253 */ "cr1\0"
  /* 257 */ "vs1\0"
  /* 261 */ "v1\0"
  /* 264 */ "f12\0"
  /* 268 */ "vsp12\0"
  /* 274 */ "r12\0"
  /* 278 */ "vs12\0"
  /* 283 */ "v12\0"
  /* 287 */ "f22\0"
  /* 291 */ "vsp22\0"
  /* 297 */ "r22\0"
  /* 301 */ "vs22\0"
  /* 306 */ "v22\0"
  /* 310 */ "vsp32\0"
  /* 316 */ "vs32\0"
  /* 321 */ "vsp42\0"
  /* 327 */ "vs42\0"
  /* 332 */ "vsp52\0"
  /* 338 */ "vs52\0"
  /* 343 */ "vsp62\0"
  /* 349 */ "vs62\0"
  /* 354 */ "acc2\0"
  /* 359 */ "f2\0"
  /* 362 */ "vsp2\0"
  /* 367 */ "cr2\0"
  /* 371 */ "vs2\0"
  /* 375 */ "v2\0"
  /* 378 */ "f13\0"
  /* 382 */ "r13\0"
  /* 386 */ "vs13\0"
  /* 391 */ "v13\0"
  /* 395 */ "f23\0"
  /* 399 */ "r23\0"
  /* 403 */ "vs23\0"
  /* 408 */ "v23\0"
  /* 412 */ "vs33\0"
  /* 417 */ "vs43\0"
  /* 422 */ "vs53\0"
  /* 427 */ "vs63\0"
  /* 432 */ "acc3\0"
  /* 437 */ "f3\0"
  /* 440 */ "cr3\0"
  /* 444 */ "vs3\0"
  /* 448 */ "v3\0"
  /* 451 */ "f14\0"
  /* 455 */ "vsp14\0"
  /* 461 */ "r14\0"
  /* 465 */ "vs14\0"
  /* 470 */ "v14\0"
  /* 474 */ "f24\0"
  /* 478 */ "vsp24\0"
  /* 484 */ "r24\0"
  /* 488 */ "vs24\0"
  /* 493 */ "v24\0"
  /* 497 */ "vsp34\0"
  /* 503 */ "vs34\0"
  /* 508 */ "vsp44\0"
  /* 514 */ "vs44\0"
  /* 519 */ "vsp54\0"
  /* 525 */ "vs54\0"
  /* 530 */ "acc4\0"
  /* 535 */ "f4\0"
  /* 538 */ "vsp4\0"
  /* 543 */ "cr4\0"
  /* 547 */ "vs4\0"
  /* 551 */ "v4\0"
  /* 554 */ "f15\0"
  /* 558 */ "r15\0"
  /* 562 */ "vs15\0"
  /* 567 */ "v15\0"
  /* 571 */ "f25\0"
  /* 575 */ "r25\0"
  /* 579 */ "vs25\0"
  /* 584 */ "v25\0"
  /* 588 */ "vs35\0"
  /* 593 */ "vs45\0"
  /* 598 */ "vs55\0"
  /* 603 */ "acc5\0"
  /* 608 */ "f5\0"
  /* 611 */ "cr5\0"
  /* 615 */ "vs5\0"
  /* 619 */ "v5\0"
  /* 622 */ "f16\0"
  /* 626 */ "vsp16\0"
  /* 632 */ "r16\0"
  /* 636 */ "vs16\0"
  /* 641 */ "v16\0"
  /* 645 */ "f26\0"
  /* 649 */ "vsp26\0"
  /* 655 */ "r26\0"
  /* 659 */ "vs26\0"
  /* 664 */ "v26\0"
  /* 668 */ "vsp36\0"
  /* 674 */ "vs36\0"
  /* 679 */ "vsp46\0"
  /* 685 */ "vs46\0"
  /* 690 */ "vsp56\0"
  /* 696 */ "vs56\0"
  /* 701 */ "acc6\0"
  /* 706 */ "f6\0"
  /* 709 */ "vsp6\0"
  /* 714 */ "cr6\0"
  /* 718 */ "vs6\0"
  /* 722 */ "v6\0"
  /* 725 */ "f17\0"
  /* 729 */ "r17\0"
  /* 733 */ "vs17\0"
  /* 738 */ "v17\0"
  /* 742 */ "f27\0"
  /* 746 */ "r27\0"
  /* 750 */ "vs27\0"
  /* 755 */ "v27\0"
  /* 759 */ "vs37\0"
  /* 764 */ "vs47\0"
  /* 769 */ "vs57\0"
  /* 774 */ "acc7\0"
  /* 779 */ "f7\0"
  /* 782 */ "cr7\0"
  /* 786 */ "vs7\0"
  /* 790 */ "v7\0"
  /* 793 */ "f18\0"
  /* 797 */ "vsp18\0"
  /* 803 */ "r18\0"
  /* 807 */ "vs18\0"
  /* 812 */ "v18\0"
  /* 816 */ "f28\0"
  /* 820 */ "vsp28\0"
  /* 826 */ "r28\0"
  /* 830 */ "vs28\0"
  /* 835 */ "v28\0"
  /* 839 */ "vsp38\0"
  /* 845 */ "vs38\0"
  /* 850 */ "vsp48\0"
  /* 856 */ "vs48\0"
  /* 861 */ "vsp58\0"
  /* 867 */ "vs58\0"
  /* 872 */ "f8\0"
  /* 875 */ "vsp8\0"
  /* 880 */ "r8\0"
  /* 883 */ "vs8\0"
  /* 887 */ "v8\0"
  /* 890 */ "f19\0"
  /* 894 */ "r19\0"
  /* 898 */ "vs19\0"
  /* 903 */ "v19\0"
  /* 907 */ "f29\0"
  /* 911 */ "r29\0"
  /* 915 */ "vs29\0"
  /* 920 */ "v29\0"
  /* 924 */ "vs39\0"
  /* 929 */ "vs49\0"
  /* 934 */ "vs59\0"
  /* 939 */ "f9\0"
  /* 942 */ "r9\0"
  /* 945 */ "vs9\0"
  /* 949 */ "v9\0"
  /* 952 */ "vrsave\0"
  /* 959 */ "spefscr\0"
  /* 967 */ "xer\0"
  /* 971 */ "lr\0"
  /* 974 */ "ctr\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint16_t RegAsmOffset[] = {
    36, 967, 974, 18, 971, 0, 959, 952, 967, 55, 155, 245, 354, 432,
    530, 603, 701, 774, 36, 168, 253, 367, 440, 543, 611, 714, 782, 974,
    160, 250, 359, 437, 535, 608, 706, 779, 872, 939, 53, 179, 264, 378,
    451, 554, 622, 725, 793, 890, 76, 196, 287, 395, 474, 571, 645, 742,
    816, 907, 99, 213, 18, 971, 160, 250, 359, 437, 535, 608, 706, 779,
    872, 939, 53, 179, 264, 378, 451, 554, 622, 725, 793, 890, 76, 196,
    287, 395, 474, 571, 645, 742, 816, 907, 99, 213, 169, 254, 368, 441,
    544, 612, 715, 783, 880, 942, 63, 183, 274, 382, 461, 558, 632, 729,
    803, 894, 86, 200, 297, 399, 484, 575, 655, 746, 826, 911, 109, 217,
    169, 254, 368, 441, 544, 612, 715, 783, 880, 942, 63, 183, 274, 382,
    461, 558, 632, 729, 803, 894, 86, 200, 297, 399, 484, 575, 655, 746,
    826, 911, 109, 217, 155, 245, 354, 432, 530, 603, 701, 774, 176, 261,
    375, 448, 551, 619, 722, 790, 887, 949, 72, 192, 283, 391, 470, 567,
    641, 738, 812, 903, 95, 209, 306, 408, 493, 584, 664, 755, 835, 920,
    118, 226, 176, 261, 375, 448, 551, 619, 722, 790, 887, 949, 72, 192,
    283, 391, 470, 567, 641, 738, 812, 903, 95, 209, 306, 408, 493, 584,
    664, 755, 835, 920, 118, 226, 172, 257, 371, 444, 547, 615, 718, 786,
    883, 945, 67, 187, 278, 386, 465, 562, 636, 733, 807, 898, 90, 204,
    301, 403, 488, 579, 659, 750, 830, 915, 113, 221, 163, 362, 538, 709,
    875, 57, 268, 455, 626, 797, 80, 291, 478, 649, 820, 103, 310, 497,
    668, 839, 122, 321, 508, 679, 850, 133, 332, 519, 690, 861, 144, 343,
    316, 412, 503, 588, 674, 759, 845, 924, 128, 230, 327, 417, 514, 593,
    685, 764, 856, 929, 139, 235, 338, 422, 525, 598, 696, 769, 867, 934,
    150, 240, 349, 427, 169, 254, 368, 441, 544, 612, 715, 783, 880, 942,
    63, 183, 274, 382, 461, 558, 632, 729, 803, 894, 86, 200, 297, 399,
    484, 575, 655, 746, 826, 911, 109, 217, 55, 266, 624, 54, 452, 794,
    288, 646, 100, 181, 556, 892, 379, 726, 197, 572, 908, 55, 453, 795,
    265, 623, 77, 475, 817, 380, 727, 180, 555, 891, 396, 743, 214,
  };

  return AsmStrs+RegAsmOffset[RegNo-1];
#else
  return NULL;
#endif
}
