/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2019 */

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// getMnemonic - This method is automatically generated by tablegen
/// from the instruction set description.
struct MnemonicData_t {
  union {
    const char* first;
    const char* MnemonicString;
  };
  union {
    uint64_t second;
    uint64_t Bits;
  };
};

typedef struct MnemonicData_t MnemonicData;

MnemonicData PPCInstPrinter_getMnemonic(const MCInst *MI) {

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
#ifndef CAPSTONE_DIET
  static const char AsmStrs[] = {
  /* 0 */ "#EH_SjLj_Setup\t\0"
  /* 16 */ "bdzla+ \0"
  /* 24 */ "bdnzla+ \0"
  /* 33 */ "bdza+ \0"
  /* 40 */ "bdnza+ \0"
  /* 48 */ "bdzl+ \0"
  /* 55 */ "bdnzl+ \0"
  /* 63 */ "bdz+ \0"
  /* 69 */ "bdnz+ \0"
  /* 76 */ "bcl 20, 31, \0"
  /* 89 */ "bctrl\n\tld 2, \0"
  /* 103 */ "bctrl\n\tlwz 2, \0"
  /* 118 */ "bc 12, \0"
  /* 126 */ "bcl 12, \0"
  /* 135 */ "bclrl 12, \0"
  /* 146 */ "bcctrl 12, \0"
  /* 158 */ "bclr 12, \0"
  /* 168 */ "bcctr 12, \0"
  /* 179 */ "bc 4, \0"
  /* 186 */ "bcl 4, \0"
  /* 194 */ "bclrl 4, \0"
  /* 204 */ "bcctrl 4, \0"
  /* 215 */ "bclr 4, \0"
  /* 224 */ "bcctr 4, \0"
  /* 234 */ "mtspr 256, \0"
  /* 246 */ "bdzla- \0"
  /* 254 */ "bdnzla- \0"
  /* 263 */ "bdza- \0"
  /* 270 */ "bdnza- \0"
  /* 278 */ "bdzl- \0"
  /* 285 */ "bdnzl- \0"
  /* 293 */ "bdz- \0"
  /* 299 */ "bdnz- \0"
  /* 306 */ "ps_merge00. \0"
  /* 319 */ "ps_merge10. \0"
  /* 332 */ "ps_sum0. \0"
  /* 342 */ "ps_madds0. \0"
  /* 354 */ "ps_muls0. \0"
  /* 365 */ "ps_merge01. \0"
  /* 378 */ "ps_merge11. \0"
  /* 391 */ "ps_sum1. \0"
  /* 401 */ "ps_madds1. \0"
  /* 413 */ "ps_muls1. \0"
  /* 424 */ "vcmpneb. \0"
  /* 434 */ "vcmpgtsb. \0"
  /* 445 */ "extsb. \0"
  /* 453 */ "vcmpequb. \0"
  /* 464 */ "ps_sub. \0"
  /* 473 */ "fsub. \0"
  /* 480 */ "ps_msub. \0"
  /* 490 */ "fmsub. \0"
  /* 498 */ "ps_nmsub. \0"
  /* 509 */ "fnmsub. \0"
  /* 518 */ "vcmpgtub. \0"
  /* 529 */ "vcmpnezb. \0"
  /* 540 */ "addc. \0"
  /* 547 */ "andc. \0"
  /* 554 */ "tabortdc. \0"
  /* 565 */ "subfc. \0"
  /* 573 */ "subic. \0"
  /* 581 */ "addic. \0"
  /* 589 */ "rldic. \0"
  /* 597 */ "bcdtrunc. \0"
  /* 608 */ "bcdutrunc. \0"
  /* 620 */ "orc. \0"
  /* 626 */ "tabortwc. \0"
  /* 637 */ "srad. \0"
  /* 644 */ "ps_add. \0"
  /* 653 */ "fadd. \0"
  /* 660 */ "ps_madd. \0"
  /* 670 */ "fmadd. \0"
  /* 678 */ "ps_nmadd. \0"
  /* 689 */ "fnmadd. \0"
  /* 698 */ "mulhd. \0"
  /* 706 */ "fcfid. \0"
  /* 714 */ "fctid. \0"
  /* 722 */ "mulld. \0"
  /* 730 */ "sld. \0"
  /* 736 */ "nand. \0"
  /* 743 */ "tend. \0"
  /* 750 */ "srd. \0"
  /* 756 */ "vcmpgtsd. \0"
  /* 767 */ "vcmpequd. \0"
  /* 778 */ "vcmpgtud. \0"
  /* 789 */ "divd. \0"
  /* 796 */ "cntlzd. \0"
  /* 805 */ "cnttzd. \0"
  /* 814 */ "adde. \0"
  /* 821 */ "divde. \0"
  /* 829 */ "slbfee. \0"
  /* 838 */ "subfe. \0"
  /* 846 */ "addme. \0"
  /* 854 */ "subfme. \0"
  /* 863 */ "fre. \0"
  /* 869 */ "ps_rsqrte. \0"
  /* 881 */ "frsqrte. \0"
  /* 891 */ "paste. \0"
  /* 899 */ "divwe. \0"
  /* 907 */ "addze. \0"
  /* 915 */ "subfze. \0"
  /* 924 */ "subf. \0"
  /* 931 */ "mtfsf. \0"
  /* 939 */ "ps_neg. \0"
  /* 948 */ "fneg. \0"
  /* 955 */ "vcmpneh. \0"
  /* 965 */ "vcmpgtsh. \0"
  /* 976 */ "extsh. \0"
  /* 984 */ "vcmpequh. \0"
  /* 995 */ "vcmpgtuh. \0"
  /* 1006 */ "vcmpnezh. \0"
  /* 1017 */ "tabortdci. \0"
  /* 1029 */ "tabortwci. \0"
  /* 1041 */ "sradi. \0"
  /* 1049 */ "clrlsldi. \0"
  /* 1060 */ "extldi. \0"
  /* 1069 */ "andi. \0"
  /* 1076 */ "clrrdi. \0"
  /* 1085 */ "insrdi. \0"
  /* 1094 */ "rotrdi. \0"
  /* 1103 */ "extrdi. \0"
  /* 1112 */ "mtfsfi. \0"
  /* 1121 */ "extswsli. \0"
  /* 1132 */ "rldimi. \0"
  /* 1141 */ "rlwimi. \0"
  /* 1150 */ "srawi. \0"
  /* 1158 */ "clrlslwi. \0"
  /* 1169 */ "inslwi. \0"
  /* 1178 */ "extlwi. \0"
  /* 1187 */ "clrrwi. \0"
  /* 1196 */ "insrwi. \0"
  /* 1205 */ "rotrwi. \0"
  /* 1214 */ "extrwi. \0"
  /* 1223 */ "vstribl. \0"
  /* 1233 */ "rldcl. \0"
  /* 1241 */ "rldicl. \0"
  /* 1250 */ "ps_sel. \0"
  /* 1259 */ "fsel. \0"
  /* 1266 */ "vstrihl. \0"
  /* 1276 */ "ps_mul. \0"
  /* 1285 */ "fmul. \0"
  /* 1292 */ "treclaim. \0"
  /* 1303 */ "frim. \0"
  /* 1310 */ "rlwinm. \0"
  /* 1319 */ "rlwnm. \0"
  /* 1327 */ "bcdcfn. \0"
  /* 1336 */ "bcdcpsgn. \0"
  /* 1347 */ "fcpsgn. \0"
  /* 1356 */ "bcdsetsgn. \0"
  /* 1368 */ "tbegin. \0"
  /* 1377 */ "frin. \0"
  /* 1384 */ "bcdctn. \0"
  /* 1393 */ "addco. \0"
  /* 1401 */ "subfco. \0"
  /* 1410 */ "addo. \0"
  /* 1417 */ "mulldo. \0"
  /* 1426 */ "divdo. \0"
  /* 1434 */ "addeo. \0"
  /* 1442 */ "divdeo. \0"
  /* 1451 */ "subfeo. \0"
  /* 1460 */ "addmeo. \0"
  /* 1469 */ "subfmeo. \0"
  /* 1479 */ "divweo. \0"
  /* 1488 */ "addzeo. \0"
  /* 1497 */ "subfzeo. \0"
  /* 1507 */ "subfo. \0"
  /* 1515 */ "nego. \0"
  /* 1522 */ "divduo. \0"
  /* 1531 */ "divdeuo. \0"
  /* 1541 */ "divweuo. \0"
  /* 1551 */ "divwuo. \0"
  /* 1560 */ "mullwo. \0"
  /* 1569 */ "divwo. \0"
  /* 1577 */ "xvcmpgedp. \0"
  /* 1589 */ "xvcmpeqdp. \0"
  /* 1601 */ "xvcmpgtdp. \0"
  /* 1613 */ "vcmpbfp. \0"
  /* 1623 */ "vcmpgefp. \0"
  /* 1634 */ "vcmpeqfp. \0"
  /* 1645 */ "vcmpgtfp. \0"
  /* 1656 */ "frip. \0"
  /* 1663 */ "xvcmpgesp. \0"
  /* 1675 */ "xvcmpeqsp. \0"
  /* 1687 */ "frsp. \0"
  /* 1694 */ "xvcmpgtsp. \0"
  /* 1706 */ "icblq. \0"
  /* 1714 */ "bcdcfsq. \0"
  /* 1724 */ "bcdctsq. \0"
  /* 1734 */ "vcmpgtsq. \0"
  /* 1745 */ "vcmpequq. \0"
  /* 1756 */ "vcmpgtuq. \0"
  /* 1767 */ "vstribr. \0"
  /* 1777 */ "rldcr. \0"
  /* 1785 */ "rldicr. \0"
  /* 1794 */ "vstrihr. \0"
  /* 1804 */ "ps_mr. \0"
  /* 1812 */ "fmr. \0"
  /* 1818 */ "nor. \0"
  /* 1824 */ "xor. \0"
  /* 1830 */ "bcdsr. \0"
  /* 1838 */ "tsr. \0"
  /* 1844 */ "ps_abs. \0"
  /* 1853 */ "fabs. \0"
  /* 1860 */ "ps_nabs. \0"
  /* 1870 */ "fnabs. \0"
  /* 1878 */ "fsubs. \0"
  /* 1886 */ "fmsubs. \0"
  /* 1895 */ "fnmsubs. \0"
  /* 1905 */ "bcds. \0"
  /* 1912 */ "fadds. \0"
  /* 1920 */ "fmadds. \0"
  /* 1929 */ "fnmadds. \0"
  /* 1939 */ "fcfids. \0"
  /* 1948 */ "ps_res. \0"
  /* 1957 */ "fres. \0"
  /* 1964 */ "frsqrtes. \0"
  /* 1975 */ "mffs. \0"
  /* 1982 */ "andis. \0"
  /* 1990 */ "fmuls. \0"
  /* 1998 */ "fsqrts. \0"
  /* 2007 */ "bcdus. \0"
  /* 2015 */ "fcfidus. \0"
  /* 2025 */ "fdivs. \0"
  /* 2033 */ "tabort. \0"
  /* 2042 */ "fsqrt. \0"
  /* 2050 */ "mulhdu. \0"
  /* 2059 */ "fcfidu. \0"
  /* 2068 */ "fctidu. \0"
  /* 2077 */ "divdu. \0"
  /* 2085 */ "divdeu. \0"
  /* 2094 */ "divweu. \0"
  /* 2103 */ "mulhwu. \0"
  /* 2112 */ "fctiwu. \0"
  /* 2121 */ "divwu. \0"
  /* 2129 */ "ps_div. \0"
  /* 2138 */ "fdiv. \0"
  /* 2145 */ "eqv. \0"
  /* 2151 */ "sraw. \0"
  /* 2158 */ "vcmpnew. \0"
  /* 2168 */ "mulhw. \0"
  /* 2176 */ "fctiw. \0"
  /* 2184 */ "mullw. \0"
  /* 2192 */ "slw. \0"
  /* 2198 */ "srw. \0"
  /* 2204 */ "vcmpgtsw. \0"
  /* 2215 */ "extsw. \0"
  /* 2223 */ "vcmpequw. \0"
  /* 2234 */ "vcmpgtuw. \0"
  /* 2245 */ "divw. \0"
  /* 2252 */ "vcmpnezw. \0"
  /* 2263 */ "cntlzw. \0"
  /* 2272 */ "cnttzw. \0"
  /* 2281 */ "stbcx. \0"
  /* 2289 */ "stdcx. \0"
  /* 2297 */ "sthcx. \0"
  /* 2305 */ "stwcx. \0"
  /* 2313 */ "tlbsx. \0"
  /* 2321 */ "fctidz. \0"
  /* 2330 */ "bcdcfz. \0"
  /* 2339 */ "friz. \0"
  /* 2346 */ "bcdctz. \0"
  /* 2355 */ "fctiduz. \0"
  /* 2365 */ "fctiwuz. \0"
  /* 2375 */ "fctiwz. \0"
  /* 2384 */ "ps_merge00 \0"
  /* 2396 */ "ps_merge10 \0"
  /* 2408 */ "mtfsb0 \0"
  /* 2416 */ "ps_sum0 \0"
  /* 2425 */ "ps_cmpo0 \0"
  /* 2435 */ "ps_madds0 \0"
  /* 2446 */ "ps_muls0 \0"
  /* 2456 */ "ps_cmpu0 \0"
  /* 2466 */ "ps_merge01 \0"
  /* 2478 */ "ps_merge11 \0"
  /* 2490 */ "mtfsb1 \0"
  /* 2498 */ "ps_sum1 \0"
  /* 2507 */ "ps_cmpo1 \0"
  /* 2517 */ "ps_madds1 \0"
  /* 2528 */ "ps_muls1 \0"
  /* 2538 */ "ps_cmpu1 \0"
  /* 2548 */ "#ATOMIC_CMP_SWAP_I32 \0"
  /* 2570 */ "pmxvbf16ger2 \0"
  /* 2584 */ "pmxvf16ger2 \0"
  /* 2597 */ "pmxvi16ger2 \0"
  /* 2610 */ "pmxvi8ger4 \0"
  /* 2622 */ "#ATOMIC_CMP_SWAP_I16 \0"
  /* 2644 */ "xvcvspbf16 \0"
  /* 2656 */ "#TC_RETURNa8 \0"
  /* 2670 */ "#TC_RETURNd8 \0"
  /* 2684 */ "#TC_RETURNr8 \0"
  /* 2698 */ "pmxvi4ger8 \0"
  /* 2710 */ "#BUILD_UACC \0"
  /* 2723 */ "#ADJCALLSTACKDOWN \0"
  /* 2742 */ "#ADJCALLSTACKUP \0"
  /* 2759 */ "#TC_RETURNa \0"
  /* 2772 */ "evmhegsmfaa \0"
  /* 2785 */ "evmhogsmfaa \0"
  /* 2798 */ "evmwsmfaa \0"
  /* 2809 */ "evmwssfaa \0"
  /* 2820 */ "evmhegsmiaa \0"
  /* 2833 */ "evmhogsmiaa \0"
  /* 2846 */ "evmwsmiaa \0"
  /* 2857 */ "evmhegumiaa \0"
  /* 2870 */ "evmhogumiaa \0"
  /* 2883 */ "evmwumiaa \0"
  /* 2894 */ "dcba \0"
  /* 2900 */ "bca \0"
  /* 2905 */ "evmhesmfa \0"
  /* 2916 */ "evmwhsmfa \0"
  /* 2927 */ "evmhosmfa \0"
  /* 2938 */ "evmwsmfa \0"
  /* 2948 */ "evmhessfa \0"
  /* 2959 */ "evmwhssfa \0"
  /* 2970 */ "evmhossfa \0"
  /* 2981 */ "evmwssfa \0"
  /* 2991 */ "plha \0"
  /* 2997 */ "evmhesmia \0"
  /* 3008 */ "evmwhsmia \0"
  /* 3019 */ "evmhosmia \0"
  /* 3030 */ "evmwsmia \0"
  /* 3040 */ "evmheumia \0"
  /* 3051 */ "evmwhumia \0"
  /* 3062 */ "evmwlumia \0"
  /* 3073 */ "evmhoumia \0"
  /* 3084 */ "evmwumia \0"
  /* 3094 */ "bla \0"
  /* 3099 */ "bcla \0"
  /* 3105 */ "bdzla \0"
  /* 3112 */ "bdnzla \0"
  /* 3120 */ "evmra \0"
  /* 3127 */ "plwa \0"
  /* 3133 */ "mtvsrwa \0"
  /* 3142 */ "bdza \0"
  /* 3148 */ "bdnza \0"
  /* 3155 */ "vsrab \0"
  /* 3162 */ "rfebb \0"
  /* 3169 */ "vcntmbb \0"
  /* 3178 */ "xvtlsbb \0"
  /* 3187 */ "vclzlsbb \0"
  /* 3197 */ "vctzlsbb \0"
  /* 3207 */ "vcmpneb \0"
  /* 3216 */ "vmrghb \0"
  /* 3224 */ "xxspltib \0"
  /* 3234 */ "vmrglb \0"
  /* 3242 */ "vclrlb \0"
  /* 3250 */ "vrlb \0"
  /* 3256 */ "vslb \0"
  /* 3262 */ "vpmsumb \0"
  /* 3271 */ "vgnb \0"
  /* 3277 */ "cmpb \0"
  /* 3283 */ "cmpeqb \0"
  /* 3291 */ "cmprb \0"
  /* 3298 */ "vclrrb \0"
  /* 3306 */ "vsrb \0"
  /* 3312 */ "vmulesb \0"
  /* 3321 */ "vavgsb \0"
  /* 3329 */ "vupkhsb \0"
  /* 3338 */ "vspltisb \0"
  /* 3348 */ "vupklsb \0"
  /* 3357 */ "vminsb \0"
  /* 3365 */ "vmulosb \0"
  /* 3374 */ "vcmpgtsb \0"
  /* 3384 */ "evextsb \0"
  /* 3393 */ "vmaxsb \0"
  /* 3401 */ "setb \0"
  /* 3407 */ "mftb \0"
  /* 3413 */ "vspltb \0"
  /* 3421 */ "vpopcntb \0"
  /* 3431 */ "vinsertb \0"
  /* 3441 */ "pstb \0"
  /* 3447 */ "vabsdub \0"
  /* 3456 */ "vmuleub \0"
  /* 3465 */ "vavgub \0"
  /* 3473 */ "vminub \0"
  /* 3481 */ "vmuloub \0"
  /* 3490 */ "vcmpequb \0"
  /* 3500 */ "ps_sub \0"
  /* 3508 */ "efdsub \0"
  /* 3516 */ "fsub \0"
  /* 3522 */ "ps_msub \0"
  /* 3531 */ "fmsub \0"
  /* 3538 */ "ps_nmsub \0"
  /* 3548 */ "fnmsub \0"
  /* 3556 */ "efssub \0"
  /* 3564 */ "evfssub \0"
  /* 3573 */ "vextractub \0"
  /* 3585 */ "vcmpgtub \0"
  /* 3595 */ "vmaxub \0"
  /* 3603 */ "xxblendvb \0"
  /* 3614 */ "vcmpnezb \0"
  /* 3624 */ "vclzb \0"
  /* 3631 */ "vctzb \0"
  /* 3638 */ "setnbc \0"
  /* 3646 */ "setbc \0"
  /* 3653 */ "xxmfacc \0"
  /* 3662 */ "xxmtacc \0"
  /* 3671 */ "addc \0"
  /* 3677 */ "xxlandc \0"
  /* 3686 */ "crandc \0"
  /* 3694 */ "evandc \0"
  /* 3702 */ "subfc \0"
  /* 3709 */ "subic \0"
  /* 3716 */ "addic \0"
  /* 3723 */ "rldic \0"
  /* 3730 */ "subfic \0"
  /* 3738 */ "xsrdpic \0"
  /* 3747 */ "xvrdpic \0"
  /* 3756 */ "xvrspic \0"
  /* 3765 */ "icblc \0"
  /* 3772 */ "brinc \0"
  /* 3779 */ "sync \0"
  /* 3785 */ "xxlorc \0"
  /* 3793 */ "crorc \0"
  /* 3800 */ "evorc \0"
  /* 3807 */ "sc \0"
  /* 3811 */ "vextsb2d \0"
  /* 3821 */ "vextsh2d \0"
  /* 3831 */ "vextsw2d \0"
  /* 3841 */ "#TC_RETURNd \0"
  /* 3854 */ "vshasigmad \0"
  /* 3866 */ "vsrad \0"
  /* 3873 */ "vgbbd \0"
  /* 3880 */ "vcntmbd \0"
  /* 3889 */ "vprtybd \0"
  /* 3898 */ "ps_add \0"
  /* 3906 */ "efdadd \0"
  /* 3914 */ "fadd \0"
  /* 3920 */ "ps_madd \0"
  /* 3929 */ "fmadd \0"
  /* 3936 */ "ps_nmadd \0"
  /* 3946 */ "fnmadd \0"
  /* 3954 */ "efsadd \0"
  /* 3962 */ "evfsadd \0"
  /* 3971 */ "evldd \0"
  /* 3978 */ "mtvsrdd \0"
  /* 3987 */ "evstdd \0"
  /* 3995 */ "vcfuged \0"
  /* 4004 */ "efscfd \0"
  /* 4012 */ "plfd \0"
  /* 4018 */ "pstfd \0"
  /* 4025 */ "vnegd \0"
  /* 4032 */ "maddhd \0"
  /* 4040 */ "mulhd \0"
  /* 4047 */ "fcfid \0"
  /* 4054 */ "efdcfsid \0"
  /* 4064 */ "fctid \0"
  /* 4071 */ "efdcfuid \0"
  /* 4081 */ "tlbld \0"
  /* 4088 */ "maddld \0"
  /* 4096 */ "vmulld \0"
  /* 4104 */ "cmpld \0"
  /* 4111 */ "mfvsrld \0"
  /* 4120 */ "vrld \0"
  /* 4126 */ "vsld \0"
  /* 4132 */ "vbpermd \0"
  /* 4141 */ "vpmsumd \0"
  /* 4150 */ "xxland \0"
  /* 4158 */ "xxlnand \0"
  /* 4167 */ "crnand \0"
  /* 4175 */ "evnand \0"
  /* 4183 */ "crand \0"
  /* 4190 */ "evand \0"
  /* 4197 */ "vpdepd \0"
  /* 4205 */ "cmpd \0"
  /* 4211 */ "xxbrd \0"
  /* 4218 */ "mtmsrd \0"
  /* 4226 */ "mfvsrd \0"
  /* 4234 */ "mtvsrd \0"
  /* 4242 */ "vmodsd \0"
  /* 4250 */ "vmulesd \0"
  /* 4259 */ "vdivesd \0"
  /* 4268 */ "vmulhsd \0"
  /* 4277 */ "vminsd \0"
  /* 4285 */ "vinsd \0"
  /* 4292 */ "vmulosd \0"
  /* 4301 */ "vcmpgtsd \0"
  /* 4311 */ "vdivsd \0"
  /* 4319 */ "vmaxsd \0"
  /* 4327 */ "plxsd \0"
  /* 4334 */ "pstxsd \0"
  /* 4342 */ "vextractd \0"
  /* 4353 */ "vpopcntd \0"
  /* 4363 */ "vinsertd \0"
  /* 4373 */ "pstd \0"
  /* 4379 */ "vpextd \0"
  /* 4387 */ "vmsumcud \0"
  /* 4397 */ "vmodud \0"
  /* 4405 */ "vmuleud \0"
  /* 4414 */ "vdiveud \0"
  /* 4423 */ "vmulhud \0"
  /* 4432 */ "vminud \0"
  /* 4440 */ "vmuloud \0"
  /* 4449 */ "vcmpequd \0"
  /* 4459 */ "vcmpgtud \0"
  /* 4469 */ "vdivud \0"
  /* 4477 */ "vmaxud \0"
  /* 4485 */ "xxblendvd \0"
  /* 4496 */ "divd \0"
  /* 4502 */ "vclzd \0"
  /* 4509 */ "cntlzd \0"
  /* 4517 */ "vctzd \0"
  /* 4524 */ "cnttzd \0"
  /* 4532 */ "mfbhrbe \0"
  /* 4541 */ "mffsce \0"
  /* 4549 */ "adde \0"
  /* 4555 */ "divde \0"
  /* 4562 */ "slbmfee \0"
  /* 4571 */ "wrtee \0"
  /* 4578 */ "subfe \0"
  /* 4585 */ "evlwhe \0"
  /* 4593 */ "evstwhe \0"
  /* 4602 */ "slbie \0"
  /* 4609 */ "tlbie \0"
  /* 4616 */ "addme \0"
  /* 4623 */ "subfme \0"
  /* 4631 */ "tlbre \0"
  /* 4638 */ "fre \0"
  /* 4643 */ "slbmte \0"
  /* 4651 */ "ps_rsqrte \0"
  /* 4662 */ "frsqrte \0"
  /* 4671 */ "paste \0"
  /* 4678 */ "tlbwe \0"
  /* 4685 */ "divwe \0"
  /* 4692 */ "evstwwe \0"
  /* 4701 */ "addze \0"
  /* 4708 */ "subfze \0"
  /* 4716 */ "dcbf \0"
  /* 4722 */ "subf \0"
  /* 4728 */ "evmhesmf \0"
  /* 4738 */ "evmwhsmf \0"
  /* 4748 */ "evmhosmf \0"
  /* 4758 */ "evmwsmf \0"
  /* 4767 */ "mcrf \0"
  /* 4773 */ "mfocrf \0"
  /* 4781 */ "mtocrf \0"
  /* 4789 */ "mtcrf \0"
  /* 4796 */ "efdcfsf \0"
  /* 4805 */ "efscfsf \0"
  /* 4814 */ "evfscfsf \0"
  /* 4824 */ "mtfsf \0"
  /* 4831 */ "evmhessf \0"
  /* 4841 */ "evmwhssf \0"
  /* 4851 */ "evmhossf \0"
  /* 4861 */ "evmwssf \0"
  /* 4870 */ "efdctsf \0"
  /* 4879 */ "efsctsf \0"
  /* 4888 */ "evfsctsf \0"
  /* 4898 */ "efdcfuf \0"
  /* 4907 */ "efscfuf \0"
  /* 4916 */ "evfscfuf \0"
  /* 4926 */ "efdctuf \0"
  /* 4935 */ "efsctuf \0"
  /* 4944 */ "slbieg \0"
  /* 4952 */ "ps_neg \0"
  /* 4960 */ "efdneg \0"
  /* 4968 */ "fneg \0"
  /* 4974 */ "efsneg \0"
  /* 4982 */ "evfsneg \0"
  /* 4991 */ "evneg \0"
  /* 4998 */ "vsrah \0"
  /* 5005 */ "vcntmbh \0"
  /* 5014 */ "evldh \0"
  /* 5021 */ "evstdh \0"
  /* 5029 */ "vcmpneh \0"
  /* 5038 */ "vmrghh \0"
  /* 5046 */ "vmrglh \0"
  /* 5054 */ "vrlh \0"
  /* 5060 */ "vslh \0"
  /* 5066 */ "vpmsumh \0"
  /* 5075 */ "xxbrh \0"
  /* 5082 */ "vsrh \0"
  /* 5088 */ "vmulesh \0"
  /* 5097 */ "vavgsh \0"
  /* 5105 */ "vupkhsh \0"
  /* 5114 */ "vspltish \0"
  /* 5124 */ "vupklsh \0"
  /* 5133 */ "vminsh \0"
  /* 5141 */ "vmulosh \0"
  /* 5150 */ "vcmpgtsh \0"
  /* 5160 */ "evextsh \0"
  /* 5169 */ "vmaxsh \0"
  /* 5177 */ "vsplth \0"
  /* 5185 */ "vpopcnth \0"
  /* 5195 */ "vinserth \0"
  /* 5205 */ "psth \0"
  /* 5211 */ "vabsduh \0"
  /* 5220 */ "vmuleuh \0"
  /* 5229 */ "vavguh \0"
  /* 5237 */ "vminuh \0"
  /* 5245 */ "vmulouh \0"
  /* 5254 */ "vcmpequh \0"
  /* 5264 */ "vextractuh \0"
  /* 5276 */ "vcmpgtuh \0"
  /* 5286 */ "vmaxuh \0"
  /* 5294 */ "xxblendvh \0"
  /* 5305 */ "vcmpnezh \0"
  /* 5315 */ "vclzh \0"
  /* 5322 */ "vctzh \0"
  /* 5329 */ "dcbi \0"
  /* 5335 */ "icbi \0"
  /* 5341 */ "vsldbi \0"
  /* 5349 */ "vsrdbi \0"
  /* 5357 */ "subi \0"
  /* 5363 */ "dccci \0"
  /* 5370 */ "iccci \0"
  /* 5377 */ "sradi \0"
  /* 5384 */ "paddi \0"
  /* 5391 */ "cmpldi \0"
  /* 5399 */ "clrlsldi \0"
  /* 5409 */ "extldi \0"
  /* 5417 */ "xxpermdi \0"
  /* 5427 */ "cmpdi \0"
  /* 5434 */ "clrrdi \0"
  /* 5442 */ "insrdi \0"
  /* 5450 */ "rotrdi \0"
  /* 5458 */ "extrdi \0"
  /* 5466 */ "tdi \0"
  /* 5471 */ "wrteei \0"
  /* 5479 */ "mtfsfi \0"
  /* 5487 */ "evsplatfi \0"
  /* 5498 */ "evmergehi \0"
  /* 5509 */ "evmergelohi \0"
  /* 5522 */ "tlbli \0"
  /* 5529 */ "mulli \0"
  /* 5536 */ "pli \0"
  /* 5541 */ "extswsli \0"
  /* 5551 */ "mtvsrbmi \0"
  /* 5561 */ "vrldmi \0"
  /* 5569 */ "rldimi \0"
  /* 5577 */ "rlwimi \0"
  /* 5585 */ "vrlqmi \0"
  /* 5593 */ "evmhesmi \0"
  /* 5603 */ "evmwhsmi \0"
  /* 5613 */ "evmhosmi \0"
  /* 5623 */ "evmwsmi \0"
  /* 5632 */ "evmheumi \0"
  /* 5642 */ "evmwhumi \0"
  /* 5652 */ "evmwlumi \0"
  /* 5662 */ "evmhoumi \0"
  /* 5672 */ "evmwumi \0"
  /* 5681 */ "vrlwmi \0"
  /* 5689 */ "mffscrni \0"
  /* 5699 */ "mffscdrni \0"
  /* 5710 */ "vsldoi \0"
  /* 5718 */ "xsrdpi \0"
  /* 5726 */ "xvrdpi \0"
  /* 5734 */ "xsrqpi \0"
  /* 5742 */ "xvrspi \0"
  /* 5750 */ "xori \0"
  /* 5756 */ "efdcfsi \0"
  /* 5765 */ "efscfsi \0"
  /* 5774 */ "evfscfsi \0"
  /* 5784 */ "efdctsi \0"
  /* 5793 */ "efsctsi \0"
  /* 5802 */ "evfsctsi \0"
  /* 5812 */ "evsplati \0"
  /* 5822 */ "efdcfui \0"
  /* 5831 */ "efscfui \0"
  /* 5840 */ "evfscfui \0"
  /* 5850 */ "efdctui \0"
  /* 5859 */ "efsctui \0"
  /* 5868 */ "evfsctui \0"
  /* 5878 */ "srawi \0"
  /* 5885 */ "xxsldwi \0"
  /* 5894 */ "cmplwi \0"
  /* 5902 */ "evrlwi \0"
  /* 5910 */ "clrlslwi \0"
  /* 5920 */ "inslwi \0"
  /* 5928 */ "evslwi \0"
  /* 5936 */ "extlwi \0"
  /* 5944 */ "cmpwi \0"
  /* 5951 */ "clrrwi \0"
  /* 5959 */ "insrwi \0"
  /* 5967 */ "rotrwi \0"
  /* 5975 */ "extrwi \0"
  /* 5983 */ "lswi \0"
  /* 5989 */ "stswi \0"
  /* 5996 */ "twi \0"
  /* 6001 */ "tcheck \0"
  /* 6009 */ "psq_l \0"
  /* 6016 */ "dcbz_l \0"
  /* 6024 */ "xxeval \0"
  /* 6032 */ "vstribl \0"
  /* 6041 */ "bcl \0"
  /* 6046 */ "rldcl \0"
  /* 6053 */ "rldicl \0"
  /* 6061 */ "tlbiel \0"
  /* 6069 */ "ps_sel \0"
  /* 6077 */ "fsel \0"
  /* 6083 */ "isel \0"
  /* 6089 */ "vsel \0"
  /* 6095 */ "xxsel \0"
  /* 6102 */ "dcbfl \0"
  /* 6109 */ "vstrihl \0"
  /* 6118 */ "lxvll \0"
  /* 6125 */ "stxvll \0"
  /* 6133 */ "bclrl \0"
  /* 6140 */ "bcctrl \0"
  /* 6148 */ "mffsl \0"
  /* 6155 */ "lvsl \0"
  /* 6161 */ "ps_mul \0"
  /* 6169 */ "efdmul \0"
  /* 6177 */ "fmul \0"
  /* 6183 */ "efsmul \0"
  /* 6191 */ "evfsmul \0"
  /* 6200 */ "lxvl \0"
  /* 6206 */ "stxvl \0"
  /* 6213 */ "lvxl \0"
  /* 6219 */ "stvxl \0"
  /* 6226 */ "dcbzl \0"
  /* 6233 */ "bdzl \0"
  /* 6239 */ "bdnzl \0"
  /* 6246 */ "vexpandbm \0"
  /* 6257 */ "vmsummbm \0"
  /* 6267 */ "mtvsrbm \0"
  /* 6276 */ "vextractbm \0"
  /* 6288 */ "vsububm \0"
  /* 6297 */ "vaddubm \0"
  /* 6306 */ "vmsumubm \0"
  /* 6316 */ "xxgenpcvbm \0"
  /* 6328 */ "vexpanddm \0"
  /* 6339 */ "mtvsrdm \0"
  /* 6348 */ "vextractdm \0"
  /* 6360 */ "vsubudm \0"
  /* 6369 */ "vaddudm \0"
  /* 6378 */ "vmsumudm \0"
  /* 6388 */ "xxgenpcvdm \0"
  /* 6400 */ "vclzdm \0"
  /* 6408 */ "cntlzdm \0"
  /* 6417 */ "vctzdm \0"
  /* 6425 */ "cnttzdm \0"
  /* 6434 */ "vexpandhm \0"
  /* 6445 */ "mtvsrhm \0"
  /* 6454 */ "vmsumshm \0"
  /* 6464 */ "vextracthm \0"
  /* 6476 */ "vsubuhm \0"
  /* 6485 */ "vmladduhm \0"
  /* 6496 */ "vadduhm \0"
  /* 6505 */ "vmsumuhm \0"
  /* 6515 */ "xxgenpcvhm \0"
  /* 6527 */ "vrfim \0"
  /* 6534 */ "xsrdpim \0"
  /* 6543 */ "xvrdpim \0"
  /* 6552 */ "xvrspim \0"
  /* 6561 */ "frim \0"
  /* 6567 */ "vrldnm \0"
  /* 6575 */ "rlwinm \0"
  /* 6583 */ "vrlqnm \0"
  /* 6591 */ "vrlwnm \0"
  /* 6599 */ "vexpandqm \0"
  /* 6610 */ "mtvsrqm \0"
  /* 6619 */ "vextractqm \0"
  /* 6631 */ "vsubuqm \0"
  /* 6640 */ "vadduqm \0"
  /* 6649 */ "vsubeuqm \0"
  /* 6659 */ "vaddeuqm \0"
  /* 6669 */ "vperm \0"
  /* 6676 */ "xxperm \0"
  /* 6684 */ "vpkudum \0"
  /* 6693 */ "vpkuhum \0"
  /* 6702 */ "vpkuwum \0"
  /* 6711 */ "vexpandwm \0"
  /* 6722 */ "mtvsrwm \0"
  /* 6731 */ "vextractwm \0"
  /* 6743 */ "vsubuwm \0"
  /* 6752 */ "vadduwm \0"
  /* 6761 */ "vmuluwm \0"
  /* 6770 */ "xxgenpcvwm \0"
  /* 6782 */ "evmhegsmfan \0"
  /* 6795 */ "evmhogsmfan \0"
  /* 6808 */ "evmwsmfan \0"
  /* 6819 */ "evmwssfan \0"
  /* 6830 */ "evmhegsmian \0"
  /* 6843 */ "evmhogsmian \0"
  /* 6856 */ "evmwsmian \0"
  /* 6867 */ "evmhegumian \0"
  /* 6880 */ "evmhogumian \0"
  /* 6893 */ "evmwumian \0"
  /* 6904 */ "fcpsgn \0"
  /* 6912 */ "vrfin \0"
  /* 6919 */ "frin \0"
  /* 6925 */ "mfsrin \0"
  /* 6933 */ "mtsrin \0"
  /* 6941 */ "pmxvbf16ger2nn \0"
  /* 6957 */ "pmxvf16ger2nn \0"
  /* 6972 */ "pmxvf32gernn \0"
  /* 6986 */ "pmxvf64gernn \0"
  /* 7000 */ "pmxvbf16ger2pn \0"
  /* 7016 */ "pmxvf16ger2pn \0"
  /* 7031 */ "xscvspdpn \0"
  /* 7042 */ "pmxvf32gerpn \0"
  /* 7056 */ "pmxvf64gerpn \0"
  /* 7070 */ "xvcvbf16spn \0"
  /* 7083 */ "xscvdpspn \0"
  /* 7094 */ "darn \0"
  /* 7100 */ "mffscrn \0"
  /* 7109 */ "mffscdrn \0"
  /* 7119 */ "addco \0"
  /* 7126 */ "subfco \0"
  /* 7134 */ "addo \0"
  /* 7140 */ "mulldo \0"
  /* 7148 */ "divdo \0"
  /* 7155 */ "addeo \0"
  /* 7162 */ "divdeo \0"
  /* 7170 */ "subfeo \0"
  /* 7178 */ "addmeo \0"
  /* 7186 */ "subfmeo \0"
  /* 7195 */ "divweo \0"
  /* 7203 */ "addzeo \0"
  /* 7211 */ "subfzeo \0"
  /* 7220 */ "subfo \0"
  /* 7227 */ "nego \0"
  /* 7233 */ "evstwho \0"
  /* 7242 */ "evmergelo \0"
  /* 7253 */ "evmergehilo \0"
  /* 7266 */ "vslo \0"
  /* 7272 */ "xscvqpdpo \0"
  /* 7283 */ "fcmpo \0"
  /* 7290 */ "xsnmsubqpo \0"
  /* 7302 */ "xsmsubqpo \0"
  /* 7313 */ "xssubqpo \0"
  /* 7323 */ "xsnmaddqpo \0"
  /* 7335 */ "xsmaddqpo \0"
  /* 7346 */ "xsaddqpo \0"
  /* 7356 */ "xsmulqpo \0"
  /* 7366 */ "xssqrtqpo \0"
  /* 7377 */ "xsdivqpo \0"
  /* 7387 */ "vsro \0"
  /* 7393 */ "divduo \0"
  /* 7401 */ "divdeuo \0"
  /* 7410 */ "divweuo \0"
  /* 7419 */ "divwuo \0"
  /* 7427 */ "mullwo \0"
  /* 7435 */ "divwo \0"
  /* 7442 */ "evstwwo \0"
  /* 7451 */ "xsnmsubadp \0"
  /* 7463 */ "xvnmsubadp \0"
  /* 7475 */ "xsmsubadp \0"
  /* 7486 */ "xvmsubadp \0"
  /* 7497 */ "xsnmaddadp \0"
  /* 7509 */ "xvnmaddadp \0"
  /* 7521 */ "xsmaddadp \0"
  /* 7532 */ "xvmaddadp \0"
  /* 7543 */ "xssubdp \0"
  /* 7552 */ "xvsubdp \0"
  /* 7561 */ "xststdcdp \0"
  /* 7572 */ "xvtstdcdp \0"
  /* 7583 */ "xsmincdp \0"
  /* 7593 */ "xsmaxcdp \0"
  /* 7603 */ "xsadddp \0"
  /* 7612 */ "xvadddp \0"
  /* 7621 */ "xscvsxddp \0"
  /* 7632 */ "xvcvsxddp \0"
  /* 7643 */ "xscvuxddp \0"
  /* 7654 */ "xvcvuxddp \0"
  /* 7665 */ "xscmpgedp \0"
  /* 7676 */ "xvcmpgedp \0"
  /* 7687 */ "xsredp \0"
  /* 7695 */ "xvredp \0"
  /* 7703 */ "xsrsqrtedp \0"
  /* 7715 */ "xvrsqrtedp \0"
  /* 7727 */ "xsnegdp \0"
  /* 7736 */ "xvnegdp \0"
  /* 7745 */ "xsxsigdp \0"
  /* 7755 */ "xvxsigdp \0"
  /* 7765 */ "xxspltidp \0"
  /* 7776 */ "xsminjdp \0"
  /* 7786 */ "xsmaxjdp \0"
  /* 7796 */ "xsmuldp \0"
  /* 7805 */ "xvmuldp \0"
  /* 7814 */ "xsnmsubmdp \0"
  /* 7826 */ "xvnmsubmdp \0"
  /* 7838 */ "xsmsubmdp \0"
  /* 7849 */ "xvmsubmdp \0"
  /* 7860 */ "xsnmaddmdp \0"
  /* 7872 */ "xvnmaddmdp \0"
  /* 7884 */ "xsmaddmdp \0"
  /* 7895 */ "xvmaddmdp \0"
  /* 7906 */ "xscpsgndp \0"
  /* 7917 */ "xvcpsgndp \0"
  /* 7928 */ "xsmindp \0"
  /* 7937 */ "xvmindp \0"
  /* 7946 */ "xscmpodp \0"
  /* 7956 */ "xscvhpdp \0"
  /* 7966 */ "xscvqpdp \0"
  /* 7976 */ "xscvspdp \0"
  /* 7986 */ "xvcvspdp \0"
  /* 7996 */ "xsiexpdp \0"
  /* 8006 */ "xviexpdp \0"
  /* 8016 */ "xscmpexpdp \0"
  /* 8028 */ "xsxexpdp \0"
  /* 8038 */ "xvxexpdp \0"
  /* 8048 */ "xscmpeqdp \0"
  /* 8059 */ "xvcmpeqdp \0"
  /* 8070 */ "xsnabsdp \0"
  /* 8080 */ "xvnabsdp \0"
  /* 8090 */ "xsabsdp \0"
  /* 8099 */ "xvabsdp \0"
  /* 8108 */ "xscmpgtdp \0"
  /* 8119 */ "xvcmpgtdp \0"
  /* 8130 */ "xssqrtdp \0"
  /* 8140 */ "xstsqrtdp \0"
  /* 8151 */ "xvtsqrtdp \0"
  /* 8162 */ "xvsqrtdp \0"
  /* 8172 */ "xscmpudp \0"
  /* 8182 */ "xsdivdp \0"
  /* 8191 */ "xstdivdp \0"
  /* 8201 */ "xvtdivdp \0"
  /* 8211 */ "xvdivdp \0"
  /* 8220 */ "xvcvsxwdp \0"
  /* 8231 */ "xvcvuxwdp \0"
  /* 8242 */ "xsmaxdp \0"
  /* 8251 */ "xvmaxdp \0"
  /* 8260 */ "dcbfep \0"
  /* 8268 */ "icbiep \0"
  /* 8276 */ "dcbzlep \0"
  /* 8285 */ "dcbtep \0"
  /* 8293 */ "dcbstep \0"
  /* 8302 */ "dcbtstep \0"
  /* 8312 */ "dcbzep \0"
  /* 8320 */ "vcmpbfp \0"
  /* 8329 */ "vnmsubfp \0"
  /* 8339 */ "vsubfp \0"
  /* 8347 */ "vmaddfp \0"
  /* 8356 */ "vaddfp \0"
  /* 8364 */ "vlogefp \0"
  /* 8373 */ "vcmpgefp \0"
  /* 8383 */ "vrefp \0"
  /* 8390 */ "vexptefp \0"
  /* 8400 */ "vrsqrtefp \0"
  /* 8411 */ "vminfp \0"
  /* 8419 */ "vcmpeqfp \0"
  /* 8429 */ "vcmpgtfp \0"
  /* 8439 */ "vmaxfp \0"
  /* 8447 */ "xscvdphp \0"
  /* 8457 */ "xvcvsphp \0"
  /* 8467 */ "vrfip \0"
  /* 8474 */ "xsrdpip \0"
  /* 8483 */ "xvrdpip \0"
  /* 8492 */ "xvrspip \0"
  /* 8501 */ "frip \0"
  /* 8507 */ "dcbflp \0"
  /* 8515 */ "pmxvbf16ger2np \0"
  /* 8531 */ "pmxvf16ger2np \0"
  /* 8546 */ "pmxvf32gernp \0"
  /* 8560 */ "pmxvf64gernp \0"
  /* 8574 */ "pmxvbf16ger2pp \0"
  /* 8590 */ "pmxvf16ger2pp \0"
  /* 8605 */ "pmxvi16ger2pp \0"
  /* 8620 */ "pmxvi8ger4pp \0"
  /* 8634 */ "pmxvi4ger8pp \0"
  /* 8648 */ "pmxvf32gerpp \0"
  /* 8662 */ "pmxvf64gerpp \0"
  /* 8676 */ "pmxvi16ger2spp \0"
  /* 8692 */ "pmxvi8ger4spp \0"
  /* 8707 */ "xsnmsubqp \0"
  /* 8718 */ "xsmsubqp \0"
  /* 8728 */ "xssubqp \0"
  /* 8737 */ "xststdcqp \0"
  /* 8748 */ "xsnmaddqp \0"
  /* 8759 */ "xsmaddqp \0"
  /* 8769 */ "xsaddqp \0"
  /* 8778 */ "xscvsdqp \0"
  /* 8788 */ "xscvudqp \0"
  /* 8798 */ "xsnegqp \0"
  /* 8807 */ "xsxsigqp \0"
  /* 8817 */ "xsmulqp \0"
  /* 8826 */ "xscpsgnqp \0"
  /* 8837 */ "xscmpoqp \0"
  /* 8847 */ "xscvdpqp \0"
  /* 8857 */ "xsiexpqp \0"
  /* 8867 */ "xscmpexpqp \0"
  /* 8879 */ "xsxexpqp \0"
  /* 8889 */ "xscvsqqp \0"
  /* 8899 */ "xscvuqqp \0"
  /* 8909 */ "xsnabsqp \0"
  /* 8919 */ "xsabsqp \0"
  /* 8928 */ "xssqrtqp \0"
  /* 8938 */ "xscmpuqp \0"
  /* 8948 */ "xsdivqp \0"
  /* 8957 */ "xsnmsubasp \0"
  /* 8969 */ "xvnmsubasp \0"
  /* 8981 */ "xsmsubasp \0"
  /* 8992 */ "xvmsubasp \0"
  /* 9003 */ "xsnmaddasp \0"
  /* 9015 */ "xvnmaddasp \0"
  /* 9027 */ "xsmaddasp \0"
  /* 9038 */ "xvmaddasp \0"
  /* 9049 */ "xssubsp \0"
  /* 9058 */ "xvsubsp \0"
  /* 9067 */ "xststdcsp \0"
  /* 9078 */ "xvtstdcsp \0"
  /* 9089 */ "xsaddsp \0"
  /* 9098 */ "xvaddsp \0"
  /* 9107 */ "xscvsxdsp \0"
  /* 9118 */ "xvcvsxdsp \0"
  /* 9129 */ "xscvuxdsp \0"
  /* 9140 */ "xvcvuxdsp \0"
  /* 9151 */ "xvcmpgesp \0"
  /* 9162 */ "xsresp \0"
  /* 9170 */ "xvresp \0"
  /* 9178 */ "xsrsqrtesp \0"
  /* 9190 */ "xvrsqrtesp \0"
  /* 9202 */ "xvnegsp \0"
  /* 9211 */ "xvxsigsp \0"
  /* 9221 */ "xsmulsp \0"
  /* 9230 */ "xvmulsp \0"
  /* 9239 */ "xsnmsubmsp \0"
  /* 9251 */ "xvnmsubmsp \0"
  /* 9263 */ "xsmsubmsp \0"
  /* 9274 */ "xvmsubmsp \0"
  /* 9285 */ "xsnmaddmsp \0"
  /* 9297 */ "xvnmaddmsp \0"
  /* 9309 */ "xsmaddmsp \0"
  /* 9320 */ "xvmaddmsp \0"
  /* 9331 */ "xvcpsgnsp \0"
  /* 9342 */ "xvminsp \0"
  /* 9351 */ "xscvdpsp \0"
  /* 9361 */ "xvcvdpsp \0"
  /* 9371 */ "xvcvhpsp \0"
  /* 9381 */ "xviexpsp \0"
  /* 9391 */ "xvxexpsp \0"
  /* 9401 */ "xvcmpeqsp \0"
  /* 9412 */ "frsp \0"
  /* 9418 */ "xsrsp \0"
  /* 9425 */ "xvnabssp \0"
  /* 9435 */ "xvabssp \0"
  /* 9444 */ "plxssp \0"
  /* 9452 */ "pstxssp \0"
  /* 9461 */ "xvcmpgtsp \0"
  /* 9472 */ "xssqrtsp \0"
  /* 9482 */ "xvtsqrtsp \0"
  /* 9493 */ "xvsqrtsp \0"
  /* 9503 */ "xsdivsp \0"
  /* 9512 */ "xvtdivsp \0"
  /* 9522 */ "xvdivsp \0"
  /* 9531 */ "xvcvsxwsp \0"
  /* 9542 */ "xvcvuxwsp \0"
  /* 9553 */ "xvmaxsp \0"
  /* 9562 */ "plxvp \0"
  /* 9569 */ "pstxvp \0"
  /* 9577 */ "xsrqpxp \0"
  /* 9586 */ "vextsd2q \0"
  /* 9596 */ "vsraq \0"
  /* 9603 */ "vprtybq \0"
  /* 9612 */ "efdcmpeq \0"
  /* 9622 */ "efscmpeq \0"
  /* 9632 */ "evfscmpeq \0"
  /* 9643 */ "evcmpeq \0"
  /* 9652 */ "efdtsteq \0"
  /* 9662 */ "efststeq \0"
  /* 9672 */ "evfststeq \0"
  /* 9683 */ "vrlq \0"
  /* 9689 */ "vslq \0"
  /* 9695 */ "vbpermq \0"
  /* 9704 */ "xxbrq \0"
  /* 9711 */ "vsrq \0"
  /* 9717 */ "vmodsq \0"
  /* 9725 */ "vdivesq \0"
  /* 9734 */ "vcmpsq \0"
  /* 9742 */ "vcmpgtsq \0"
  /* 9752 */ "vdivsq \0"
  /* 9760 */ "vmul10uq \0"
  /* 9770 */ "vmul10cuq \0"
  /* 9781 */ "vsubcuq \0"
  /* 9790 */ "vaddcuq \0"
  /* 9799 */ "vmul10ecuq \0"
  /* 9811 */ "vsubecuq \0"
  /* 9821 */ "vaddecuq \0"
  /* 9831 */ "vmoduq \0"
  /* 9839 */ "vmul10euq \0"
  /* 9850 */ "vdiveuq \0"
  /* 9859 */ "vcmpuq \0"
  /* 9867 */ "vcmpequq \0"
  /* 9877 */ "vcmpgtuq \0"
  /* 9887 */ "vdivuq \0"
  /* 9895 */ "#TC_RETURNr \0"
  /* 9908 */ "mbar \0"
  /* 9914 */ "vstribr \0"
  /* 9923 */ "setnbcr \0"
  /* 9932 */ "setbcr \0"
  /* 9940 */ "mfdcr \0"
  /* 9947 */ "rldcr \0"
  /* 9954 */ "mtdcr \0"
  /* 9961 */ "mfcr \0"
  /* 9967 */ "rldicr \0"
  /* 9975 */ "mfvscr \0"
  /* 9983 */ "mtvscr \0"
  /* 9991 */ "pmxvf32ger \0"
  /* 10003 */ "pmxvf64ger \0"
  /* 10015 */ "vncipher \0"
  /* 10025 */ "vcipher \0"
  /* 10034 */ "vstrihr \0"
  /* 10043 */ "bclr \0"
  /* 10049 */ "mflr \0"
  /* 10055 */ "mtlr \0"
  /* 10061 */ "ps_mr \0"
  /* 10068 */ "fmr \0"
  /* 10073 */ "mfpmr \0"
  /* 10080 */ "mtpmr \0"
  /* 10087 */ "vpermr \0"
  /* 10095 */ "xxpermr \0"
  /* 10104 */ "xxlor \0"
  /* 10111 */ "xxlnor \0"
  /* 10119 */ "crnor \0"
  /* 10126 */ "evnor \0"
  /* 10133 */ "cror \0"
  /* 10139 */ "evor \0"
  /* 10145 */ "xxlxor \0"
  /* 10153 */ "vpermxor \0"
  /* 10163 */ "crxor \0"
  /* 10170 */ "evxor \0"
  /* 10177 */ "mfspr \0"
  /* 10184 */ "mtspr \0"
  /* 10191 */ "mfsr \0"
  /* 10197 */ "mfmsr \0"
  /* 10204 */ "mtmsr \0"
  /* 10211 */ "mtsr \0"
  /* 10217 */ "lvsr \0"
  /* 10223 */ "bcctr \0"
  /* 10230 */ "mfctr \0"
  /* 10237 */ "mtctr \0"
  /* 10244 */ "pmxvi16ger2s \0"
  /* 10258 */ "ps_abs \0"
  /* 10266 */ "efdabs \0"
  /* 10274 */ "fabs \0"
  /* 10280 */ "ps_nabs \0"
  /* 10289 */ "efdnabs \0"
  /* 10298 */ "fnabs \0"
  /* 10305 */ "efsnabs \0"
  /* 10314 */ "evfsnabs \0"
  /* 10324 */ "efsabs \0"
  /* 10332 */ "evfsabs \0"
  /* 10341 */ "evabs \0"
  /* 10348 */ "vsum4sbs \0"
  /* 10358 */ "vsubsbs \0"
  /* 10367 */ "vaddsbs \0"
  /* 10376 */ "vsum4ubs \0"
  /* 10386 */ "vsububs \0"
  /* 10395 */ "vaddubs \0"
  /* 10404 */ "fsubs \0"
  /* 10411 */ "fmsubs \0"
  /* 10419 */ "fnmsubs \0"
  /* 10428 */ "fadds \0"
  /* 10435 */ "fmadds \0"
  /* 10443 */ "fnmadds \0"
  /* 10452 */ "fcfids \0"
  /* 10460 */ "dcbtds \0"
  /* 10468 */ "dcbtstds \0"
  /* 10478 */ "xscvdpsxds \0"
  /* 10490 */ "xvcvdpsxds \0"
  /* 10502 */ "xvcvspsxds \0"
  /* 10514 */ "xscvdpuxds \0"
  /* 10526 */ "xvcvdpuxds \0"
  /* 10538 */ "xvcvspuxds \0"
  /* 10550 */ "ps_res \0"
  /* 10558 */ "fres \0"
  /* 10564 */ "frsqrtes \0"
  /* 10574 */ "efdcfs \0"
  /* 10582 */ "mffs \0"
  /* 10588 */ "plfs \0"
  /* 10594 */ "mcrfs \0"
  /* 10601 */ "pstfs \0"
  /* 10608 */ "vsum4shs \0"
  /* 10618 */ "vsubshs \0"
  /* 10627 */ "vmhaddshs \0"
  /* 10638 */ "vmhraddshs \0"
  /* 10650 */ "vaddshs \0"
  /* 10659 */ "vmsumshs \0"
  /* 10669 */ "vsubuhs \0"
  /* 10678 */ "vadduhs \0"
  /* 10687 */ "vmsumuhs \0"
  /* 10697 */ "subis \0"
  /* 10704 */ "subpcis \0"
  /* 10713 */ "addpcis \0"
  /* 10722 */ "addis \0"
  /* 10729 */ "lis \0"
  /* 10734 */ "xoris \0"
  /* 10741 */ "evsrwis \0"
  /* 10750 */ "icbtls \0"
  /* 10758 */ "fmuls \0"
  /* 10765 */ "evlwhos \0"
  /* 10774 */ "vpksdss \0"
  /* 10783 */ "vpkshss \0"
  /* 10792 */ "vpkswss \0"
  /* 10801 */ "evcmpgts \0"
  /* 10811 */ "evcmplts \0"
  /* 10821 */ "fsqrts \0"
  /* 10829 */ "fcfidus \0"
  /* 10838 */ "vpksdus \0"
  /* 10847 */ "vpkudus \0"
  /* 10856 */ "vpkshus \0"
  /* 10865 */ "vpkuhus \0"
  /* 10874 */ "vpkswus \0"
  /* 10883 */ "vpkuwus \0"
  /* 10892 */ "fdivs \0"
  /* 10899 */ "evsrws \0"
  /* 10907 */ "mtvsrws \0"
  /* 10916 */ "vsum2sws \0"
  /* 10926 */ "vsubsws \0"
  /* 10935 */ "vaddsws \0"
  /* 10944 */ "vsumsws \0"
  /* 10953 */ "vsubuws \0"
  /* 10962 */ "vadduws \0"
  /* 10971 */ "evdivws \0"
  /* 10980 */ "xscvdpsxws \0"
  /* 10992 */ "xvcvdpsxws \0"
  /* 11004 */ "xvcvspsxws \0"
  /* 11016 */ "xscvdpuxws \0"
  /* 11028 */ "xvcvdpuxws \0"
  /* 11040 */ "xvcvspuxws \0"
  /* 11052 */ "vctsxs \0"
  /* 11060 */ "vctuxs \0"
  /* 11068 */ "ldat \0"
  /* 11074 */ "stdat \0"
  /* 11081 */ "evlhhesplat \0"
  /* 11094 */ "evlwhsplat \0"
  /* 11106 */ "evlhhossplat \0"
  /* 11120 */ "evlhhousplat \0"
  /* 11134 */ "evlwwsplat \0"
  /* 11146 */ "lwat \0"
  /* 11152 */ "stwat \0"
  /* 11159 */ "dcbt \0"
  /* 11165 */ "icbt \0"
  /* 11171 */ "dcbtct \0"
  /* 11179 */ "dcbtstct \0"
  /* 11189 */ "efdcmpgt \0"
  /* 11199 */ "efscmpgt \0"
  /* 11209 */ "evfscmpgt \0"
  /* 11220 */ "efdtstgt \0"
  /* 11230 */ "efststgt \0"
  /* 11240 */ "evfststgt \0"
  /* 11251 */ "wait \0"
  /* 11257 */ "efdcmplt \0"
  /* 11267 */ "efscmplt \0"
  /* 11277 */ "evfscmplt \0"
  /* 11288 */ "efdtstlt \0"
  /* 11298 */ "efststlt \0"
  /* 11308 */ "evfststlt \0"
  /* 11319 */ "fsqrt \0"
  /* 11326 */ "ftsqrt \0"
  /* 11334 */ "psq_st \0"
  /* 11342 */ "paste_last \0"
  /* 11354 */ "vncipherlast \0"
  /* 11368 */ "vcipherlast \0"
  /* 11381 */ "dcbst \0"
  /* 11388 */ "dst \0"
  /* 11393 */ "copy_first \0"
  /* 11405 */ "dcbtst \0"
  /* 11413 */ "dstst \0"
  /* 11420 */ "dcbtt \0"
  /* 11427 */ "dstt \0"
  /* 11433 */ "dcbtstt \0"
  /* 11442 */ "dststt \0"
  /* 11450 */ "lhau \0"
  /* 11456 */ "stbu \0"
  /* 11462 */ "lfdu \0"
  /* 11468 */ "stfdu \0"
  /* 11475 */ "maddhdu \0"
  /* 11484 */ "mulhdu \0"
  /* 11492 */ "fcfidu \0"
  /* 11500 */ "fctidu \0"
  /* 11508 */ "ldu \0"
  /* 11513 */ "stdu \0"
  /* 11519 */ "divdu \0"
  /* 11526 */ "divdeu \0"
  /* 11534 */ "divweu \0"
  /* 11542 */ "sthu \0"
  /* 11548 */ "evsrwiu \0"
  /* 11557 */ "psq_lu \0"
  /* 11565 */ "evlwhou \0"
  /* 11574 */ "fcmpu \0"
  /* 11581 */ "lfsu \0"
  /* 11587 */ "stfsu \0"
  /* 11594 */ "evcmpgtu \0"
  /* 11604 */ "evcmpltu \0"
  /* 11614 */ "psq_stu \0"
  /* 11623 */ "mulhwu \0"
  /* 11631 */ "fctiwu \0"
  /* 11639 */ "evsrwu \0"
  /* 11647 */ "stwu \0"
  /* 11653 */ "evdivwu \0"
  /* 11662 */ "lbzu \0"
  /* 11668 */ "lhzu \0"
  /* 11674 */ "lwzu \0"
  /* 11680 */ "slbmfev \0"
  /* 11689 */ "ps_div \0"
  /* 11697 */ "efddiv \0"
  /* 11705 */ "fdiv \0"
  /* 11711 */ "efsdiv \0"
  /* 11719 */ "evfsdiv \0"
  /* 11728 */ "ftdiv \0"
  /* 11735 */ "vslv \0"
  /* 11741 */ "xxleqv \0"
  /* 11749 */ "creqv \0"
  /* 11756 */ "eveqv \0"
  /* 11763 */ "vsrv \0"
  /* 11769 */ "plxv \0"
  /* 11775 */ "pstxv \0"
  /* 11782 */ "vextsb2w \0"
  /* 11792 */ "vextsh2w \0"
  /* 11802 */ "evmhesmfaaw \0"
  /* 11815 */ "evmhosmfaaw \0"
  /* 11828 */ "evmhessfaaw \0"
  /* 11841 */ "evmhossfaaw \0"
  /* 11854 */ "evaddsmiaaw \0"
  /* 11867 */ "evmhesmiaaw \0"
  /* 11880 */ "evsubfsmiaaw \0"
  /* 11894 */ "evmwlsmiaaw \0"
  /* 11907 */ "evmhosmiaaw \0"
  /* 11920 */ "evaddumiaaw \0"
  /* 11933 */ "evmheumiaaw \0"
  /* 11946 */ "evsubfumiaaw \0"
  /* 11960 */ "evmwlumiaaw \0"
  /* 11973 */ "evmhoumiaaw \0"
  /* 11986 */ "evaddssiaaw \0"
  /* 11999 */ "evmhessiaaw \0"
  /* 12012 */ "evsubfssiaaw \0"
  /* 12026 */ "evmwlssiaaw \0"
  /* 12039 */ "evmhossiaaw \0"
  /* 12052 */ "evaddusiaaw \0"
  /* 12065 */ "evmheusiaaw \0"
  /* 12078 */ "evsubfusiaaw \0"
  /* 12092 */ "evmwlusiaaw \0"
  /* 12105 */ "evmhousiaaw \0"
  /* 12118 */ "vshasigmaw \0"
  /* 12130 */ "vsraw \0"
  /* 12137 */ "vcntmbw \0"
  /* 12146 */ "vprtybw \0"
  /* 12155 */ "evaddw \0"
  /* 12163 */ "evldw \0"
  /* 12170 */ "evrndw \0"
  /* 12178 */ "evstdw \0"
  /* 12186 */ "vmrgew \0"
  /* 12194 */ "vcmpnew \0"
  /* 12203 */ "evsubfw \0"
  /* 12212 */ "evsubifw \0"
  /* 12222 */ "vnegw \0"
  /* 12229 */ "vmrghw \0"
  /* 12237 */ "xxmrghw \0"
  /* 12246 */ "mulhw \0"
  /* 12253 */ "evaddiw \0"
  /* 12262 */ "fctiw \0"
  /* 12269 */ "xxspltiw \0"
  /* 12279 */ "vmrglw \0"
  /* 12287 */ "xxmrglw \0"
  /* 12296 */ "mullw \0"
  /* 12303 */ "cmplw \0"
  /* 12310 */ "evrlw \0"
  /* 12317 */ "evslw \0"
  /* 12324 */ "lmw \0"
  /* 12329 */ "stmw \0"
  /* 12335 */ "vpmsumw \0"
  /* 12344 */ "evmhesmfanw \0"
  /* 12357 */ "evmhosmfanw \0"
  /* 12370 */ "evmhessfanw \0"
  /* 12383 */ "evmhossfanw \0"
  /* 12396 */ "evmhesmianw \0"
  /* 12409 */ "evmwlsmianw \0"
  /* 12422 */ "evmhosmianw \0"
  /* 12435 */ "evmheumianw \0"
  /* 12448 */ "evmwlumianw \0"
  /* 12461 */ "evmhoumianw \0"
  /* 12474 */ "evmhessianw \0"
  /* 12487 */ "evmwlssianw \0"
  /* 12500 */ "evmhossianw \0"
  /* 12513 */ "evmheusianw \0"
  /* 12526 */ "evmwlusianw \0"
  /* 12539 */ "evmhousianw \0"
  /* 12552 */ "vmrgow \0"
  /* 12560 */ "cmpw \0"
  /* 12566 */ "xxbrw \0"
  /* 12573 */ "vsrw \0"
  /* 12579 */ "vmodsw \0"
  /* 12587 */ "vmulesw \0"
  /* 12596 */ "vdivesw \0"
  /* 12605 */ "vavgsw \0"
  /* 12613 */ "vupkhsw \0"
  /* 12622 */ "vmulhsw \0"
  /* 12631 */ "vspltisw \0"
  /* 12641 */ "vupklsw \0"
  /* 12650 */ "evcntlsw \0"
  /* 12660 */ "vminsw \0"
  /* 12668 */ "vinsw \0"
  /* 12675 */ "vmulosw \0"
  /* 12684 */ "vcmpgtsw \0"
  /* 12694 */ "extsw \0"
  /* 12701 */ "vdivsw \0"
  /* 12709 */ "vmaxsw \0"
  /* 12717 */ "vspltw \0"
  /* 12725 */ "xxspltw \0"
  /* 12734 */ "vpopcntw \0"
  /* 12744 */ "vinsertw \0"
  /* 12754 */ "xxinsertw \0"
  /* 12765 */ "pstw \0"
  /* 12771 */ "vsubcuw \0"
  /* 12780 */ "vaddcuw \0"
  /* 12789 */ "vmoduw \0"
  /* 12797 */ "vabsduw \0"
  /* 12806 */ "vmuleuw \0"
  /* 12815 */ "vdiveuw \0"
  /* 12824 */ "vavguw \0"
  /* 12832 */ "vmulhuw \0"
  /* 12841 */ "vminuw \0"
  /* 12849 */ "vmulouw \0"
  /* 12858 */ "vcmpequw \0"
  /* 12868 */ "vextractuw \0"
  /* 12880 */ "xxextractuw \0"
  /* 12893 */ "vcmpgtuw \0"
  /* 12903 */ "vdivuw \0"
  /* 12911 */ "vmaxuw \0"
  /* 12919 */ "xxblendvw \0"
  /* 12930 */ "divw \0"
  /* 12936 */ "vcmpnezw \0"
  /* 12946 */ "vclzw \0"
  /* 12953 */ "evcntlzw \0"
  /* 12963 */ "vctzw \0"
  /* 12970 */ "cnttzw \0"
  /* 12978 */ "lxvd2x \0"
  /* 12986 */ "stxvd2x \0"
  /* 12995 */ "lxvw4x \0"
  /* 13003 */ "stxvw4x \0"
  /* 13012 */ "lxvb16x \0"
  /* 13021 */ "stxvb16x \0"
  /* 13031 */ "lxvh8x \0"
  /* 13039 */ "stxvh8x \0"
  /* 13048 */ "lhax \0"
  /* 13054 */ "tlbivax \0"
  /* 13063 */ "lfiwax \0"
  /* 13071 */ "lxsiwax \0"
  /* 13080 */ "lwax \0"
  /* 13086 */ "lvebx \0"
  /* 13093 */ "stvebx \0"
  /* 13101 */ "stxsibx \0"
  /* 13110 */ "lxvrbx \0"
  /* 13118 */ "stxvrbx \0"
  /* 13127 */ "stbx \0"
  /* 13133 */ "xxsplti32dx \0"
  /* 13146 */ "evlddx \0"
  /* 13154 */ "evstddx \0"
  /* 13163 */ "lfdx \0"
  /* 13169 */ "stfdx \0"
  /* 13176 */ "ldx \0"
  /* 13181 */ "lxvrdx \0"
  /* 13189 */ "stxvrdx \0"
  /* 13198 */ "lxsdx \0"
  /* 13205 */ "stxsdx \0"
  /* 13213 */ "stdx \0"
  /* 13219 */ "evlwhex \0"
  /* 13228 */ "evstwhex \0"
  /* 13238 */ "evstwwex \0"
  /* 13248 */ "evldhx \0"
  /* 13256 */ "evstdhx \0"
  /* 13265 */ "lvehx \0"
  /* 13272 */ "stvehx \0"
  /* 13280 */ "stxsihx \0"
  /* 13289 */ "lxvrhx \0"
  /* 13297 */ "stxvrhx \0"
  /* 13306 */ "sthx \0"
  /* 13312 */ "stbcix \0"
  /* 13320 */ "ldcix \0"
  /* 13327 */ "stdcix \0"
  /* 13335 */ "sthcix \0"
  /* 13343 */ "stwcix \0"
  /* 13351 */ "lbzcix \0"
  /* 13359 */ "lhzcix \0"
  /* 13367 */ "lwzcix \0"
  /* 13375 */ "xsrqpix \0"
  /* 13384 */ "psq_lx \0"
  /* 13392 */ "vinsblx \0"
  /* 13401 */ "vextublx \0"
  /* 13411 */ "vinsdlx \0"
  /* 13420 */ "vinshlx \0"
  /* 13429 */ "vextuhlx \0"
  /* 13439 */ "vinsbvlx \0"
  /* 13449 */ "vextdubvlx \0"
  /* 13461 */ "vextddvlx \0"
  /* 13472 */ "vinshvlx \0"
  /* 13482 */ "vextduhvlx \0"
  /* 13494 */ "vinswvlx \0"
  /* 13504 */ "vextduwvlx \0"
  /* 13516 */ "vinswlx \0"
  /* 13525 */ "vextuwlx \0"
  /* 13535 */ "ldmx \0"
  /* 13541 */ "xxpermx \0"
  /* 13550 */ "vsbox \0"
  /* 13557 */ "evstwhox \0"
  /* 13567 */ "evstwwox \0"
  /* 13577 */ "lbepx \0"
  /* 13584 */ "stbepx \0"
  /* 13592 */ "lfdepx \0"
  /* 13600 */ "stfdepx \0"
  /* 13609 */ "lhepx \0"
  /* 13616 */ "sthepx \0"
  /* 13624 */ "lwepx \0"
  /* 13631 */ "stwepx \0"
  /* 13639 */ "vupkhpx \0"
  /* 13648 */ "vpkpx \0"
  /* 13655 */ "vupklpx \0"
  /* 13664 */ "lxsspx \0"
  /* 13672 */ "stxsspx \0"
  /* 13681 */ "lxvpx \0"
  /* 13688 */ "stxvpx \0"
  /* 13696 */ "lbarx \0"
  /* 13703 */ "ldarx \0"
  /* 13710 */ "lharx \0"
  /* 13717 */ "lwarx \0"
  /* 13724 */ "ldbrx \0"
  /* 13731 */ "stdbrx \0"
  /* 13739 */ "lhbrx \0"
  /* 13746 */ "sthbrx \0"
  /* 13754 */ "vinsbrx \0"
  /* 13763 */ "vextubrx \0"
  /* 13773 */ "lwbrx \0"
  /* 13780 */ "stwbrx \0"
  /* 13788 */ "vinsdrx \0"
  /* 13797 */ "vinshrx \0"
  /* 13806 */ "vextuhrx \0"
  /* 13816 */ "vinsbvrx \0"
  /* 13826 */ "vextdubvrx \0"
  /* 13838 */ "vextddvrx \0"
  /* 13849 */ "vinshvrx \0"
  /* 13859 */ "vextduhvrx \0"
  /* 13871 */ "vinswvrx \0"
  /* 13881 */ "vextduwvrx \0"
  /* 13893 */ "vinswrx \0"
  /* 13902 */ "vextuwrx \0"
  /* 13912 */ "mcrxrx \0"
  /* 13920 */ "tlbsx \0"
  /* 13927 */ "lxvdsx \0"
  /* 13935 */ "vcfsx \0"
  /* 13942 */ "lfsx \0"
  /* 13948 */ "stfsx \0"
  /* 13955 */ "evlwhosx \0"
  /* 13965 */ "lxvwsx \0"
  /* 13973 */ "evlhhesplatx \0"
  /* 13987 */ "evlwhsplatx \0"
  /* 14000 */ "evlhhossplatx \0"
  /* 14015 */ "evlhhousplatx \0"
  /* 14030 */ "evlwwsplatx \0"
  /* 14043 */ "psq_stx \0"
  /* 14052 */ "lhaux \0"
  /* 14059 */ "lwaux \0"
  /* 14066 */ "stbux \0"
  /* 14073 */ "lfdux \0"
  /* 14080 */ "stfdux \0"
  /* 14088 */ "ldux \0"
  /* 14094 */ "stdux \0"
  /* 14101 */ "vcfux \0"
  /* 14108 */ "sthux \0"
  /* 14115 */ "psq_lux \0"
  /* 14124 */ "evlwhoux \0"
  /* 14134 */ "lfsux \0"
  /* 14141 */ "stfsux \0"
  /* 14149 */ "psq_stux \0"
  /* 14159 */ "stwux \0"
  /* 14166 */ "lbzux \0"
  /* 14173 */ "lhzux \0"
  /* 14180 */ "lwzux \0"
  /* 14187 */ "lvx \0"
  /* 14192 */ "stvx \0"
  /* 14198 */ "lxvx \0"
  /* 14204 */ "stxvx \0"
  /* 14211 */ "evldwx \0"
  /* 14219 */ "evstdwx \0"
  /* 14228 */ "lvewx \0"
  /* 14235 */ "stvewx \0"
  /* 14243 */ "stfiwx \0"
  /* 14251 */ "stxsiwx \0"
  /* 14260 */ "lxvrwx \0"
  /* 14268 */ "stxvrwx \0"
  /* 14277 */ "stwx \0"
  /* 14283 */ "lxsibzx \0"
  /* 14292 */ "lbzx \0"
  /* 14298 */ "lxsihzx \0"
  /* 14307 */ "lhzx \0"
  /* 14313 */ "lfiwzx \0"
  /* 14321 */ "lxsiwzx \0"
  /* 14330 */ "lwzx \0"
  /* 14336 */ "copy \0"
  /* 14342 */ "dcbz \0"
  /* 14348 */ "plbz \0"
  /* 14354 */ "xxsetaccz \0"
  /* 14365 */ "bdz \0"
  /* 14370 */ "efdctsidz \0"
  /* 14381 */ "fctidz \0"
  /* 14389 */ "efdctuidz \0"
  /* 14400 */ "xscvqpsdz \0"
  /* 14411 */ "xscvqpudz \0"
  /* 14422 */ "plhz \0"
  /* 14428 */ "vrfiz \0"
  /* 14435 */ "xsrdpiz \0"
  /* 14444 */ "xvrdpiz \0"
  /* 14453 */ "xvrspiz \0"
  /* 14462 */ "friz \0"
  /* 14468 */ "efdctsiz \0"
  /* 14478 */ "efsctsiz \0"
  /* 14488 */ "evfsctsiz \0"
  /* 14499 */ "efdctuiz \0"
  /* 14509 */ "efsctuiz \0"
  /* 14519 */ "bdnz \0"
  /* 14525 */ "xscvqpsqz \0"
  /* 14536 */ "xscvqpuqz \0"
  /* 14547 */ "fctiduz \0"
  /* 14556 */ "fctiwuz \0"
  /* 14565 */ "fctiwz \0"
  /* 14573 */ "plwz \0"
  /* 14579 */ "mfvsrwz \0"
  /* 14588 */ "mtvsrwz \0"
  /* 14597 */ "xscvqpswz \0"
  /* 14608 */ "xscvqpuwz \0"
  /* 14619 */ "bdzlrl+\0"
  /* 14627 */ "bdnzlrl+\0"
  /* 14636 */ "bdzlr+\0"
  /* 14643 */ "bdnzlr+\0"
  /* 14651 */ "evsel crD,\0"
  /* 14662 */ "bdzlrl-\0"
  /* 14670 */ "bdnzlrl-\0"
  /* 14679 */ "bdzlr-\0"
  /* 14686 */ "bdnzlr-\0"
  /* 14694 */ "# XRay Function Patchable RET.\0"
  /* 14725 */ "# XRay Typed Event Log.\0"
  /* 14749 */ "# XRay Custom Event Log.\0"
  /* 14774 */ "# XRay Function Enter.\0"
  /* 14797 */ "# XRay Tail Call Exit.\0"
  /* 14820 */ "# XRay Function Exit.\0"
  /* 14842 */ "trechkpt.\0"
  /* 14852 */ "ori 1, 1, 0\0"
  /* 14864 */ "ori 2, 2, 0\0"
  /* 14876 */ "#ADDISdtprelHA32\0"
  /* 14893 */ "#ATOMIC_LOAD_SUB_I32\0"
  /* 14914 */ "#ATOMIC_LOAD_ADD_I32\0"
  /* 14935 */ "#ATOMIC_LOAD_NAND_I32\0"
  /* 14957 */ "#ATOMIC_LOAD_AND_I32\0"
  /* 14978 */ "#ATOMIC_LOAD_UMIN_I32\0"
  /* 15000 */ "#ATOMIC_LOAD_MIN_I32\0"
  /* 15021 */ "#ATOMIC_SWAP_I32\0"
  /* 15038 */ "#ATOMIC_LOAD_XOR_I32\0"
  /* 15059 */ "#ATOMIC_LOAD_OR_I32\0"
  /* 15079 */ "#ATOMIC_LOAD_UMAX_I32\0"
  /* 15101 */ "#ATOMIC_LOAD_MAX_I32\0"
  /* 15122 */ "#ADDItlsgdL32\0"
  /* 15136 */ "#ADDItlsldL32\0"
  /* 15150 */ "#LDgotTprelL32\0"
  /* 15165 */ "#ADDIdtprelL32\0"
  /* 15180 */ "#EH_SJLJ_LONGJMP32\0"
  /* 15199 */ "#EH_SJLJ_SETJMP32\0"
  /* 15217 */ "#ADDItlsgdLADDR32\0"
  /* 15235 */ "#ADDItlsldLADDR32\0"
  /* 15253 */ "GETtlsldADDR32\0"
  /* 15268 */ "GETtlsADDR32\0"
  /* 15281 */ "#PROBED_ALLOCA_32\0"
  /* 15299 */ "#PREPARE_PROBED_ALLOCA_32\0"
  /* 15325 */ "#PROBED_STACKALLOC_32\0"
  /* 15347 */ "#PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32\0"
  /* 15390 */ "#DFLOADf32\0"
  /* 15401 */ "#XFLOADf32\0"
  /* 15412 */ "#DFSTOREf32\0"
  /* 15424 */ "#XFSTOREf32\0"
  /* 15436 */ "#ATOMIC_LOAD_SUB_I64\0"
  /* 15457 */ "#ATOMIC_LOAD_ADD_I64\0"
  /* 15478 */ "#ATOMIC_LOAD_NAND_I64\0"
  /* 15500 */ "#ATOMIC_LOAD_UMIN_I64\0"
  /* 15522 */ "#ATOMIC_LOAD_MIN_I64\0"
  /* 15543 */ "#ATOMIC_SWAP_I64\0"
  /* 15560 */ "#ATOMIC_CMP_SWAP_I64\0"
  /* 15581 */ "#ATOMIC_LOAD_XOR_I64\0"
  /* 15602 */ "#ATOMIC_LOAD_OR_I64\0"
  /* 15622 */ "#ATOMIC_LOAD_UMAX_I64\0"
  /* 15644 */ "#ATOMIC_LOAD_MAX_I64\0"
  /* 15665 */ "#EH_SJLJ_LONGJMP64\0"
  /* 15684 */ "#EH_SJLJ_SETJMP64\0"
  /* 15702 */ "#PROBED_ALLOCA_64\0"
  /* 15720 */ "#PREPARE_PROBED_ALLOCA_64\0"
  /* 15746 */ "#PROBED_STACKALLOC_64\0"
  /* 15768 */ "#PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64\0"
  /* 15811 */ "#DFLOADf64\0"
  /* 15822 */ "#XFLOADf64\0"
  /* 15833 */ "#DFSTOREf64\0"
  /* 15845 */ "#XFSTOREf64\0"
  /* 15857 */ "#ATOMIC_LOAD_AND_i64\0"
  /* 15878 */ "#SELECT_CC_SPE4\0"
  /* 15894 */ "#SELECT_SPE4\0"
  /* 15907 */ "#SELECT_CC_F4\0"
  /* 15921 */ "#SELECT_F4\0"
  /* 15932 */ "#SELECT_CC_I4\0"
  /* 15946 */ "#SELECT_I4\0"
  /* 15957 */ "crxor 6, 6, 6\0"
  /* 15971 */ "creqv 6, 6, 6\0"
  /* 15985 */ "#SELECT_CC_F16\0"
  /* 16000 */ "#SELECT_F16\0"
  /* 16012 */ "#ATOMIC_LOAD_SUB_I16\0"
  /* 16033 */ "#ATOMIC_LOAD_ADD_I16\0"
  /* 16054 */ "#ATOMIC_LOAD_NAND_I16\0"
  /* 16076 */ "#ATOMIC_LOAD_AND_I16\0"
  /* 16097 */ "#ATOMIC_LOAD_UMIN_I16\0"
  /* 16119 */ "#ATOMIC_LOAD_MIN_I16\0"
  /* 16140 */ "#ATOMIC_SWAP_I16\0"
  /* 16157 */ "#ATOMIC_LOAD_XOR_I16\0"
  /* 16178 */ "#ATOMIC_LOAD_OR_I16\0"
  /* 16198 */ "#ATOMIC_LOAD_UMAX_I16\0"
  /* 16220 */ "#ATOMIC_LOAD_MAX_I16\0"
  /* 16241 */ "#ADDIStocHA8\0"
  /* 16254 */ "#DYNALLOC8\0"
  /* 16265 */ "#CFENCE8\0"
  /* 16274 */ "#SELECT_CC_F8\0"
  /* 16288 */ "#SELECT_F8\0"
  /* 16299 */ "#ATOMIC_LOAD_SUB_I8\0"
  /* 16319 */ "#SELECT_CC_I8\0"
  /* 16333 */ "#ATOMIC_LOAD_ADD_I8\0"
  /* 16353 */ "#ATOMIC_LOAD_NAND_I8\0"
  /* 16374 */ "#ATOMIC_LOAD_AND_I8\0"
  /* 16394 */ "#ATOMIC_LOAD_UMIN_I8\0"
  /* 16415 */ "#ATOMIC_LOAD_MIN_I8\0"
  /* 16435 */ "#ATOMIC_CMP_SWAP_I8\0"
  /* 16455 */ "ATOMIC_LOAD_XOR_I8\0"
  /* 16474 */ "#ATOMIC_LOAD_OR_I8\0"
  /* 16493 */ "#SELECT_I8\0"
  /* 16504 */ "#ATOMIC_LOAD_UMAX_I8\0"
  /* 16525 */ "#ATOMIC_LOAD_MAX_I8\0"
  /* 16545 */ "#MovePCtoLR8\0"
  /* 16558 */ "#DYNAREAOFFSET8\0"
  /* 16574 */ "#ANDI_rec_1_EQ_BIT8\0"
  /* 16594 */ "#ANDI_rec_1_GT_BIT8\0"
  /* 16614 */ "#ATOMIC_SWAP_i8\0"
  /* 16630 */ "#ADDIStocHA\0"
  /* 16642 */ "#ADDIStlsgdHA\0"
  /* 16656 */ "#ADDIStlsldHA\0"
  /* 16670 */ "#ADDISgotTprelHA\0"
  /* 16687 */ "#ADDISdtprelHA\0"
  /* 16702 */ "#ReadTB\0"
  /* 16710 */ "#RESTORE_UACC\0"
  /* 16724 */ "#SPILL_UACC\0"
  /* 16736 */ "#RESTORE_ACC\0"
  /* 16749 */ "#SPILL_ACC\0"
  /* 16760 */ "#DYNALLOC\0"
  /* 16770 */ "#SELECT_CC_VSFRC\0"
  /* 16787 */ "#SELECT_VSFRC\0"
  /* 16801 */ "#SELECT_CC_VRRC\0"
  /* 16817 */ "#SELECT_VRRC\0"
  /* 16830 */ "#SELECT_CC_VSSRC\0"
  /* 16847 */ "#SELECT_VSSRC\0"
  /* 16861 */ "#SELECT_CC_VSRC\0"
  /* 16877 */ "#SELECT_VSRC\0"
  /* 16890 */ "#SPILLTOVSR_LD\0"
  /* 16905 */ "LIFETIME_END\0"
  /* 16918 */ "#SETRND\0"
  /* 16926 */ "PSEUDO_PROBE\0"
  /* 16939 */ "BUNDLE\0"
  /* 16946 */ "#SELECT_CC_SPE\0"
  /* 16961 */ "#SELECT_SPE\0"
  /* 16973 */ "DBG_VALUE\0"
  /* 16983 */ "DBG_INSTR_REF\0"
  /* 16997 */ "#LDtocJTI\0"
  /* 17007 */ "DBG_LABEL\0"
  /* 17017 */ "#LDtocL\0"
  /* 17025 */ "#ADDItocL\0"
  /* 17035 */ "#LWZtocL\0"
  /* 17044 */ "#ADDItlsgdL\0"
  /* 17056 */ "#ADDItlsldL\0"
  /* 17068 */ "#LDgotTprelL\0"
  /* 17081 */ "#ADDIdtprelL\0"
  /* 17094 */ "#SETFLM\0"
  /* 17102 */ "#UNENCODED_NOP\0"
  /* 17117 */ "#UpdateGBR\0"
  /* 17128 */ "#RESTORE_CR\0"
  /* 17140 */ "#SPILL_CR\0"
  /* 17150 */ "#ADDItlsgdLADDR\0"
  /* 17166 */ "#ADDItlsldLADDR\0"
  /* 17182 */ "#GETtlsldADDR\0"
  /* 17196 */ "#GETtlsADDR\0"
  /* 17208 */ "#KILL_PAIR\0"
  /* 17219 */ "#MovePCtoLR\0"
  /* 17231 */ "#MoveGOTtoLR\0"
  /* 17244 */ "#TCHECK_RET\0"
  /* 17256 */ "#TBEGIN_RET\0"
  /* 17268 */ "#DYNAREAOFFSET\0"
  /* 17283 */ "#RESTORE_CRBIT\0"
  /* 17298 */ "#SPILL_CRBIT\0"
  /* 17311 */ "#ANDI_rec_1_EQ_BIT\0"
  /* 17330 */ "#ANDI_rec_1_GT_BIT\0"
  /* 17349 */ "#PPC32GOT\0"
  /* 17359 */ "#PPC32PICGOT\0"
  /* 17372 */ "#LDtocCPT\0"
  /* 17382 */ "LIFETIME_START\0"
  /* 17397 */ "#SPILLTOVSR_ST\0"
  /* 17412 */ "#LIWAX\0"
  /* 17419 */ "#SPILLTOVSR_LDX\0"
  /* 17435 */ "#SPILLTOVSR_STX\0"
  /* 17451 */ "#STIWX\0"
  /* 17458 */ "#LIWZX\0"
  /* 17465 */ "bca\0"
  /* 17469 */ "slbia\0"
  /* 17475 */ "tlbia\0"
  /* 17481 */ "bcla\0"
  /* 17486 */ "clrbhrb\0"
  /* 17494 */ "bc\0"
  /* 17497 */ "slbsync\0"
  /* 17505 */ "tlbsync\0"
  /* 17513 */ "msgsync\0"
  /* 17521 */ "isync\0"
  /* 17527 */ "msync\0"
  /* 17533 */ "#LDtoc\0"
  /* 17540 */ "#LWZtoc\0"
  /* 17548 */ "hrfid\0"
  /* 17554 */ "tlbre\0"
  /* 17560 */ "tlbwe\0"
  /* 17566 */ "#SETRNDi\0"
  /* 17575 */ "rfci\0"
  /* 17580 */ "rfmci\0"
  /* 17586 */ "rfdi\0"
  /* 17591 */ "rfi\0"
  /* 17595 */ "bcl\0"
  /* 17599 */ "#PADDIdtprel\0"
  /* 17612 */ "# FEntry call\0"
  /* 17626 */ "dssall\0"
  /* 17633 */ "blrl\0"
  /* 17638 */ "bdzlrl\0"
  /* 17645 */ "bdnzlrl\0"
  /* 17653 */ "bctrl\0"
  /* 17659 */ "attn\0"
  /* 17664 */ "eieio\0"
  /* 17670 */ "nap\0"
  /* 17674 */ "trap\0"
  /* 17679 */ "nop\0"
  /* 17683 */ "stop\0"
  /* 17688 */ "blr\0"
  /* 17692 */ "bdzlr\0"
  /* 17698 */ "bdnzlr\0"
  /* 17705 */ "bctr\0"
  /* 17710 */ "cp_abort\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    16974U,	// DBG_VALUE
    16984U,	// DBG_INSTR_REF
    17008U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    16940U,	// BUNDLE
    17383U,	// LIFETIME_START
    16906U,	// LIFETIME_END
    16927U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    17613U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    14775U,	// PATCHABLE_FUNCTION_ENTER
    14695U,	// PATCHABLE_RET
    14821U,	// PATCHABLE_FUNCTION_EXIT
    14798U,	// PATCHABLE_TAIL_CALL
    14750U,	// PATCHABLE_EVENT_CALL
    14726U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    35479U,	// BUILD_UACC
    16266U,	// CFENCE8
    1073779992U,	// CLRLSLDI
    1073775642U,	// CLRLSLDI_rec
    1073780503U,	// CLRLSLWI
    1073775751U,	// CLRLSLWI_rec
    1073780027U,	// CLRRDI
    1073775669U,	// CLRRDI_rec
    1073780544U,	// CLRRWI
    1073775780U,	// CLRRWI_rec
    44162U,	// CP_COPY_FIRST
    47105U,	// CP_COPYx
    44111U,	// CP_PASTE_LAST
    37440U,	// CP_PASTEx
    1120215U,	// DCBFL
    1122620U,	// DCBFLP
    1118829U,	// DCBFx
    33631140U,	// DCBTCT
    33630429U,	// DCBTDS
    33631148U,	// DCBTSTCT
    33630437U,	// DCBTSTDS
    1125546U,	// DCBTSTT
    1125518U,	// DCBTSTx
    1125533U,	// DCBTT
    1125272U,	// DCBTx
    15391U,	// DFLOADf32
    15812U,	// DFLOADf64
    15413U,	// DFSTOREf32
    15834U,	// DFSTOREf64
    1073780002U,	// EXTLDI
    1073775653U,	// EXTLDI_rec
    1073780529U,	// EXTLWI
    1073775771U,	// EXTLWI_rec
    1073780051U,	// EXTRDI
    1073775696U,	// EXTRDI_rec
    1073780568U,	// EXTRWI
    1073775807U,	// EXTRWI_rec
    1073780513U,	// INSLWI
    1073775762U,	// INSLWI_rec
    1073780035U,	// INSRDI
    1073775678U,	// INSRDI_rec
    1073780552U,	// INSRWI
    1073775789U,	// INSRWI_rec
    17209U,	// KILL_PAIR
    67144728U,	// LAx
    17413U,	// LIWAX
    17459U,	// LIWZX
    1073780170U,	// RLWIMIbm
    1073775734U,	// RLWIMIbm_rec
    1073781168U,	// RLWINMbm
    1073775903U,	// RLWINMbm_rec
    1073781185U,	// RLWNMbm
    1073775912U,	// RLWNMbm_rec
    1073780043U,	// ROTRDI
    1073775687U,	// ROTRDI_rec
    1073780560U,	// ROTRWI
    1073775798U,	// ROTRWI_rec
    1073779996U,	// SLDI
    1073775646U,	// SLDI_rec
    1073780507U,	// SLWI
    1073775755U,	// SLWI_rec
    16891U,	// SPILLTOVSR_LD
    17420U,	// SPILLTOVSR_LDX
    17398U,	// SPILLTOVSR_ST
    17436U,	// SPILLTOVSR_STX
    1073780037U,	// SRDI
    1073775680U,	// SRDI_rec
    1073780554U,	// SRWI
    1073775791U,	// SRWI_rec
    17452U,	// STIWX
    1073779950U,	// SUBI
    1073778302U,	// SUBIC
    1073775166U,	// SUBIC_rec
    1073785290U,	// SUBIS
    100706769U,	// SUBPCIS
    15402U,	// XFLOADf32
    15823U,	// XFLOADf64
    15425U,	// XFSTOREf32
    15846U,	// XFSTOREf64
    1073778494U,	// ADD4
    1073781727U,	// ADD4O
    1073776003U,	// ADD4O_rec
    1073778494U,	// ADD4TLS
    1073775240U,	// ADD4_rec
    1073778494U,	// ADD8
    1073781727U,	// ADD8O
    1073776003U,	// ADD8O_rec
    1073778494U,	// ADD8TLS
    1073778494U,	// ADD8TLS_
    1073775240U,	// ADD8_rec
    1073778264U,	// ADDC
    1073778264U,	// ADDC8
    1073781712U,	// ADDC8O
    1073775986U,	// ADDC8O_rec
    1073775133U,	// ADDC8_rec
    1073781712U,	// ADDCO
    1073775986U,	// ADDCO_rec
    1073775133U,	// ADDC_rec
    1073779142U,	// ADDE
    1073779142U,	// ADDE8
    1073781748U,	// ADDE8O
    1073776027U,	// ADDE8O_rec
    1073775407U,	// ADDE8_rec
    1073781748U,	// ADDEO
    1073776027U,	// ADDEO_rec
    1073775407U,	// ADDE_rec
    1073779978U,	// ADDI
    1073779978U,	// ADDI8
    1073778309U,	// ADDIC
    1073778309U,	// ADDIC8
    1073775174U,	// ADDIC_rec
    1073785315U,	// ADDIS
    1073785315U,	// ADDIS8
    16688U,	// ADDISdtprelHA
    14877U,	// ADDISdtprelHA32
    16671U,	// ADDISgotTprelHA
    16643U,	// ADDIStlsgdHA
    16657U,	// ADDIStlsldHA
    16631U,	// ADDIStocHA
    16242U,	// ADDIStocHA8
    17082U,	// ADDIdtprelL
    15166U,	// ADDIdtprelL32
    17045U,	// ADDItlsgdL
    15123U,	// ADDItlsgdL32
    17151U,	// ADDItlsgdLADDR
    15218U,	// ADDItlsgdLADDR32
    17057U,	// ADDItlsldL
    15137U,	// ADDItlsldL32
    17167U,	// ADDItlsldLADDR
    15236U,	// ADDItlsldLADDR32
    17026U,	// ADDItocL
    37385U,	// ADDME
    37385U,	// ADDME8
    39947U,	// ADDME8O
    34229U,	// ADDME8O_rec
    33615U,	// ADDME8_rec
    39947U,	// ADDMEO
    34229U,	// ADDMEO_rec
    33615U,	// ADDME_rec
    43482U,	// ADDPCIS
    37470U,	// ADDZE
    37470U,	// ADDZE8
    39972U,	// ADDZE8O
    34257U,	// ADDZE8O_rec
    33676U,	// ADDZE8_rec
    39972U,	// ADDZEO
    34257U,	// ADDZEO_rec
    33676U,	// ADDZE_rec
    101028U,	// ADJCALLSTACKDOWN
    101047U,	// ADJCALLSTACKUP
    1073778746U,	// AND
    1073778746U,	// AND8
    1073775330U,	// AND8_rec
    1073778273U,	// ANDC
    1073778273U,	// ANDC8
    1073775140U,	// ANDC8_rec
    1073775140U,	// ANDC_rec
    1073775662U,	// ANDI8_rec
    1073776575U,	// ANDIS8_rec
    1073776575U,	// ANDIS_rec
    1073775662U,	// ANDI_rec
    17312U,	// ANDI_rec_1_EQ_BIT
    16575U,	// ANDI_rec_1_EQ_BIT8
    17331U,	// ANDI_rec_1_GT_BIT
    16595U,	// ANDI_rec_1_GT_BIT8
    1073775330U,	// AND_rec
    2283833919U,	// ATOMIC_CMP_SWAP_I16
    2283833845U,	// ATOMIC_CMP_SWAP_I32
    15561U,	// ATOMIC_CMP_SWAP_I64
    16436U,	// ATOMIC_CMP_SWAP_I8
    16034U,	// ATOMIC_LOAD_ADD_I16
    14915U,	// ATOMIC_LOAD_ADD_I32
    15458U,	// ATOMIC_LOAD_ADD_I64
    16334U,	// ATOMIC_LOAD_ADD_I8
    16077U,	// ATOMIC_LOAD_AND_I16
    14958U,	// ATOMIC_LOAD_AND_I32
    15858U,	// ATOMIC_LOAD_AND_I64
    16375U,	// ATOMIC_LOAD_AND_I8
    16221U,	// ATOMIC_LOAD_MAX_I16
    15102U,	// ATOMIC_LOAD_MAX_I32
    15645U,	// ATOMIC_LOAD_MAX_I64
    16526U,	// ATOMIC_LOAD_MAX_I8
    16120U,	// ATOMIC_LOAD_MIN_I16
    15001U,	// ATOMIC_LOAD_MIN_I32
    15523U,	// ATOMIC_LOAD_MIN_I64
    16416U,	// ATOMIC_LOAD_MIN_I8
    16055U,	// ATOMIC_LOAD_NAND_I16
    14936U,	// ATOMIC_LOAD_NAND_I32
    15479U,	// ATOMIC_LOAD_NAND_I64
    16354U,	// ATOMIC_LOAD_NAND_I8
    16179U,	// ATOMIC_LOAD_OR_I16
    15060U,	// ATOMIC_LOAD_OR_I32
    15603U,	// ATOMIC_LOAD_OR_I64
    16475U,	// ATOMIC_LOAD_OR_I8
    16013U,	// ATOMIC_LOAD_SUB_I16
    14894U,	// ATOMIC_LOAD_SUB_I32
    15437U,	// ATOMIC_LOAD_SUB_I64
    16300U,	// ATOMIC_LOAD_SUB_I8
    16199U,	// ATOMIC_LOAD_UMAX_I16
    15080U,	// ATOMIC_LOAD_UMAX_I32
    15623U,	// ATOMIC_LOAD_UMAX_I64
    16505U,	// ATOMIC_LOAD_UMAX_I8
    16098U,	// ATOMIC_LOAD_UMIN_I16
    14979U,	// ATOMIC_LOAD_UMIN_I32
    15501U,	// ATOMIC_LOAD_UMIN_I64
    16395U,	// ATOMIC_LOAD_UMIN_I8
    16158U,	// ATOMIC_LOAD_XOR_I16
    15039U,	// ATOMIC_LOAD_XOR_I32
    15582U,	// ATOMIC_LOAD_XOR_I64
    16456U,	// ATOMIC_LOAD_XOR_I8
    16141U,	// ATOMIC_SWAP_I16
    15022U,	// ATOMIC_SWAP_I32
    15544U,	// ATOMIC_SWAP_I64
    16615U,	// ATOMIC_SWAP_I8
    17660U,	// ATTN
    1182808U,	// B
    1215313U,	// BA
    167805047U,	// BC
    3359829U,	// BCC
    4408405U,	// BCCA
    5456981U,	// BCCCTR
    5456981U,	// BCCCTR8
    6505557U,	// BCCCTRL
    6505557U,	// BCCCTRL8
    7554133U,	// BCCL
    8602709U,	// BCCLA
    9651285U,	// BCCLR
    10699861U,	// BCCLRL
    11567273U,	// BCCTR
    11567273U,	// BCCTR8
    11567329U,	// BCCTR8n
    11567251U,	// BCCTRL
    11567251U,	// BCCTRL8
    11567309U,	// BCCTRL8n
    11567309U,	// BCCTRLn
    11567329U,	// BCCTRn
    1073775920U,	// BCDCFN_rec
    1073776307U,	// BCDCFSQ_rec
    1073776923U,	// BCDCFZ_rec
    1073775929U,	// BCDCPSGN_rec
    34153U,	// BCDCTN_rec
    34493U,	// BCDCTSQ_rec
    1073776939U,	// BCDCTZ_rec
    1073775949U,	// BCDSETSGN_rec
    1073776423U,	// BCDSR_rec
    1073776498U,	// BCDS_rec
    1073775190U,	// BCDTRUNC_rec
    1073776600U,	// BCDUS_rec
    1073775201U,	// BCDUTRUNC_rec
    167805055U,	// BCL
    11567263U,	// BCLR
    11567240U,	// BCLRL
    11567299U,	// BCLRLn
    11567320U,	// BCLRn
    1179725U,	// BCLalways
    167805115U,	// BCLn
    17706U,	// BCTR
    17706U,	// BCTR8
    17654U,	// BCTRL
    17654U,	// BCTRL8
    229466U,	// BCTRL8_LDinto_toc
    229480U,	// BCTRL_LWZinto_toc
    167805108U,	// BCn
    1194168U,	// BDNZ
    1194168U,	// BDNZ8
    1215565U,	// BDNZA
    1212687U,	// BDNZAm
    1212457U,	// BDNZAp
    1185888U,	// BDNZL
    1215529U,	// BDNZLA
    1212671U,	// BDNZLAm
    1212441U,	// BDNZLAp
    17699U,	// BDNZLR
    17699U,	// BDNZLR8
    17646U,	// BDNZLRL
    14671U,	// BDNZLRLm
    14628U,	// BDNZLRLp
    14687U,	// BDNZLRm
    14644U,	// BDNZLRp
    1179934U,	// BDNZLm
    1179704U,	// BDNZLp
    1179948U,	// BDNZm
    1179718U,	// BDNZp
    1194014U,	// BDZ
    1194014U,	// BDZ8
    1215559U,	// BDZA
    1212680U,	// BDZAm
    1212450U,	// BDZAp
    1185882U,	// BDZL
    1215522U,	// BDZLA
    1212663U,	// BDZLAm
    1212433U,	// BDZLAp
    17693U,	// BDZLR
    17693U,	// BDZLR8
    17639U,	// BDZLRL
    14663U,	// BDZLRLm
    14620U,	// BDZLRLp
    14680U,	// BDZLRm
    14637U,	// BDZLRp
    1179927U,	// BDZLm
    1179697U,	// BDZLp
    1179942U,	// BDZm
    1179712U,	// BDZp
    1185686U,	// BL
    1185686U,	// BL8
    12720022U,	// BL8_NOP
    12851094U,	// BL8_NOP_TLS
    1185686U,	// BL8_NOTOC
    1316758U,	// BL8_NOTOC_TLS
    1316758U,	// BL8_TLS
    1316758U,	// BL8_TLS_
    1215511U,	// BLA
    1215511U,	// BLA8
    12749847U,	// BLA8_NOP
    17689U,	// BLR
    17689U,	// BLR8
    17634U,	// BLRL
    12720022U,	// BL_NOP
    1316758U,	// BL_TLS
    1073778726U,	// BPERMD
    1073778365U,	// BRINC
    1073778589U,	// CFUGED
    17487U,	// CLRBHRB
    1073777870U,	// CMPB
    1073777870U,	// CMPB8
    1073778798U,	// CMPD
    1073780020U,	// CMPDI
    1073777876U,	// CMPEQB
    1073778697U,	// CMPLD
    1073779984U,	// CMPLDI
    1073786896U,	// CMPLW
    1073780487U,	// CMPLWI
    201362652U,	// CMPRB
    201362652U,	// CMPRB8
    1073787153U,	// CMPW
    1073780537U,	// CMPWI
    37278U,	// CNTLZD
    1073781001U,	// CNTLZDM
    33565U,	// CNTLZD_rec
    45724U,	// CNTLZW
    45724U,	// CNTLZW8
    35032U,	// CNTLZW8_rec
    35032U,	// CNTLZW_rec
    37293U,	// CNTTZD
    1073781018U,	// CNTTZDM
    33574U,	// CNTTZD_rec
    45739U,	// CNTTZW
    45739U,	// CNTTZW8
    35041U,	// CNTTZW8_rec
    35041U,	// CNTTZW_rec
    17711U,	// CP_ABORT
    1073788929U,	// CP_COPY
    1073788929U,	// CP_COPY8
    1073779264U,	// CP_PASTE
    1073779264U,	// CP_PASTE8
    1073775484U,	// CP_PASTE8_rec
    1073775484U,	// CP_PASTE_rec
    15972U,	// CR6SET
    15958U,	// CR6UNSET
    1073778776U,	// CRAND
    1073778279U,	// CRANDC
    1073786342U,	// CREQV
    1073778760U,	// CRNAND
    1073784712U,	// CRNOR
    1073784726U,	// CROR
    1073778386U,	// CRORC
    1308667366U,	// CRSET
    1308665780U,	// CRUNSET
    1073784756U,	// CRXOR
    3359829U,	// CTRL_DEP
    39863U,	// DARN
    1117007U,	// DCBA
    299629U,	// DCBF
    1122373U,	// DCBFEP
    1119442U,	// DCBI
    1125494U,	// DCBST
    1122406U,	// DCBSTEP
    306072U,	// DCBT
    335966U,	// DCBTEP
    306318U,	// DCBTST
    335983U,	// DCBTSTEP
    1128455U,	// DCBZ
    1122425U,	// DCBZEP
    1120339U,	// DCBZL
    1122389U,	// DCBZLEP
    1120129U,	// DCBZ_L
    38132U,	// DCCCI
    1073779089U,	// DIVD
    1073779148U,	// DIVDE
    1073781755U,	// DIVDEO
    1073776035U,	// DIVDEO_rec
    1073786119U,	// DIVDEU
    1073781994U,	// DIVDEUO
    1073776124U,	// DIVDEUO_rec
    1073776678U,	// DIVDEU_rec
    1073775414U,	// DIVDE_rec
    1073781741U,	// DIVDO
    1073776019U,	// DIVDO_rec
    1073786112U,	// DIVDU
    1073781986U,	// DIVDUO
    1073776115U,	// DIVDUO_rec
    1073776670U,	// DIVDU_rec
    1073775382U,	// DIVD_rec
    1073787523U,	// DIVW
    1073779278U,	// DIVWE
    1073781788U,	// DIVWEO
    1073776072U,	// DIVWEO_rec
    1073786127U,	// DIVWEU
    1073782003U,	// DIVWEUO
    1073776134U,	// DIVWEUO_rec
    1073776687U,	// DIVWEU_rec
    1073775492U,	// DIVWE_rec
    1073782028U,	// DIVWO
    1073776162U,	// DIVWO_rec
    1073786248U,	// DIVWU
    1073782012U,	// DIVWUO
    1073776144U,	// DIVWUO_rec
    1073776714U,	// DIVWU_rec
    1073776838U,	// DIVW_rec
    1419803U,	// DSS
    17627U,	// DSSALL
    3490065533U,	// DST
    3490065533U,	// DST64
    3490065558U,	// DSTST
    3490065558U,	// DSTST64
    3490065587U,	// DSTSTT
    3490065587U,	// DSTSTT64
    3490065572U,	// DSTT
    3490065572U,	// DSTT64
    16761U,	// DYNALLOC
    16255U,	// DYNALLOC8
    17269U,	// DYNAREAOFFSET
    16559U,	// DYNAREAOFFSET8
    43035U,	// EFDABS
    1073778499U,	// EFDADD
    43343U,	// EFDCFS
    37565U,	// EFDCFSF
    38525U,	// EFDCFSI
    36823U,	// EFDCFSID
    37667U,	// EFDCFUF
    38591U,	// EFDCFUI
    36840U,	// EFDCFUID
    1073784205U,	// EFDCMPEQ
    1073785782U,	// EFDCMPGT
    1073785850U,	// EFDCMPLT
    37639U,	// EFDCTSF
    38553U,	// EFDCTSI
    47139U,	// EFDCTSIDZ
    47237U,	// EFDCTSIZ
    37695U,	// EFDCTUF
    38619U,	// EFDCTUI
    47158U,	// EFDCTUIDZ
    47268U,	// EFDCTUIZ
    1073786290U,	// EFDDIV
    1073780762U,	// EFDMUL
    43058U,	// EFDNABS
    37729U,	// EFDNEG
    1073778101U,	// EFDSUB
    1073784245U,	// EFDTSTEQ
    1073785813U,	// EFDTSTGT
    1073785881U,	// EFDTSTLT
    43093U,	// EFSABS
    1073778547U,	// EFSADD
    36773U,	// EFSCFD
    37574U,	// EFSCFSF
    38534U,	// EFSCFSI
    37676U,	// EFSCFUF
    38600U,	// EFSCFUI
    1073784215U,	// EFSCMPEQ
    1073785792U,	// EFSCMPGT
    1073785860U,	// EFSCMPLT
    37648U,	// EFSCTSF
    38562U,	// EFSCTSI
    47247U,	// EFSCTSIZ
    37704U,	// EFSCTUF
    38628U,	// EFSCTUI
    47278U,	// EFSCTUIZ
    1073786304U,	// EFSDIV
    1073780776U,	// EFSMUL
    43074U,	// EFSNABS
    37743U,	// EFSNEG
    1073778149U,	// EFSSUB
    1073784255U,	// EFSTSTEQ
    1073785823U,	// EFSTSTGT
    1073785891U,	// EFSTSTLT
    15181U,	// EH_SjLj_LongJmp32
    15666U,	// EH_SjLj_LongJmp64
    15200U,	// EH_SjLj_SetJmp32
    15685U,	// EH_SjLj_SetJmp64
    1179649U,	// EH_SjLj_Setup
    1073786337U,	// EQV
    1073786337U,	// EQV8
    1073776738U,	// EQV8_rec
    1073776738U,	// EQV_rec
    43110U,	// EVABS
    1107341278U,	// EVADDIW
    44623U,	// EVADDSMIAAW
    44755U,	// EVADDSSIAAW
    44689U,	// EVADDUMIAAW
    44821U,	// EVADDUSIAAW
    1073786748U,	// EVADDW
    1073778783U,	// EVAND
    1073778287U,	// EVANDC
    1073784236U,	// EVCMPEQ
    1073785394U,	// EVCMPGTS
    1073786187U,	// EVCMPGTU
    1073785404U,	// EVCMPLTS
    1073786197U,	// EVCMPLTU
    45419U,	// EVCNTLSW
    45722U,	// EVCNTLZW
    1073785564U,	// EVDIVWS
    1073786246U,	// EVDIVWU
    1073786349U,	// EVEQV
    36153U,	// EVEXTSB
    37929U,	// EVEXTSH
    43101U,	// EVFSABS
    1073778555U,	// EVFSADD
    37583U,	// EVFSCFSF
    38543U,	// EVFSCFSI
    37685U,	// EVFSCFUF
    38609U,	// EVFSCFUI
    1073784225U,	// EVFSCMPEQ
    1073785802U,	// EVFSCMPGT
    1073785870U,	// EVFSCMPLT
    37657U,	// EVFSCTSF
    38571U,	// EVFSCTSI
    47257U,	// EVFSCTSIZ
    37657U,	// EVFSCTUF
    38637U,	// EVFSCTUI
    47257U,	// EVFSCTUIZ
    1073786312U,	// EVFSDIV
    1073780784U,	// EVFSMUL
    43083U,	// EVFSNABS
    37751U,	// EVFSNEG
    1073778157U,	// EVFSSUB
    1073784265U,	// EVFSTSTEQ
    1073785833U,	// EVFSTSTGT
    1073785901U,	// EVFSTSTLT
    67145604U,	// EVLDD
    134263643U,	// EVLDDX
    67146647U,	// EVLDH
    134263745U,	// EVLDHX
    67153796U,	// EVLDW
    134264708U,	// EVLDWX
    67152714U,	// EVLHHESPLAT
    134264470U,	// EVLHHESPLATX
    67152739U,	// EVLHHOSSPLAT
    134264497U,	// EVLHHOSSPLATX
    67152753U,	// EVLHHOUSPLAT
    134264512U,	// EVLHHOUSPLATX
    67146218U,	// EVLWHE
    134263716U,	// EVLWHEX
    67152398U,	// EVLWHOS
    134264452U,	// EVLWHOSX
    67153198U,	// EVLWHOU
    134264621U,	// EVLWHOUX
    67152727U,	// EVLWHSPLAT
    134264484U,	// EVLWHSPLATX
    67152767U,	// EVLWWSPLAT
    134264527U,	// EVLWWSPLATX
    1073780091U,	// EVMERGEHI
    1073781846U,	// EVMERGEHILO
    1073781835U,	// EVMERGELO
    1073780102U,	// EVMERGELOHI
    1073777365U,	// EVMHEGSMFAA
    1073781375U,	// EVMHEGSMFAN
    1073777413U,	// EVMHEGSMIAA
    1073781423U,	// EVMHEGSMIAN
    1073777450U,	// EVMHEGUMIAA
    1073781460U,	// EVMHEGUMIAN
    1073779321U,	// EVMHESMF
    1073777498U,	// EVMHESMFA
    1073786395U,	// EVMHESMFAAW
    1073786937U,	// EVMHESMFANW
    1073780186U,	// EVMHESMI
    1073777590U,	// EVMHESMIA
    1073786460U,	// EVMHESMIAAW
    1073786989U,	// EVMHESMIANW
    1073779424U,	// EVMHESSF
    1073777541U,	// EVMHESSFA
    1073786421U,	// EVMHESSFAAW
    1073786963U,	// EVMHESSFANW
    1073786592U,	// EVMHESSIAAW
    1073787067U,	// EVMHESSIANW
    1073780225U,	// EVMHEUMI
    1073777633U,	// EVMHEUMIA
    1073786526U,	// EVMHEUMIAAW
    1073787028U,	// EVMHEUMIANW
    1073786658U,	// EVMHEUSIAAW
    1073787106U,	// EVMHEUSIANW
    1073777378U,	// EVMHOGSMFAA
    1073781388U,	// EVMHOGSMFAN
    1073777426U,	// EVMHOGSMIAA
    1073781436U,	// EVMHOGSMIAN
    1073777463U,	// EVMHOGUMIAA
    1073781473U,	// EVMHOGUMIAN
    1073779341U,	// EVMHOSMF
    1073777520U,	// EVMHOSMFA
    1073786408U,	// EVMHOSMFAAW
    1073786950U,	// EVMHOSMFANW
    1073780206U,	// EVMHOSMI
    1073777612U,	// EVMHOSMIA
    1073786500U,	// EVMHOSMIAAW
    1073787015U,	// EVMHOSMIANW
    1073779444U,	// EVMHOSSF
    1073777563U,	// EVMHOSSFA
    1073786434U,	// EVMHOSSFAAW
    1073786976U,	// EVMHOSSFANW
    1073786632U,	// EVMHOSSIAAW
    1073787093U,	// EVMHOSSIANW
    1073780255U,	// EVMHOUMI
    1073777666U,	// EVMHOUMIA
    1073786566U,	// EVMHOUMIAAW
    1073787054U,	// EVMHOUMIANW
    1073786698U,	// EVMHOUSIAAW
    1073787132U,	// EVMHOUSIANW
    35889U,	// EVMRA
    1073779331U,	// EVMWHSMF
    1073777509U,	// EVMWHSMFA
    1073780196U,	// EVMWHSMI
    1073777601U,	// EVMWHSMIA
    1073779434U,	// EVMWHSSF
    1073777552U,	// EVMWHSSFA
    1073780235U,	// EVMWHUMI
    1073777644U,	// EVMWHUMIA
    1073786487U,	// EVMWLSMIAAW
    1073787002U,	// EVMWLSMIANW
    1073786619U,	// EVMWLSSIAAW
    1073787080U,	// EVMWLSSIANW
    1073780245U,	// EVMWLUMI
    1073777655U,	// EVMWLUMIA
    1073786553U,	// EVMWLUMIAAW
    1073787041U,	// EVMWLUMIANW
    1073786685U,	// EVMWLUSIAAW
    1073787119U,	// EVMWLUSIANW
    1073779351U,	// EVMWSMF
    1073777531U,	// EVMWSMFA
    1073777391U,	// EVMWSMFAA
    1073781401U,	// EVMWSMFAN
    1073780216U,	// EVMWSMI
    1073777623U,	// EVMWSMIA
    1073777439U,	// EVMWSMIAA
    1073781449U,	// EVMWSMIAN
    1073779454U,	// EVMWSSF
    1073777574U,	// EVMWSSFA
    1073777402U,	// EVMWSSFAA
    1073781412U,	// EVMWSSFAN
    1073780265U,	// EVMWUMI
    1073777677U,	// EVMWUMIA
    1073777476U,	// EVMWUMIAA
    1073781486U,	// EVMWUMIAN
    1073778768U,	// EVNAND
    37760U,	// EVNEG
    1073784719U,	// EVNOR
    1073784732U,	// EVOR
    1073778393U,	// EVORC
    1073786903U,	// EVRLW
    1073780495U,	// EVRLWI
    44939U,	// EVRNDW
    13678908U,	// EVSEL
    1073786910U,	// EVSLW
    1073780521U,	// EVSLWI
    302028144U,	// EVSPLATFI
    302028469U,	// EVSPLATI
    1073785334U,	// EVSRWIS
    1073786141U,	// EVSRWIU
    1073785492U,	// EVSRWS
    1073786232U,	// EVSRWU
    67145620U,	// EVSTDD
    134263651U,	// EVSTDDX
    67146654U,	// EVSTDH
    134263753U,	// EVSTDHX
    67153811U,	// EVSTDW
    134264716U,	// EVSTDWX
    67146226U,	// EVSTWHE
    134263725U,	// EVSTWHEX
    67148866U,	// EVSTWHO
    134264054U,	// EVSTWHOX
    67146325U,	// EVSTWWE
    134263735U,	// EVSTWWEX
    67149075U,	// EVSTWWO
    134264064U,	// EVSTWWOX
    44649U,	// EVSUBFSMIAAW
    44781U,	// EVSUBFSSIAAW
    44715U,	// EVSUBFUMIAAW
    44847U,	// EVSUBFUSIAAW
    1073786796U,	// EVSUBFW
    335589301U,	// EVSUBIFW
    1073784763U,	// EVXOR
    36155U,	// EXTSB
    36155U,	// EXTSB8
    36155U,	// EXTSB8_32_64
    33214U,	// EXTSB8_rec
    33214U,	// EXTSB_rec
    37931U,	// EXTSH
    37931U,	// EXTSH8
    37931U,	// EXTSH8_32_64
    33745U,	// EXTSH8_rec
    33745U,	// EXTSH_rec
    45463U,	// EXTSW
    1073780134U,	// EXTSWSLI
    1073780134U,	// EXTSWSLI_32_64
    1073775714U,	// EXTSWSLI_32_64_rec
    1073775714U,	// EXTSWSLI_rec
    45463U,	// EXTSW_32
    45463U,	// EXTSW_32_64
    34984U,	// EXTSW_32_64_rec
    34984U,	// EXTSW_rec
    17665U,	// EnforceIEIO
    43043U,	// FABSD
    34622U,	// FABSD_rec
    43043U,	// FABSS
    34622U,	// FABSS_rec
    1073778507U,	// FADD
    1073785021U,	// FADDS
    1073776505U,	// FADDS_rec
    1073775246U,	// FADD_rec
    0U,	// FADDrtz
    36816U,	// FCFID
    43221U,	// FCFIDS
    34708U,	// FCFIDS_rec
    44261U,	// FCFIDU
    43598U,	// FCFIDUS
    34784U,	// FCFIDUS_rec
    34828U,	// FCFIDU_rec
    33475U,	// FCFID_rec
    1073781876U,	// FCMPOD
    1073781876U,	// FCMPOS
    1073786167U,	// FCMPUD
    1073786167U,	// FCMPUS
    1073781497U,	// FCPSGND
    1073775940U,	// FCPSGND_rec
    1073781497U,	// FCPSGNS
    1073775940U,	// FCPSGNS_rec
    36833U,	// FCTID
    44269U,	// FCTIDU
    47316U,	// FCTIDUZ
    35124U,	// FCTIDUZ_rec
    34837U,	// FCTIDU_rec
    47150U,	// FCTIDZ
    35090U,	// FCTIDZ_rec
    33483U,	// FCTID_rec
    45031U,	// FCTIW
    44400U,	// FCTIWU
    47325U,	// FCTIWUZ
    35134U,	// FCTIWUZ_rec
    34881U,	// FCTIWU_rec
    47334U,	// FCTIWZ
    35144U,	// FCTIWZ_rec
    34945U,	// FCTIW_rec
    1073786298U,	// FDIV
    1073785485U,	// FDIVS
    1073776618U,	// FDIVS_rec
    1073776731U,	// FDIV_rec
    1073778522U,	// FMADD
    1073785028U,	// FMADDS
    1073776513U,	// FMADDS_rec
    1073775263U,	// FMADD_rec
    42837U,	// FMR
    34581U,	// FMR_rec
    1073778124U,	// FMSUB
    1073785004U,	// FMSUBS
    1073776479U,	// FMSUBS_rec
    1073775083U,	// FMSUB_rec
    1073780770U,	// FMUL
    1073785351U,	// FMULS
    1073776583U,	// FMULS_rec
    1073775878U,	// FMUL_rec
    43067U,	// FNABSD
    34639U,	// FNABSD_rec
    43067U,	// FNABSS
    34639U,	// FNABSS_rec
    37737U,	// FNEGD
    33717U,	// FNEGD_rec
    37737U,	// FNEGS
    33717U,	// FNEGS_rec
    1073778539U,	// FNMADD
    1073785036U,	// FNMADDS
    1073776522U,	// FNMADDS_rec
    1073775282U,	// FNMADD_rec
    1073778141U,	// FNMSUB
    1073785012U,	// FNMSUBS
    1073776488U,	// FNMSUBS_rec
    1073775102U,	// FNMSUB_rec
    37407U,	// FRE
    43327U,	// FRES
    34726U,	// FRES_rec
    33632U,	// FRE_rec
    39330U,	// FRIMD
    34072U,	// FRIMD_rec
    39330U,	// FRIMS
    34072U,	// FRIMS_rec
    39688U,	// FRIND
    34146U,	// FRIND_rec
    39688U,	// FRINS
    34146U,	// FRINS_rec
    41270U,	// FRIPD
    34425U,	// FRIPD_rec
    41270U,	// FRIPS
    34425U,	// FRIPS_rec
    47231U,	// FRIZD
    35108U,	// FRIZD_rec
    47231U,	// FRIZS
    35108U,	// FRIZS_rec
    42181U,	// FRSP
    34456U,	// FRSP_rec
    37431U,	// FRSQRTE
    43333U,	// FRSQRTES
    34733U,	// FRSQRTES_rec
    33650U,	// FRSQRTE_rec
    1073780670U,	// FSELD
    1073775852U,	// FSELD_rec
    1073780670U,	// FSELS
    1073775852U,	// FSELS_rec
    44088U,	// FSQRT
    43590U,	// FSQRTS
    34767U,	// FSQRTS_rec
    34811U,	// FSQRT_rec
    1073778109U,	// FSUB
    1073784997U,	// FSUBS
    1073776471U,	// FSUBS_rec
    1073775066U,	// FSUB_rec
    1073786321U,	// FTDIV
    44095U,	// FTSQRT
    17197U,	// GETtlsADDR
    15269U,	// GETtlsADDR32
    17183U,	// GETtlsldADDR
    15254U,	// GETtlsldADDR32
    17549U,	// HRFID
    1119448U,	// ICBI
    1122381U,	// ICBIEP
    429750U,	// ICBLC
    427691U,	// ICBLQ
    437150U,	// ICBT
    436735U,	// ICBTLS
    38139U,	// ICCCI
    1073780676U,	// ISEL
    1073780676U,	// ISEL8
    17522U,	// ISYNC
    369134616U,	// LA
    134264193U,	// LBARX
    1208006017U,	// LBARXL
    134264074U,	// LBEPX
    67155982U,	// LBZ
    67155982U,	// LBZ8
    1073787944U,	// LBZCIX
    402697615U,	// LBZU
    402697615U,	// LBZU8
    436254551U,	// LBZUX
    436254551U,	// LBZUX8
    134264789U,	// LBZX
    134264789U,	// LBZX8
    1073788885U,	// LBZXTLS
    1073788885U,	// LBZXTLS_
    1073788885U,	// LBZXTLS_32
    67145717U,	// LD
    134264200U,	// LDARX
    1208006024U,	// LDARXL
    1073785661U,	// LDAT
    134264221U,	// LDBRX
    1073787913U,	// LDCIX
    134264032U,	// LDMX
    402697461U,	// LDU
    436254473U,	// LDUX
    134263673U,	// LDX
    1073787769U,	// LDXTLS
    1073787769U,	// LDXTLS_
    17069U,	// LDgotTprelL
    15151U,	// LDgotTprelL32
    17534U,	// LDtoc
    17373U,	// LDtocBA
    17373U,	// LDtocCPT
    16998U,	// LDtocJTI
    17018U,	// LDtocL
    67145646U,	// LFD
    134264089U,	// LFDEPX
    402697415U,	// LFDU
    436254458U,	// LFDUX
    134263660U,	// LFDX
    134263560U,	// LFIWAX
    134264810U,	// LFIWZX
    67152222U,	// LFS
    402697534U,	// LFSU
    436254519U,	// LFSUX
    134264439U,	// LFSX
    67144625U,	// LHA
    67144625U,	// LHA8
    134264207U,	// LHARX
    1208006031U,	// LHARXL
    402697403U,	// LHAU
    402697403U,	// LHAU8
    436254437U,	// LHAUX
    436254437U,	// LHAUX8
    134263545U,	// LHAX
    134263545U,	// LHAX8
    134264236U,	// LHBRX
    134264236U,	// LHBRX8
    134264106U,	// LHEPX
    67156056U,	// LHZ
    67156056U,	// LHZ8
    1073787952U,	// LHZCIX
    402697621U,	// LHZU
    402697621U,	// LHZU8
    436254558U,	// LHZUX
    436254558U,	// LHZUX8
    134264804U,	// LHZX
    134264804U,	// LHZX8
    1073788900U,	// LHZXTLS
    1073788900U,	// LHZXTLS_
    1073788900U,	// LHZXTLS_32
    100701590U,	// LI
    100701590U,	// LI8
    100706794U,	// LIS
    100706794U,	// LIS8
    67153957U,	// LMW
    1073780576U,	// LSWI
    134263583U,	// LVEBX
    134263762U,	// LVEHX
    134264725U,	// LVEWX
    134256652U,	// LVSL
    134260714U,	// LVSR
    134264684U,	// LVX
    134256710U,	// LVXL
    67144761U,	// LWA
    134264214U,	// LWARX
    1208006038U,	// LWARXL
    1073785739U,	// LWAT
    436254444U,	// LWAUX
    134263577U,	// LWAX
    134263577U,	// LWAX_32
    67144761U,	// LWA_32
    134264270U,	// LWBRX
    134264270U,	// LWBRX8
    134264121U,	// LWEPX
    67156207U,	// LWZ
    67156207U,	// LWZ8
    1073787960U,	// LWZCIX
    402697627U,	// LWZU
    402697627U,	// LWZU8
    436254565U,	// LWZUX
    436254565U,	// LWZUX8
    134264827U,	// LWZX
    134264827U,	// LWZX8
    1073788923U,	// LWZXTLS
    1073788923U,	// LWZXTLS_
    1073788923U,	// LWZXTLS_32
    17541U,	// LWZtoc
    17036U,	// LWZtocL
    67145961U,	// LXSD
    134263695U,	// LXSDX
    134264780U,	// LXSIBZX
    134264795U,	// LXSIHZX
    134263568U,	// LXSIWAX
    134264818U,	// LXSIWZX
    67151078U,	// LXSSP
    134264161U,	// LXSSPX
    67153403U,	// LXV
    134263509U,	// LXVB16X
    134263475U,	// LXVD2X
    134264424U,	// LXVDSX
    134263528U,	// LXVH8X
    1073780793U,	// LXVL
    1073780711U,	// LXVLL
    67151196U,	// LXVP
    134264178U,	// LXVPX
    134263607U,	// LXVRBX
    134263678U,	// LXVRDX
    134263786U,	// LXVRHX
    134264757U,	// LXVRWX
    134263492U,	// LXVW4X
    134264462U,	// LXVWSX
    134264695U,	// LXVX
    1073778625U,	// MADDHD
    1073786068U,	// MADDHDU
    1073778681U,	// MADDLD
    1073778681U,	// MADDLD8
    1418933U,	// MBAR
    37536U,	// MCRF
    43363U,	// MCRFS
    1095257U,	// MCRXRX
    469799349U,	// MFBHRBE
    1091306U,	// MFCR
    1091306U,	// MFCR8
    1091575U,	// MFCTR
    1091575U,	// MFCTR8
    42709U,	// MFDCR
    1091927U,	// MFFS
    39878U,	// MFFSCDRN
    503354948U,	// MFFSCDRNI
    1085886U,	// MFFSCE
    39869U,	// MFFSCRN
    536909370U,	// MFFSCRNI
    1087493U,	// MFFSL
    1083320U,	// MFFS_rec
    1091394U,	// MFLR
    1091394U,	// MFLR8
    1091542U,	// MFMSR
    570462886U,	// MFOCRF
    570462886U,	// MFOCRF8
    42842U,	// MFPMR
    42946U,	// MFSPR
    42946U,	// MFSPR8
    604022736U,	// MFSR
    39694U,	// MFSRIN
    36176U,	// MFTB
    14723010U,	// MFTB8
    36995U,	// MFVRD
    15771586U,	// MFVRSAVE
    15771586U,	// MFVRSAVEv
    47348U,	// MFVRWZ
    1091320U,	// MFVSCR
    36995U,	// MFVSRD
    36880U,	// MFVSRLD
    47348U,	// MFVSRWZ
    1073778836U,	// MODSD
    1073787173U,	// MODSW
    1073778991U,	// MODUD
    1073787383U,	// MODUW
    17514U,	// MSGSYNC
    17528U,	// MSYNC
    37558U,	// MTCRF
    37558U,	// MTCRF8
    1091582U,	// MTCTR
    1091582U,	// MTCTR8
    1091582U,	// MTCTR8loop
    1091582U,	// MTCTRloop
    235284195U,	// MTDCR
    1411433U,	// MTFSB0
    1411515U,	// MTFSB1
    1073779417U,	// MTFSF
    1073780072U,	// MTFSFI
    1073775705U,	// MTFSFI_rec
    1073775524U,	// MTFSF_rec
    37593U,	// MTFSFb
    1091400U,	// MTLR
    1091400U,	// MTLR8
    42973U,	// MTMSR
    36987U,	// MTMSRD
    463534U,	// MTOCRF
    463534U,	// MTOCRF8
    42849U,	// MTPMR
    42953U,	// MTSPR
    42953U,	// MTSPR8
    501732U,	// MTSR
    39702U,	// MTSRIN
    37003U,	// MTVRD
    1081579U,	// MTVRSAVE
    1442027U,	// MTVRSAVEv
    35902U,	// MTVRWA
    47357U,	// MTVRWZ
    1091328U,	// MTVSCR
    39036U,	// MTVSRBM
    637572528U,	// MTVSRBMI
    37003U,	// MTVSRD
    1073778571U,	// MTVSRDD
    39108U,	// MTVSRDM
    39214U,	// MTVSRHM
    39379U,	// MTVSRQM
    35902U,	// MTVSRWA
    39491U,	// MTVSRWM
    43676U,	// MTVSRWS
    47357U,	// MTVSRWZ
    1073778633U,	// MULHD
    1073786077U,	// MULHDU
    1073776643U,	// MULHDU_rec
    1073775291U,	// MULHD_rec
    1073786839U,	// MULHW
    1073786216U,	// MULHWU
    1073776696U,	// MULHWU_rec
    1073776761U,	// MULHW_rec
    1073778690U,	// MULLD
    1073781733U,	// MULLDO
    1073776010U,	// MULLDO_rec
    1073775315U,	// MULLD_rec
    1073780122U,	// MULLI
    1073780122U,	// MULLI8
    1073786889U,	// MULLW
    1073782020U,	// MULLWO
    1073776153U,	// MULLWO_rec
    1073776777U,	// MULLW_rec
    17232U,	// MoveGOTtoLR
    17220U,	// MovePCtoLR
    16546U,	// MovePCtoLR8
    1073778754U,	// NAND
    1073778754U,	// NAND8
    1073775329U,	// NAND8_rec
    1073775329U,	// NAND_rec
    17671U,	// NAP
    37724U,	// NEG
    37724U,	// NEG8
    39996U,	// NEG8O
    34284U,	// NEG8O_rec
    33711U,	// NEG8_rec
    39996U,	// NEGO
    34284U,	// NEGO_rec
    33711U,	// NEG_rec
    17680U,	// NOP
    14853U,	// NOP_GT_PWR6
    14865U,	// NOP_GT_PWR7
    1073784707U,	// NOR
    1073784707U,	// NOR8
    1073776411U,	// NOR8_rec
    1073776411U,	// NOR_rec
    1073784700U,	// OR
    1073784700U,	// OR8
    1073776412U,	// OR8_rec
    1073778381U,	// ORC
    1073778381U,	// ORC8
    1073775213U,	// ORC8_rec
    1073775213U,	// ORC_rec
    1073780344U,	// ORI
    1073780344U,	// ORI8
    1073785328U,	// ORIS
    1073785328U,	// ORIS8
    1073776412U,	// OR_rec
    1073779977U,	// PADDI
    1073779977U,	// PADDI8
    671126793U,	// PADDI8pc
    17600U,	// PADDIdtprel
    671126793U,	// PADDIpc
    1073778791U,	// PDEPD
    1073778973U,	// PEXTD
    704690189U,	// PLBZ
    704690189U,	// PLBZ8
    738244621U,	// PLBZ8pc
    738244621U,	// PLBZpc
    704679947U,	// PLD
    738234379U,	// PLDpc
    704679853U,	// PLFD
    738234285U,	// PLFDpc
    704686429U,	// PLFS
    738240861U,	// PLFSpc
    704678832U,	// PLHA
    704678832U,	// PLHA8
    738233264U,	// PLHA8pc
    738233264U,	// PLHApc
    704690263U,	// PLHZ
    704690263U,	// PLHZ8
    738244695U,	// PLHZ8pc
    738244695U,	// PLHZpc
    771790241U,	// PLI
    771790241U,	// PLI8
    704678968U,	// PLWA
    704678968U,	// PLWA8
    738233400U,	// PLWA8pc
    738233400U,	// PLWApc
    704690414U,	// PLWZ
    704690414U,	// PLWZ8
    738244846U,	// PLWZ8pc
    738244846U,	// PLWZpc
    704680168U,	// PLXSD
    738234600U,	// PLXSDpc
    704685285U,	// PLXSSP
    738239717U,	// PLXSSPpc
    704687610U,	// PLXV
    704685403U,	// PLXVP
    738239835U,	// PLXVPpc
    738242042U,	// PLXVpc
    1073777163U,	// PMXVBF16GER2
    2415958814U,	// PMXVBF16GER2NN
    2415960388U,	// PMXVBF16GER2NP
    2415958873U,	// PMXVBF16GER2PN
    2415960447U,	// PMXVBF16GER2PP
    1073777177U,	// PMXVF16GER2
    2415958830U,	// PMXVF16GER2NN
    2415960404U,	// PMXVF16GER2NP
    2415958889U,	// PMXVF16GER2PN
    2415960463U,	// PMXVF16GER2PP
    1073784584U,	// PMXVF32GER
    2415958845U,	// PMXVF32GERNN
    2415960419U,	// PMXVF32GERNP
    2415958915U,	// PMXVF32GERPN
    2415960521U,	// PMXVF32GERPP
    1073784596U,	// PMXVF64GER
    2415958859U,	// PMXVF64GERNN
    2415960433U,	// PMXVF64GERNP
    2415958929U,	// PMXVF64GERPN
    2415960535U,	// PMXVF64GERPP
    1073777190U,	// PMXVI16GER2
    2415960478U,	// PMXVI16GER2PP
    1073784837U,	// PMXVI16GER2S
    2415960549U,	// PMXVI16GER2SPP
    1073777291U,	// PMXVI4GER8
    2415960507U,	// PMXVI4GER8PP
    1073777203U,	// PMXVI8GER4
    2415960493U,	// PMXVI8GER4PP
    2415960565U,	// PMXVI8GER4SPP
    36191U,	// POPCNTB
    37123U,	// POPCNTD
    45504U,	// POPCNTW
    17350U,	// PPC32GOT
    17360U,	// PPC32PICGOT
    15300U,	// PREPARE_PROBED_ALLOCA_32
    15721U,	// PREPARE_PROBED_ALLOCA_64
    15348U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32
    15769U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64
    15282U,	// PROBED_ALLOCA_32
    15703U,	// PROBED_ALLOCA_64
    15326U,	// PROBED_STACKALLOC_32
    15747U,	// PROBED_STACKALLOC_64
    1140889466U,	// PSQ_L
    1476439334U,	// PSQ_LU
    1509996324U,	// PSQ_LUX
    1208005705U,	// PSQ_LX
    1140894791U,	// PSQ_ST
    1476799839U,	// PSQ_STU
    1510356806U,	// PSQ_STUX
    1208006364U,	// PSQ_STX
    704679282U,	// PSTB
    704679282U,	// PSTB8
    738233714U,	// PSTB8pc
    738233714U,	// PSTBpc
    704680214U,	// PSTD
    738234646U,	// PSTDpc
    704679859U,	// PSTFD
    738234291U,	// PSTFDpc
    704686442U,	// PSTFS
    738240874U,	// PSTFSpc
    704681046U,	// PSTH
    704681046U,	// PSTH8
    738235478U,	// PSTH8pc
    738235478U,	// PSTHpc
    704688606U,	// PSTW
    704688606U,	// PSTW8
    738243038U,	// PSTW8pc
    738243038U,	// PSTWpc
    704680175U,	// PSTXSD
    738234607U,	// PSTXSDpc
    704685293U,	// PSTXSSP
    738239725U,	// PSTXSSPpc
    704687616U,	// PSTXV
    704685410U,	// PSTXVP
    738239842U,	// PSTXVPpc
    738242048U,	// PSTXVpc
    43027U,	// PS_ABS
    34613U,	// PS_ABS_rec
    1073778491U,	// PS_ADD
    1073775237U,	// PS_ADD_rec
    1073777018U,	// PS_CMPO0
    1073777100U,	// PS_CMPO1
    1073777049U,	// PS_CMPU0
    1073777131U,	// PS_CMPU1
    1073786282U,	// PS_DIV
    1073776722U,	// PS_DIV_rec
    1073778513U,	// PS_MADD
    1073777028U,	// PS_MADDS0
    1073774935U,	// PS_MADDS0_rec
    1073777110U,	// PS_MADDS1
    1073774994U,	// PS_MADDS1_rec
    1073775253U,	// PS_MADD_rec
    1073776977U,	// PS_MERGE00
    1073774899U,	// PS_MERGE00_rec
    1073777059U,	// PS_MERGE01
    1073774958U,	// PS_MERGE01_rec
    1073776989U,	// PS_MERGE10
    1073774912U,	// PS_MERGE10_rec
    1073777071U,	// PS_MERGE11
    1073774971U,	// PS_MERGE11_rec
    42830U,	// PS_MR
    34573U,	// PS_MR_rec
    1073778115U,	// PS_MSUB
    1073775073U,	// PS_MSUB_rec
    1073780754U,	// PS_MUL
    1073777039U,	// PS_MULS0
    1073774947U,	// PS_MULS0_rec
    1073777121U,	// PS_MULS1
    1073775006U,	// PS_MULS1_rec
    1073775869U,	// PS_MUL_rec
    43049U,	// PS_NABS
    34629U,	// PS_NABS_rec
    37721U,	// PS_NEG
    33708U,	// PS_NEG_rec
    1073778529U,	// PS_NMADD
    1073775271U,	// PS_NMADD_rec
    1073778131U,	// PS_NMSUB
    1073775091U,	// PS_NMSUB_rec
    43319U,	// PS_RES
    34717U,	// PS_RES_rec
    37420U,	// PS_RSQRTE
    33638U,	// PS_RSQRTE_rec
    1073780662U,	// PS_SEL
    1073775843U,	// PS_SEL_rec
    1073778093U,	// PS_SUB
    1073775057U,	// PS_SUB_rec
    1073777009U,	// PS_SUM0
    1073774925U,	// PS_SUM0_rec
    1073777091U,	// PS_SUM1
    1073774984U,	// PS_SUM1_rec
    16737U,	// RESTORE_ACC
    17129U,	// RESTORE_CR
    17284U,	// RESTORE_CRBIT
    16711U,	// RESTORE_UACC
    17576U,	// RFCI
    17587U,	// RFDI
    527451U,	// RFEBB
    17592U,	// RFI
    17550U,	// RFID
    17581U,	// RFMCI
    1073780639U,	// RLDCL
    1073775826U,	// RLDCL_rec
    1073784540U,	// RLDCR
    1073776370U,	// RLDCR_rec
    1073778316U,	// RLDIC
    1073780646U,	// RLDICL
    1073780646U,	// RLDICL_32
    1073780646U,	// RLDICL_32_64
    1073775834U,	// RLDICL_32_rec
    1073775834U,	// RLDICL_rec
    1073784560U,	// RLDICR
    1073784560U,	// RLDICR_32
    1073776378U,	// RLDICR_rec
    1073775182U,	// RLDIC_rec
    3489699266U,	// RLDIMI
    3489694829U,	// RLDIMI_rec
    268473802U,	// RLWIMI
    268473802U,	// RLWIMI8
    268469366U,	// RLWIMI8_rec
    268469366U,	// RLWIMI_rec
    1073781168U,	// RLWINM
    1073781168U,	// RLWINM8
    1073775903U,	// RLWINM8_rec
    1073775903U,	// RLWINM_rec
    1073781185U,	// RLWNM
    1073781185U,	// RLWNM8
    1073775912U,	// RLWNM8_rec
    1073775912U,	// RLWNM_rec
    16703U,	// ReadTB
    1085152U,	// SC
    15986U,	// SELECT_CC_F16
    15908U,	// SELECT_CC_F4
    16275U,	// SELECT_CC_F8
    15933U,	// SELECT_CC_I4
    16320U,	// SELECT_CC_I8
    16947U,	// SELECT_CC_SPE
    15879U,	// SELECT_CC_SPE4
    16802U,	// SELECT_CC_VRRC
    16771U,	// SELECT_CC_VSFRC
    16862U,	// SELECT_CC_VSRC
    16831U,	// SELECT_CC_VSSRC
    16001U,	// SELECT_F16
    15922U,	// SELECT_F4
    16289U,	// SELECT_F8
    15947U,	// SELECT_I4
    16494U,	// SELECT_I8
    16962U,	// SELECT_SPE
    15895U,	// SELECT_SPE4
    16818U,	// SELECT_VRRC
    16788U,	// SELECT_VSFRC
    16878U,	// SELECT_VSRC
    16848U,	// SELECT_VSSRC
    36170U,	// SETB
    36170U,	// SETB8
    36415U,	// SETBC
    36415U,	// SETBC8
    42701U,	// SETBCR
    42701U,	// SETBCR8
    17095U,	// SETFLM
    36407U,	// SETNBC
    36407U,	// SETNBC8
    42692U,	// SETNBCR
    42692U,	// SETNBCR8
    16919U,	// SETRND
    17567U,	// SETRNDi
    33598U,	// SLBFEE_rec
    17470U,	// SLBIA
    1085947U,	// SLBIE
    37713U,	// SLBIEG
    37331U,	// SLBMFEE
    44449U,	// SLBMFEV
    37412U,	// SLBMTE
    17498U,	// SLBSYNC
    1073778720U,	// SLD
    1073775323U,	// SLD_rec
    1073786912U,	// SLW
    1073786912U,	// SLW8
    1073776785U,	// SLW8_rec
    1073776785U,	// SLW_rec
    67156207U,	// SPELWZ
    134264827U,	// SPELWZX
    67154399U,	// SPESTW
    134264774U,	// SPESTWX
    16750U,	// SPILL_ACC
    17141U,	// SPILL_CR
    17299U,	// SPILL_CRBIT
    16725U,	// SPILL_UACC
    1073778460U,	// SRAD
    1073779970U,	// SRADI
    1073779970U,	// SRADI_32
    1073775634U,	// SRADI_rec
    1073775230U,	// SRAD_rec
    1073786724U,	// SRAW
    1073780471U,	// SRAWI
    1073775743U,	// SRAWI_rec
    1073776744U,	// SRAW_rec
    1073778814U,	// SRD
    1073775343U,	// SRD_rec
    1073787167U,	// SRW
    1073787167U,	// SRW8
    1073776791U,	// SRW8_rec
    1073776791U,	// SRW_rec
    67145075U,	// STB
    67145075U,	// STB8
    1073787905U,	// STBCIX
    134252778U,	// STBCX
    134264081U,	// STBEPX
    403057857U,	// STBU
    403057857U,	// STBU8
    436614899U,	// STBUX
    436614899U,	// STBUX8
    134263624U,	// STBX
    134263624U,	// STBX8
    1073787720U,	// STBXTLS
    1073787720U,	// STBXTLS_
    1073787720U,	// STBXTLS_32
    67146007U,	// STD
    1073785667U,	// STDAT
    134264228U,	// STDBRX
    1073787920U,	// STDCIX
    134252786U,	// STDCX
    403057914U,	// STDU
    436614927U,	// STDUX
    134263710U,	// STDX
    1073787806U,	// STDXTLS
    1073787806U,	// STDXTLS_
    67145652U,	// STFD
    134264097U,	// STFDEPX
    403057869U,	// STFDU
    436614913U,	// STFDUX
    134263666U,	// STFDX
    134264740U,	// STFIWX
    67152235U,	// STFS
    403057988U,	// STFSU
    436614974U,	// STFSUX
    134264445U,	// STFSX
    67146839U,	// STH
    67146839U,	// STH8
    134264243U,	// STHBRX
    1073787928U,	// STHCIX
    134252794U,	// STHCX
    134264113U,	// STHEPX
    403057943U,	// STHU
    403057943U,	// STHU8
    436614941U,	// STHUX
    436614941U,	// STHUX8
    134263803U,	// STHX
    134263803U,	// STHX8
    1073787899U,	// STHXTLS
    1073787899U,	// STHXTLS_
    1073787899U,	// STHXTLS_32
    67153962U,	// STMW
    17684U,	// STOP
    1073780582U,	// STSWI
    134263590U,	// STVEBX
    134263769U,	// STVEHX
    134264732U,	// STVEWX
    134264689U,	// STVX
    134256716U,	// STVXL
    67154399U,	// STW
    67154399U,	// STW8
    1073785745U,	// STWAT
    134264277U,	// STWBRX
    1073787936U,	// STWCIX
    134252802U,	// STWCX
    134264128U,	// STWEPX
    403058048U,	// STWU
    403058048U,	// STWU8
    436614992U,	// STWUX
    436614992U,	// STWUX8
    134264774U,	// STWX
    134264774U,	// STWX8
    1073788870U,	// STWXTLS
    1073788870U,	// STWXTLS_
    1073788870U,	// STWXTLS_32
    67145968U,	// STXSD
    134263702U,	// STXSDX
    134263598U,	// STXSIBX
    134263598U,	// STXSIBXv
    134263777U,	// STXSIHX
    134263777U,	// STXSIHXv
    134264748U,	// STXSIWX
    67151086U,	// STXSSP
    134264169U,	// STXSSPX
    67153409U,	// STXV
    134263518U,	// STXVB16X
    134263483U,	// STXVD2X
    134263536U,	// STXVH8X
    1073780799U,	// STXVL
    1073780718U,	// STXVLL
    67151203U,	// STXVP
    134264185U,	// STXVPX
    134263615U,	// STXVRBX
    134263686U,	// STXVRDX
    134263794U,	// STXVRHX
    134264765U,	// STXVRWX
    134263500U,	// STXVW4X
    134264701U,	// STXVX
    1073779315U,	// SUBF
    1073779315U,	// SUBF8
    1073781813U,	// SUBF8O
    1073776100U,	// SUBF8O_rec
    1073775517U,	// SUBF8_rec
    1073778295U,	// SUBFC
    1073778295U,	// SUBFC8
    1073781719U,	// SUBFC8O
    1073775994U,	// SUBFC8O_rec
    1073775158U,	// SUBFC8_rec
    1073781719U,	// SUBFCO
    1073775994U,	// SUBFCO_rec
    1073775158U,	// SUBFC_rec
    1073779171U,	// SUBFE
    1073779171U,	// SUBFE8
    1073781763U,	// SUBFE8O
    1073776044U,	// SUBFE8O_rec
    1073775431U,	// SUBFE8_rec
    1073781763U,	// SUBFEO
    1073776044U,	// SUBFEO_rec
    1073775431U,	// SUBFE_rec
    1073778323U,	// SUBFIC
    1073778323U,	// SUBFIC8
    37392U,	// SUBFME
    37392U,	// SUBFME8
    39955U,	// SUBFME8O
    34238U,	// SUBFME8O_rec
    33623U,	// SUBFME8_rec
    39955U,	// SUBFMEO
    34238U,	// SUBFMEO_rec
    33623U,	// SUBFME_rec
    1073781813U,	// SUBFO
    1073776100U,	// SUBFO_rec
    37477U,	// SUBFZE
    37477U,	// SUBFZE8
    39980U,	// SUBFZE8O
    34266U,	// SUBFZE8O_rec
    33684U,	// SUBFZE8_rec
    39980U,	// SUBFZEO
    34266U,	// SUBFZEO_rec
    33684U,	// SUBFZE_rec
    1073775517U,	// SUBF_rec
    1085124U,	// SYNC
    1083378U,	// TABORT
    1074102827U,	// TABORTDC
    1074103290U,	// TABORTDCI
    1074102899U,	// TABORTWC
    1074103302U,	// TABORTWCI
    1182808U,	// TAILB
    1182808U,	// TAILB8
    1215313U,	// TAILBA
    1215313U,	// TAILBA8
    17706U,	// TAILBCTR
    17706U,	// TAILBCTR8
    525657U,	// TBEGIN
    17257U,	// TBEGIN_RET
    1087346U,	// TCHECK
    17245U,	// TCHECK_RET
    2263752U,	// TCRETURNai
    2263649U,	// TCRETURNai8
    2232066U,	// TCRETURNdi
    2230895U,	// TCRETURNdi8
    2139816U,	// TCRETURNri
    2132605U,	// TCRETURNri8
    1074106622U,	// TD
    1074107739U,	// TDI
    525032U,	// TEND
    17476U,	// TLBIA
    248910338U,	// TLBIE
    1087406U,	// TLBIEL
    45823U,	// TLBIVAX
    1085426U,	// TLBLD
    1086867U,	// TLBLI
    17555U,	// TLBRE
    1073779224U,	// TLBRE2
    46689U,	// TLBSX
    1073788513U,	// TLBSX2
    1073776906U,	// TLBSX2D
    17506U,	// TLBSYNC
    17561U,	// TLBWE
    1073779271U,	// TLBWE2
    17675U,	// TRAP
    14843U,	// TRECHKPT
    1082637U,	// TRECLAIM
    526127U,	// TSR
    1074114994U,	// TW
    1074108269U,	// TWI
    17103U,	// UNENCODED_NOP
    17118U,	// UpdateGBR
    1073778040U,	// VABSDUB
    1073779804U,	// VABSDUH
    1073787390U,	// VABSDUW
    1073784383U,	// VADDCUQ
    1073787373U,	// VADDCUW
    1073784414U,	// VADDECUQ
    1073781252U,	// VADDEUQM
    1073782949U,	// VADDFP
    1073784960U,	// VADDSBS
    1073785243U,	// VADDSHS
    1073785528U,	// VADDSWS
    1073780890U,	// VADDUBM
    1073784988U,	// VADDUBS
    1073780962U,	// VADDUDM
    1073781089U,	// VADDUHM
    1073785271U,	// VADDUHS
    1073781233U,	// VADDUQM
    1073781345U,	// VADDUWM
    1073785555U,	// VADDUWS
    1073778784U,	// VAND
    1073778288U,	// VANDC
    1073777914U,	// VAVGSB
    1073779690U,	// VAVGSH
    1073787198U,	// VAVGSW
    1073778058U,	// VAVGUB
    1073779822U,	// VAVGUH
    1073787417U,	// VAVGUW
    1073778725U,	// VBPERMD
    1073784288U,	// VBPERMQ
    1342223984U,	// VCFSX
    2147530352U,	// VCFSX_0
    1073778588U,	// VCFUGED
    1342224150U,	// VCFUX
    2147530518U,	// VCFUX_0
    1073784618U,	// VCIPHER
    1073785961U,	// VCIPHERLAST
    1073777835U,	// VCLRLB
    1073777891U,	// VCLRRB
    36393U,	// VCLZB
    37271U,	// VCLZD
    1073780993U,	// VCLZDM
    38084U,	// VCLZH
    35956U,	// VCLZLSBB
    45715U,	// VCLZW
    1073782913U,	// VCMPBFP
    1073776206U,	// VCMPBFP_rec
    1073783012U,	// VCMPEQFP
    1073776227U,	// VCMPEQFP_rec
    1073778083U,	// VCMPEQUB
    1073775046U,	// VCMPEQUB_rec
    1073779042U,	// VCMPEQUD
    1073775360U,	// VCMPEQUD_rec
    1073779847U,	// VCMPEQUH
    1073775577U,	// VCMPEQUH_rec
    1073784460U,	// VCMPEQUQ
    1073776338U,	// VCMPEQUQ_rec
    1073787451U,	// VCMPEQUW
    1073776816U,	// VCMPEQUW_rec
    1073782966U,	// VCMPGEFP
    1073776216U,	// VCMPGEFP_rec
    1073783022U,	// VCMPGTFP
    1073776238U,	// VCMPGTFP_rec
    1073777967U,	// VCMPGTSB
    1073775027U,	// VCMPGTSB_rec
    1073778894U,	// VCMPGTSD
    1073775349U,	// VCMPGTSD_rec
    1073779743U,	// VCMPGTSH
    1073775558U,	// VCMPGTSH_rec
    1073784335U,	// VCMPGTSQ
    1073776327U,	// VCMPGTSQ_rec
    1073787277U,	// VCMPGTSW
    1073776797U,	// VCMPGTSW_rec
    1073778178U,	// VCMPGTUB
    1073775111U,	// VCMPGTUB_rec
    1073779052U,	// VCMPGTUD
    1073775371U,	// VCMPGTUD_rec
    1073779869U,	// VCMPGTUH
    1073775588U,	// VCMPGTUH_rec
    1073784470U,	// VCMPGTUQ
    1073776349U,	// VCMPGTUQ_rec
    1073787486U,	// VCMPGTUW
    1073776827U,	// VCMPGTUW_rec
    1073777800U,	// VCMPNEB
    1073775017U,	// VCMPNEB_rec
    1073779622U,	// VCMPNEH
    1073775548U,	// VCMPNEH_rec
    1073786787U,	// VCMPNEW
    1073776751U,	// VCMPNEW_rec
    1073778207U,	// VCMPNEZB
    1073775122U,	// VCMPNEZB_rec
    1073779898U,	// VCMPNEZH
    1073775599U,	// VCMPNEZH_rec
    1073787529U,	// VCMPNEZW
    1073776845U,	// VCMPNEZW_rec
    1073784327U,	// VCMPSQ
    1073784452U,	// VCMPUQ
    1073777762U,	// VCNTMBB
    1073778473U,	// VCNTMBD
    1073779598U,	// VCNTMBH
    1073786730U,	// VCNTMBW
    1342221101U,	// VCTSXS
    2147527469U,	// VCTSXS_0
    1342221109U,	// VCTUXS
    2147527477U,	// VCTUXS_0
    36400U,	// VCTZB
    37286U,	// VCTZD
    1073781010U,	// VCTZDM
    38091U,	// VCTZH
    35966U,	// VCTZLSBB
    45732U,	// VCTZW
    1073778852U,	// VDIVESD
    1073784318U,	// VDIVESQ
    1073787189U,	// VDIVESW
    1073779007U,	// VDIVEUD
    1073784443U,	// VDIVEUQ
    1073787408U,	// VDIVEUW
    1073778904U,	// VDIVSD
    1073784345U,	// VDIVSQ
    1073787294U,	// VDIVSW
    1073779062U,	// VDIVUD
    1073784480U,	// VDIVUQ
    1073787496U,	// VDIVUW
    1073786350U,	// VEQV
    39015U,	// VEXPANDBM
    39097U,	// VEXPANDDM
    39203U,	// VEXPANDHM
    39368U,	// VEXPANDQM
    39480U,	// VEXPANDWM
    41159U,	// VEXPTEFP
    1073788054U,	// VEXTDDVLX
    1073788431U,	// VEXTDDVRX
    1073788042U,	// VEXTDUBVLX
    1073788419U,	// VEXTDUBVRX
    1073788075U,	// VEXTDUHVLX
    1073788452U,	// VEXTDUHVRX
    1073788097U,	// VEXTDUWVLX
    1073788474U,	// VEXTDUWVRX
    39045U,	// VEXTRACTBM
    3489698039U,	// VEXTRACTD
    39117U,	// VEXTRACTDM
    39233U,	// VEXTRACTHM
    39388U,	// VEXTRACTQM
    3489697270U,	// VEXTRACTUB
    3489698961U,	// VEXTRACTUH
    3489706565U,	// VEXTRACTUW
    39500U,	// VEXTRACTWM
    36580U,	// VEXTSB2D
    36580U,	// VEXTSB2Ds
    44551U,	// VEXTSB2W
    44551U,	// VEXTSB2Ws
    42355U,	// VEXTSD2Q
    36590U,	// VEXTSH2D
    36590U,	// VEXTSH2Ds
    44561U,	// VEXTSH2W
    44561U,	// VEXTSH2Ws
    36600U,	// VEXTSW2D
    36600U,	// VEXTSW2Ds
    1073787994U,	// VEXTUBLX
    1073788356U,	// VEXTUBRX
    1073788022U,	// VEXTUHLX
    1073788399U,	// VEXTUHRX
    1073788118U,	// VEXTUWLX
    1073788495U,	// VEXTUWRX
    36642U,	// VGBBD
    1073777864U,	// VGNB
    2415965265U,	// VINSBLX
    2415965627U,	// VINSBRX
    2415965312U,	// VINSBVLX
    2415965689U,	// VINSBVRX
    805343422U,	// VINSD
    2415965284U,	// VINSDLX
    2415965661U,	// VINSDRX
    805342568U,	// VINSERTB
    3489698060U,	// VINSERTD
    805344332U,	// VINSERTH
    3489706441U,	// VINSERTW
    2415965293U,	// VINSHLX
    2415965670U,	// VINSHRX
    2415965345U,	// VINSHVLX
    2415965722U,	// VINSHVRX
    805351805U,	// VINSW
    2415965389U,	// VINSWLX
    2415965766U,	// VINSWRX
    2415965367U,	// VINSWVLX
    2415965744U,	// VINSWVRX
    41133U,	// VLOGEFP
    1073782940U,	// VMADDFP
    1073783032U,	// VMAXFP
    1073777986U,	// VMAXSB
    1073778912U,	// VMAXSD
    1073779762U,	// VMAXSH
    1073787302U,	// VMAXSW
    1073778188U,	// VMAXUB
    1073779070U,	// VMAXUD
    1073779879U,	// VMAXUH
    1073787504U,	// VMAXUW
    1073785220U,	// VMHADDSHS
    1073785231U,	// VMHRADDSHS
    1073783004U,	// VMINFP
    1073777950U,	// VMINSB
    1073778870U,	// VMINSD
    1073779726U,	// VMINSH
    1073787253U,	// VMINSW
    1073778066U,	// VMINUB
    1073779025U,	// VMINUD
    1073779830U,	// VMINUH
    1073787434U,	// VMINUW
    1073781078U,	// VMLADDUHM
    1073778835U,	// VMODSD
    1073784310U,	// VMODSQ
    1073787172U,	// VMODSW
    1073778990U,	// VMODUD
    1073784424U,	// VMODUQ
    1073787382U,	// VMODUW
    1073786779U,	// VMRGEW
    1073777809U,	// VMRGHB
    1073779631U,	// VMRGHH
    1073786822U,	// VMRGHW
    1073777827U,	// VMRGLB
    1073779639U,	// VMRGLH
    1073786872U,	// VMRGLW
    1073787145U,	// VMRGOW
    1073778980U,	// VMSUMCUD
    1073780850U,	// VMSUMMBM
    1073781047U,	// VMSUMSHM
    1073785252U,	// VMSUMSHS
    1073780899U,	// VMSUMUBM
    1073780971U,	// VMSUMUDM
    1073781098U,	// VMSUMUHM
    1073785280U,	// VMSUMUHS
    42539U,	// VMUL10CUQ
    1073784392U,	// VMUL10ECUQ
    1073784432U,	// VMUL10EUQ
    42529U,	// VMUL10UQ
    1073777905U,	// VMULESB
    1073778843U,	// VMULESD
    1073779681U,	// VMULESH
    1073787180U,	// VMULESW
    1073778049U,	// VMULEUB
    1073778998U,	// VMULEUD
    1073779813U,	// VMULEUH
    1073787399U,	// VMULEUW
    1073778861U,	// VMULHSD
    1073787215U,	// VMULHSW
    1073779016U,	// VMULHUD
    1073787425U,	// VMULHUW
    1073778689U,	// VMULLD
    1073777958U,	// VMULOSB
    1073778885U,	// VMULOSD
    1073779734U,	// VMULOSH
    1073787268U,	// VMULOSW
    1073778074U,	// VMULOUB
    1073779033U,	// VMULOUD
    1073779838U,	// VMULOUH
    1073787442U,	// VMULOUW
    1073781354U,	// VMULUWM
    1073778769U,	// VNAND
    1073784608U,	// VNCIPHER
    1073785947U,	// VNCIPHERLAST
    36794U,	// VNEGD
    44991U,	// VNEGW
    1073782922U,	// VNMSUBFP
    1073784720U,	// VNOR
    1073784733U,	// VOR
    1073778394U,	// VORC
    1073778790U,	// VPDEPD
    1073781262U,	// VPERM
    1073784680U,	// VPERMR
    1073784746U,	// VPERMXOR
    1073778972U,	// VPEXTD
    1073788241U,	// VPKPX
    1073785367U,	// VPKSDSS
    1073785431U,	// VPKSDUS
    1073785376U,	// VPKSHSS
    1073785449U,	// VPKSHUS
    1073785385U,	// VPKSWSS
    1073785467U,	// VPKSWUS
    1073781277U,	// VPKUDUM
    1073785440U,	// VPKUDUS
    1073781286U,	// VPKUHUM
    1073785458U,	// VPKUHUS
    1073781295U,	// VPKUWUM
    1073785476U,	// VPKUWUS
    1073777855U,	// VPMSUMB
    1073778734U,	// VPMSUMD
    1073779659U,	// VPMSUMH
    1073786928U,	// VPMSUMW
    36190U,	// VPOPCNTB
    37122U,	// VPOPCNTD
    37954U,	// VPOPCNTH
    45503U,	// VPOPCNTW
    36658U,	// VPRTYBD
    42372U,	// VPRTYBQ
    44915U,	// VPRTYBW
    41152U,	// VREFP
    39296U,	// VRFIM
    39681U,	// VRFIN
    41236U,	// VRFIP
    47197U,	// VRFIZ
    1073777843U,	// VRLB
    1073778713U,	// VRLD
    1073780154U,	// VRLDMI
    1073781160U,	// VRLDNM
    1073779647U,	// VRLH
    1073784276U,	// VRLQ
    1073780178U,	// VRLQMI
    1073781176U,	// VRLQNM
    1073786904U,	// VRLW
    1073780274U,	// VRLWMI
    1073781184U,	// VRLWNM
    41169U,	// VRSQRTEFP
    46319U,	// VSBOX
    1073780682U,	// VSEL
    1073778447U,	// VSHASIGMAD
    1073786711U,	// VSHASIGMAW
    1073780749U,	// VSL
    1073777849U,	// VSLB
    1073778719U,	// VSLD
    1073779934U,	// VSLDBI
    1073780303U,	// VSLDOI
    1073779653U,	// VSLH
    1073781859U,	// VSLO
    1073784282U,	// VSLQ
    1073786328U,	// VSLV
    1073786911U,	// VSLW
    1342213462U,	// VSPLTB
    1342213462U,	// VSPLTBs
    1342215226U,	// VSPLTH
    1342215226U,	// VSPLTHs
    302025995U,	// VSPLTISB
    302027771U,	// VSPLTISH
    302035288U,	// VSPLTISW
    1342222766U,	// VSPLTW
    1073784811U,	// VSR
    1073777748U,	// VSRAB
    1073778459U,	// VSRAD
    1073779591U,	// VSRAH
    1073784189U,	// VSRAQ
    1073786723U,	// VSRAW
    1073777899U,	// VSRB
    1073778821U,	// VSRD
    1073779942U,	// VSRDBI
    1073779675U,	// VSRH
    1073781980U,	// VSRO
    1073784304U,	// VSRQ
    1073786356U,	// VSRV
    1073787166U,	// VSRW
    38801U,	// VSTRIBL
    33992U,	// VSTRIBL_rec
    42683U,	// VSTRIBR
    34536U,	// VSTRIBR_rec
    38878U,	// VSTRIHL
    34035U,	// VSTRIHL_rec
    42803U,	// VSTRIHR
    34563U,	// VSTRIHR_rec
    1073784374U,	// VSUBCUQ
    1073787364U,	// VSUBCUW
    1073784404U,	// VSUBECUQ
    1073781242U,	// VSUBEUQM
    1073782932U,	// VSUBFP
    1073784951U,	// VSUBSBS
    1073785211U,	// VSUBSHS
    1073785519U,	// VSUBSWS
    1073780881U,	// VSUBUBM
    1073784979U,	// VSUBUBS
    1073780953U,	// VSUBUDM
    1073781069U,	// VSUBUHM
    1073785262U,	// VSUBUHS
    1073781224U,	// VSUBUQM
    1073781336U,	// VSUBUWM
    1073785546U,	// VSUBUWS
    1073785509U,	// VSUM2SWS
    1073784941U,	// VSUM4SBS
    1073785201U,	// VSUM4SHS
    1073784969U,	// VSUM4UBS
    1073785537U,	// VSUMSWS
    46408U,	// VUPKHPX
    36098U,	// VUPKHSB
    37874U,	// VUPKHSH
    45382U,	// VUPKHSW
    46424U,	// VUPKLPX
    36117U,	// VUPKLSB
    37893U,	// VUPKLSH
    45410U,	// VUPKLSW
    1073784764U,	// VXOR
    1308665788U,	// V_SET0
    1308665788U,	// V_SET0B
    1308665788U,	// V_SET0H
    16822616U,	// V_SETALLONES
    16822616U,	// V_SETALLONESB
    16822616U,	// V_SETALLONESH
    1092596U,	// WAIT
    1085916U,	// WRTEE
    1086816U,	// WRTEEI
    1073784741U,	// XOR
    1073784741U,	// XOR8
    1073776417U,	// XOR8_rec
    1073780343U,	// XORI
    1073780343U,	// XORI8
    1073785327U,	// XORIS
    1073785327U,	// XORIS8
    1073776417U,	// XOR_rec
    40859U,	// XSABSDP
    41688U,	// XSABSQP
    1073782196U,	// XSADDDP
    1073783362U,	// XSADDQP
    1073781939U,	// XSADDQPO
    1073783682U,	// XSADDSP
    1073782641U,	// XSCMPEQDP
    1073782609U,	// XSCMPEXPDP
    1073783460U,	// XSCMPEXPQP
    1073782258U,	// XSCMPGEDP
    1073782701U,	// XSCMPGTDP
    1073782539U,	// XSCMPODP
    1073783430U,	// XSCMPOQP
    1073782765U,	// XSCMPUDP
    1073783531U,	// XSCMPUQP
    1073782499U,	// XSCPSGNDP
    1073783419U,	// XSCPSGNQP
    41216U,	// XSCVDPHP
    41616U,	// XSCVDPQP
    42120U,	// XSCVDPSP
    39852U,	// XSCVDPSPN
    43247U,	// XSCVDPSXDS
    43247U,	// XSCVDPSXDSs
    43749U,	// XSCVDPSXWS
    43749U,	// XSCVDPSXWSs
    43283U,	// XSCVDPUXDS
    43283U,	// XSCVDPUXDSs
    43785U,	// XSCVDPUXWS
    43785U,	// XSCVDPUXWSs
    40725U,	// XSCVHPDP
    40735U,	// XSCVQPDP
    40041U,	// XSCVQPDPO
    47169U,	// XSCVQPSDZ
    47294U,	// XSCVQPSQZ
    47366U,	// XSCVQPSWZ
    47180U,	// XSCVQPUDZ
    47305U,	// XSCVQPUQZ
    47377U,	// XSCVQPUWZ
    41547U,	// XSCVSDQP
    40745U,	// XSCVSPDP
    39800U,	// XSCVSPDPN
    41658U,	// XSCVSQQP
    40390U,	// XSCVSXDDP
    41876U,	// XSCVSXDSP
    41557U,	// XSCVUDQP
    41668U,	// XSCVUQQP
    40412U,	// XSCVUXDDP
    41898U,	// XSCVUXDSP
    1073782775U,	// XSDIVDP
    1073783541U,	// XSDIVQP
    1073781970U,	// XSDIVQPO
    1073784096U,	// XSDIVSP
    1073782589U,	// XSIEXPDP
    1073783450U,	// XSIEXPQP
    2415959394U,	// XSMADDADP
    2415960900U,	// XSMADDASP
    2415959757U,	// XSMADDMDP
    2415961182U,	// XSMADDMSP
    2415960632U,	// XSMADDQP
    2415959208U,	// XSMADDQPO
    1073782186U,	// XSMAXCDP
    1073782835U,	// XSMAXDP
    1073782379U,	// XSMAXJDP
    1073782176U,	// XSMINCDP
    1073782521U,	// XSMINDP
    1073782369U,	// XSMINJDP
    2415959348U,	// XSMSUBADP
    2415960854U,	// XSMSUBASP
    2415959711U,	// XSMSUBMDP
    2415961136U,	// XSMSUBMSP
    2415960591U,	// XSMSUBQP
    2415959175U,	// XSMSUBQPO
    1073782389U,	// XSMULDP
    1073783410U,	// XSMULQP
    1073781949U,	// XSMULQPO
    1073783814U,	// XSMULSP
    40839U,	// XSNABSDP
    41678U,	// XSNABSQP
    40496U,	// XSNEGDP
    41567U,	// XSNEGQP
    2415959370U,	// XSNMADDADP
    2415960876U,	// XSNMADDASP
    2415959733U,	// XSNMADDMDP
    2415961158U,	// XSNMADDMSP
    2415960621U,	// XSNMADDQP
    2415959196U,	// XSNMADDQPO
    2415959324U,	// XSNMSUBADP
    2415960830U,	// XSNMSUBASP
    2415959687U,	// XSNMSUBMDP
    2415961112U,	// XSNMSUBMSP
    2415960580U,	// XSNMSUBQP
    2415959163U,	// XSNMSUBQPO
    38487U,	// XSRDPI
    36507U,	// XSRDPIC
    39303U,	// XSRDPIM
    41243U,	// XSRDPIP
    47204U,	// XSRDPIZ
    40456U,	// XSREDP
    41931U,	// XSRESP
    562791U,	// XSRQPI
    570432U,	// XSRQPIX
    566634U,	// XSRQPXP
    42187U,	// XSRSP
    40472U,	// XSRSQRTEDP
    41947U,	// XSRSQRTESP
    40899U,	// XSSQRTDP
    41697U,	// XSSQRTQP
    40135U,	// XSSQRTQPO
    42241U,	// XSSQRTSP
    1073782136U,	// XSSUBDP
    1073783321U,	// XSSUBQP
    1073781906U,	// XSSUBQPO
    1073783642U,	// XSSUBSP
    1073782784U,	// XSTDIVDP
    40909U,	// XSTSQRTDP
    268475786U,	// XSTSTDCDP
    268476962U,	// XSTSTDCQP
    268477292U,	// XSTSTDCSP
    40797U,	// XSXEXPDP
    41648U,	// XSXEXPQP
    40514U,	// XSXSIGDP
    41576U,	// XSXSIGQP
    40868U,	// XVABSDP
    42204U,	// XVABSSP
    1073782205U,	// XVADDDP
    1073783691U,	// XVADDSP
    1073777165U,	// XVBF16GER2
    2415958816U,	// XVBF16GER2NN
    2415960390U,	// XVBF16GER2NP
    2415958875U,	// XVBF16GER2PN
    2415960449U,	// XVBF16GER2PP
    1073782652U,	// XVCMPEQDP
    1073776182U,	// XVCMPEQDP_rec
    1073783994U,	// XVCMPEQSP
    1073776268U,	// XVCMPEQSP_rec
    1073782269U,	// XVCMPGEDP
    1073776170U,	// XVCMPGEDP_rec
    1073783744U,	// XVCMPGESP
    1073776256U,	// XVCMPGESP_rec
    1073782712U,	// XVCMPGTDP
    1073776194U,	// XVCMPGTDP_rec
    1073784054U,	// XVCMPGTSP
    1073776287U,	// XVCMPGTSP_rec
    1073782510U,	// XVCPSGNDP
    1073783924U,	// XVCPSGNSP
    39839U,	// XVCVBF16SPN
    42130U,	// XVCVDPSP
    43259U,	// XVCVDPSXDS
    43761U,	// XVCVDPSXWS
    43295U,	// XVCVDPUXDS
    43797U,	// XVCVDPUXWS
    42140U,	// XVCVHPSP
    35413U,	// XVCVSPBF16
    40755U,	// XVCVSPDP
    41226U,	// XVCVSPHP
    43271U,	// XVCVSPSXDS
    43773U,	// XVCVSPSXWS
    43307U,	// XVCVSPUXDS
    43809U,	// XVCVSPUXWS
    40401U,	// XVCVSXDDP
    41887U,	// XVCVSXDSP
    40989U,	// XVCVSXWDP
    42300U,	// XVCVSXWSP
    40423U,	// XVCVUXDDP
    41909U,	// XVCVUXDSP
    41000U,	// XVCVUXWDP
    42311U,	// XVCVUXWSP
    1073782804U,	// XVDIVDP
    1073784115U,	// XVDIVSP
    1073777179U,	// XVF16GER2
    2415958832U,	// XVF16GER2NN
    2415960406U,	// XVF16GER2NP
    2415958891U,	// XVF16GER2PN
    2415960465U,	// XVF16GER2PP
    1073784586U,	// XVF32GER
    2415958847U,	// XVF32GERNN
    2415960421U,	// XVF32GERNP
    2415958917U,	// XVF32GERPN
    2415960523U,	// XVF32GERPP
    1073784598U,	// XVF64GER
    2415958861U,	// XVF64GERNN
    2415960435U,	// XVF64GERNP
    2415958931U,	// XVF64GERPN
    2415960537U,	// XVF64GERPP
    1073777192U,	// XVI16GER2
    2415960480U,	// XVI16GER2PP
    1073784839U,	// XVI16GER2S
    2415960551U,	// XVI16GER2SPP
    1073777293U,	// XVI4GER8
    2415960509U,	// XVI4GER8PP
    1073777205U,	// XVI8GER4
    2415960495U,	// XVI8GER4PP
    2415960567U,	// XVI8GER4SPP
    1073782599U,	// XVIEXPDP
    1073783974U,	// XVIEXPSP
    2415959405U,	// XVMADDADP
    2415960911U,	// XVMADDASP
    2415959768U,	// XVMADDMDP
    2415961193U,	// XVMADDMSP
    1073782844U,	// XVMAXDP
    1073784146U,	// XVMAXSP
    1073782530U,	// XVMINDP
    1073783935U,	// XVMINSP
    2415959359U,	// XVMSUBADP
    2415960865U,	// XVMSUBASP
    2415959722U,	// XVMSUBMDP
    2415961147U,	// XVMSUBMSP
    1073782398U,	// XVMULDP
    1073783823U,	// XVMULSP
    40849U,	// XVNABSDP
    42194U,	// XVNABSSP
    40505U,	// XVNEGDP
    41971U,	// XVNEGSP
    2415959382U,	// XVNMADDADP
    2415960888U,	// XVNMADDASP
    2415959745U,	// XVNMADDMDP
    2415961170U,	// XVNMADDMSP
    2415959336U,	// XVNMSUBADP
    2415960842U,	// XVNMSUBASP
    2415959699U,	// XVNMSUBMDP
    2415961124U,	// XVNMSUBMSP
    38495U,	// XVRDPI
    36516U,	// XVRDPIC
    39312U,	// XVRDPIM
    41252U,	// XVRDPIP
    47213U,	// XVRDPIZ
    40464U,	// XVREDP
    41939U,	// XVRESP
    38511U,	// XVRSPI
    36525U,	// XVRSPIC
    39321U,	// XVRSPIM
    41261U,	// XVRSPIP
    47222U,	// XVRSPIZ
    40484U,	// XVRSQRTEDP
    41959U,	// XVRSQRTESP
    40931U,	// XVSQRTDP
    42262U,	// XVSQRTSP
    1073782145U,	// XVSUBDP
    1073783651U,	// XVSUBSP
    1073782794U,	// XVTDIVDP
    1073784105U,	// XVTDIVSP
    35947U,	// XVTLSBB
    40920U,	// XVTSQRTDP
    42251U,	// XVTSQRTSP
    268475797U,	// XVTSTDCDP
    268477303U,	// XVTSTDCSP
    40807U,	// XVXEXPDP
    42160U,	// XVXEXPSP
    40524U,	// XVXSIGDP
    41980U,	// XVXSIGSP
    1073778196U,	// XXBLENDVB
    1073779078U,	// XXBLENDVD
    1073779887U,	// XXBLENDVH
    1073787512U,	// XXBLENDVW
    36980U,	// XXBRD
    37844U,	// XXBRH
    42473U,	// XXBRQ
    45335U,	// XXBRW
    1073780617U,	// XXEVAL
    1073787473U,	// XXEXTRACTUW
    1073780909U,	// XXGENPCVBM
    1073780981U,	// XXGENPCVDM
    1073781108U,	// XXGENPCVHM
    1073781363U,	// XXGENPCVWM
    1342222803U,	// XXINSERTW
    1073778743U,	// XXLAND
    1073778270U,	// XXLANDC
    1073786334U,	// XXLEQV
    1308667358U,	// XXLEQVOnes
    1073778751U,	// XXLNAND
    1073784704U,	// XXLNOR
    1073784697U,	// XXLOR
    1073778378U,	// XXLORC
    1073784697U,	// XXLORf
    1073784738U,	// XXLXOR
    1308665762U,	// XXLXORdpz
    1308665762U,	// XXLXORspz
    1308665762U,	// XXLXORz
    1445446U,	// XXMFACC
    1073786830U,	// XXMRGHW
    1073786880U,	// XXMRGLW
    1085007U,	// XXMTACC
    1073781269U,	// XXPERM
    1073780010U,	// XXPERMDI
    1073780010U,	// XXPERMDIs
    1073784688U,	// XXPERMR
    1073788134U,	// XXPERMX
    1073780688U,	// XXSEL
    1095699U,	// XXSETACCZ
    1073780478U,	// XXSLDWI
    1073780478U,	// XXSLDWIs
    838906702U,	// XXSPLTI32DX
    872451225U,	// XXSPLTIB
    40534U,	// XXSPLTIDP
    45038U,	// XXSPLTIW
    1073787318U,	// XXSPLTW
    1073787318U,	// XXSPLTWs
    1074105915U,	// gBC
    1074105173U,	// gBCA
    18433082U,	// gBCAat
    1074112496U,	// gBCCTR
    1074108413U,	// gBCCTRL
    1074108314U,	// gBCL
    1074105372U,	// gBCLA
    18433098U,	// gBCLAat
    1074112316U,	// gBCLR
    1074108406U,	// gBCLRL
    19481788U,	// gBCLat
    19481687U,	// gBCat
  };
#endif

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_INSTR_REF
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// BUILD_UACC
    0U,	// CFENCE8
    0U,	// CLRLSLDI
    0U,	// CLRLSLDI_rec
    516U,	// CLRLSLWI
    516U,	// CLRLSLWI_rec
    128U,	// CLRRDI
    128U,	// CLRRDI_rec
    132U,	// CLRRWI
    132U,	// CLRRWI_rec
    0U,	// CP_COPY_FIRST
    0U,	// CP_COPYx
    0U,	// CP_PASTE_LAST
    0U,	// CP_PASTEx
    0U,	// DCBFL
    0U,	// DCBFLP
    0U,	// DCBFx
    0U,	// DCBTCT
    0U,	// DCBTDS
    0U,	// DCBTSTCT
    0U,	// DCBTSTDS
    0U,	// DCBTSTT
    0U,	// DCBTSTx
    0U,	// DCBTT
    0U,	// DCBTx
    0U,	// DFLOADf32
    0U,	// DFLOADf64
    0U,	// DFSTOREf32
    0U,	// DFSTOREf64
    0U,	// EXTLDI
    0U,	// EXTLDI_rec
    516U,	// EXTLWI
    516U,	// EXTLWI_rec
    0U,	// EXTRDI
    0U,	// EXTRDI_rec
    516U,	// EXTRWI
    516U,	// EXTRWI_rec
    516U,	// INSLWI
    516U,	// INSLWI_rec
    0U,	// INSRDI
    0U,	// INSRDI_rec
    516U,	// INSRWI
    516U,	// INSRWI_rec
    0U,	// KILL_PAIR
    0U,	// LAx
    0U,	// LIWAX
    0U,	// LIWZX
    1028U,	// RLWIMIbm
    1028U,	// RLWIMIbm_rec
    1028U,	// RLWINMbm
    1028U,	// RLWINMbm_rec
    1028U,	// RLWNMbm
    1028U,	// RLWNMbm_rec
    128U,	// ROTRDI
    128U,	// ROTRDI_rec
    132U,	// ROTRWI
    132U,	// ROTRWI_rec
    128U,	// SLDI
    128U,	// SLDI_rec
    132U,	// SLWI
    132U,	// SLWI_rec
    0U,	// SPILLTOVSR_LD
    0U,	// SPILLTOVSR_LDX
    0U,	// SPILLTOVSR_ST
    0U,	// SPILLTOVSR_STX
    128U,	// SRDI
    128U,	// SRDI_rec
    132U,	// SRWI
    132U,	// SRWI_rec
    0U,	// STIWX
    8U,	// SUBI
    8U,	// SUBIC
    8U,	// SUBIC_rec
    8U,	// SUBIS
    0U,	// SUBPCIS
    0U,	// XFLOADf32
    0U,	// XFLOADf64
    0U,	// XFSTOREf32
    0U,	// XFSTOREf64
    140U,	// ADD4
    140U,	// ADD4O
    140U,	// ADD4O_rec
    140U,	// ADD4TLS
    140U,	// ADD4_rec
    140U,	// ADD8
    140U,	// ADD8O
    140U,	// ADD8O_rec
    140U,	// ADD8TLS
    140U,	// ADD8TLS_
    140U,	// ADD8_rec
    140U,	// ADDC
    140U,	// ADDC8
    140U,	// ADDC8O
    140U,	// ADDC8O_rec
    140U,	// ADDC8_rec
    140U,	// ADDCO
    140U,	// ADDCO_rec
    140U,	// ADDC_rec
    140U,	// ADDE
    140U,	// ADDE8
    140U,	// ADDE8O
    140U,	// ADDE8O_rec
    140U,	// ADDE8_rec
    140U,	// ADDEO
    140U,	// ADDEO_rec
    140U,	// ADDE_rec
    8U,	// ADDI
    8U,	// ADDI8
    8U,	// ADDIC
    8U,	// ADDIC8
    8U,	// ADDIC_rec
    8U,	// ADDIS
    8U,	// ADDIS8
    0U,	// ADDISdtprelHA
    0U,	// ADDISdtprelHA32
    0U,	// ADDISgotTprelHA
    0U,	// ADDIStlsgdHA
    0U,	// ADDIStlsldHA
    0U,	// ADDIStocHA
    0U,	// ADDIStocHA8
    0U,	// ADDIdtprelL
    0U,	// ADDIdtprelL32
    0U,	// ADDItlsgdL
    0U,	// ADDItlsgdL32
    0U,	// ADDItlsgdLADDR
    0U,	// ADDItlsgdLADDR32
    0U,	// ADDItlsldL
    0U,	// ADDItlsldL32
    0U,	// ADDItlsldLADDR
    0U,	// ADDItlsldLADDR32
    0U,	// ADDItocL
    0U,	// ADDME
    0U,	// ADDME8
    0U,	// ADDME8O
    0U,	// ADDME8O_rec
    0U,	// ADDME8_rec
    0U,	// ADDMEO
    0U,	// ADDMEO_rec
    0U,	// ADDME_rec
    0U,	// ADDPCIS
    0U,	// ADDZE
    0U,	// ADDZE8
    0U,	// ADDZE8O
    0U,	// ADDZE8O_rec
    0U,	// ADDZE8_rec
    0U,	// ADDZEO
    0U,	// ADDZEO_rec
    0U,	// ADDZE_rec
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    140U,	// AND
    140U,	// AND8
    140U,	// AND8_rec
    140U,	// ANDC
    140U,	// ANDC8
    140U,	// ANDC8_rec
    140U,	// ANDC_rec
    16U,	// ANDI8_rec
    16U,	// ANDIS8_rec
    16U,	// ANDIS_rec
    16U,	// ANDI_rec
    0U,	// ANDI_rec_1_EQ_BIT
    0U,	// ANDI_rec_1_EQ_BIT8
    0U,	// ANDI_rec_1_GT_BIT
    0U,	// ANDI_rec_1_GT_BIT8
    140U,	// AND_rec
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATTN
    0U,	// B
    0U,	// BA
    0U,	// BC
    0U,	// BCC
    0U,	// BCCA
    0U,	// BCCCTR
    0U,	// BCCCTR8
    0U,	// BCCCTRL
    0U,	// BCCCTRL8
    0U,	// BCCL
    0U,	// BCCLA
    0U,	// BCCLR
    0U,	// BCCLRL
    0U,	// BCCTR
    0U,	// BCCTR8
    0U,	// BCCTR8n
    0U,	// BCCTRL
    0U,	// BCCTRL8
    0U,	// BCCTRL8n
    0U,	// BCCTRLn
    0U,	// BCCTRn
    148U,	// BCDCFN_rec
    148U,	// BCDCFSQ_rec
    148U,	// BCDCFZ_rec
    140U,	// BCDCPSGN_rec
    0U,	// BCDCTN_rec
    0U,	// BCDCTSQ_rec
    148U,	// BCDCTZ_rec
    148U,	// BCDSETSGN_rec
    1548U,	// BCDSR_rec
    1548U,	// BCDS_rec
    1548U,	// BCDTRUNC_rec
    140U,	// BCDUS_rec
    140U,	// BCDUTRUNC_rec
    0U,	// BCL
    0U,	// BCLR
    0U,	// BCLRL
    0U,	// BCLRLn
    0U,	// BCLRn
    0U,	// BCLalways
    0U,	// BCLn
    0U,	// BCTR
    0U,	// BCTR8
    0U,	// BCTRL
    0U,	// BCTRL8
    0U,	// BCTRL8_LDinto_toc
    0U,	// BCTRL_LWZinto_toc
    0U,	// BCn
    0U,	// BDNZ
    0U,	// BDNZ8
    0U,	// BDNZA
    0U,	// BDNZAm
    0U,	// BDNZAp
    0U,	// BDNZL
    0U,	// BDNZLA
    0U,	// BDNZLAm
    0U,	// BDNZLAp
    0U,	// BDNZLR
    0U,	// BDNZLR8
    0U,	// BDNZLRL
    0U,	// BDNZLRLm
    0U,	// BDNZLRLp
    0U,	// BDNZLRm
    0U,	// BDNZLRp
    0U,	// BDNZLm
    0U,	// BDNZLp
    0U,	// BDNZm
    0U,	// BDNZp
    0U,	// BDZ
    0U,	// BDZ8
    0U,	// BDZA
    0U,	// BDZAm
    0U,	// BDZAp
    0U,	// BDZL
    0U,	// BDZLA
    0U,	// BDZLAm
    0U,	// BDZLAp
    0U,	// BDZLR
    0U,	// BDZLR8
    0U,	// BDZLRL
    0U,	// BDZLRLm
    0U,	// BDZLRLp
    0U,	// BDZLRm
    0U,	// BDZLRp
    0U,	// BDZLm
    0U,	// BDZLp
    0U,	// BDZm
    0U,	// BDZp
    0U,	// BL
    0U,	// BL8
    0U,	// BL8_NOP
    0U,	// BL8_NOP_TLS
    0U,	// BL8_NOTOC
    0U,	// BL8_NOTOC_TLS
    0U,	// BL8_TLS
    0U,	// BL8_TLS_
    0U,	// BLA
    0U,	// BLA8
    0U,	// BLA8_NOP
    0U,	// BLR
    0U,	// BLR8
    0U,	// BLRL
    0U,	// BL_NOP
    0U,	// BL_TLS
    140U,	// BPERMD
    140U,	// BRINC
    140U,	// CFUGED
    0U,	// CLRBHRB
    140U,	// CMPB
    140U,	// CMPB8
    140U,	// CMPD
    8U,	// CMPDI
    140U,	// CMPEQB
    140U,	// CMPLD
    16U,	// CMPLDI
    140U,	// CMPLW
    16U,	// CMPLWI
    0U,	// CMPRB
    0U,	// CMPRB8
    140U,	// CMPW
    8U,	// CMPWI
    0U,	// CNTLZD
    140U,	// CNTLZDM
    0U,	// CNTLZD_rec
    0U,	// CNTLZW
    0U,	// CNTLZW8
    0U,	// CNTLZW8_rec
    0U,	// CNTLZW_rec
    0U,	// CNTTZD
    140U,	// CNTTZDM
    0U,	// CNTTZD_rec
    0U,	// CNTTZW
    0U,	// CNTTZW8
    0U,	// CNTTZW8_rec
    0U,	// CNTTZW_rec
    0U,	// CP_ABORT
    148U,	// CP_COPY
    148U,	// CP_COPY8
    148U,	// CP_PASTE
    148U,	// CP_PASTE8
    148U,	// CP_PASTE8_rec
    148U,	// CP_PASTE_rec
    0U,	// CR6SET
    0U,	// CR6UNSET
    140U,	// CRAND
    140U,	// CRANDC
    140U,	// CREQV
    140U,	// CRNAND
    140U,	// CRNOR
    140U,	// CROR
    140U,	// CRORC
    24U,	// CRSET
    24U,	// CRUNSET
    140U,	// CRXOR
    0U,	// CTRL_DEP
    0U,	// DARN
    0U,	// DCBA
    0U,	// DCBF
    0U,	// DCBFEP
    0U,	// DCBI
    0U,	// DCBST
    0U,	// DCBSTEP
    0U,	// DCBT
    0U,	// DCBTEP
    0U,	// DCBTST
    0U,	// DCBTSTEP
    0U,	// DCBZ
    0U,	// DCBZEP
    0U,	// DCBZL
    0U,	// DCBZLEP
    0U,	// DCBZ_L
    0U,	// DCCCI
    140U,	// DIVD
    140U,	// DIVDE
    140U,	// DIVDEO
    140U,	// DIVDEO_rec
    140U,	// DIVDEU
    140U,	// DIVDEUO
    140U,	// DIVDEUO_rec
    140U,	// DIVDEU_rec
    140U,	// DIVDE_rec
    140U,	// DIVDO
    140U,	// DIVDO_rec
    140U,	// DIVDU
    140U,	// DIVDUO
    140U,	// DIVDUO_rec
    140U,	// DIVDU_rec
    140U,	// DIVD_rec
    140U,	// DIVW
    140U,	// DIVWE
    140U,	// DIVWEO
    140U,	// DIVWEO_rec
    140U,	// DIVWEU
    140U,	// DIVWEUO
    140U,	// DIVWEUO_rec
    140U,	// DIVWEU_rec
    140U,	// DIVWE_rec
    140U,	// DIVWO
    140U,	// DIVWO_rec
    140U,	// DIVWU
    140U,	// DIVWUO
    140U,	// DIVWUO_rec
    140U,	// DIVWU_rec
    140U,	// DIVW_rec
    0U,	// DSS
    0U,	// DSSALL
    0U,	// DST
    0U,	// DST64
    0U,	// DSTST
    0U,	// DSTST64
    0U,	// DSTSTT
    0U,	// DSTSTT64
    0U,	// DSTT
    0U,	// DSTT64
    0U,	// DYNALLOC
    0U,	// DYNALLOC8
    0U,	// DYNAREAOFFSET
    0U,	// DYNAREAOFFSET8
    0U,	// EFDABS
    140U,	// EFDADD
    0U,	// EFDCFS
    0U,	// EFDCFSF
    0U,	// EFDCFSI
    0U,	// EFDCFSID
    0U,	// EFDCFUF
    0U,	// EFDCFUI
    0U,	// EFDCFUID
    140U,	// EFDCMPEQ
    140U,	// EFDCMPGT
    140U,	// EFDCMPLT
    0U,	// EFDCTSF
    0U,	// EFDCTSI
    0U,	// EFDCTSIDZ
    0U,	// EFDCTSIZ
    0U,	// EFDCTUF
    0U,	// EFDCTUI
    0U,	// EFDCTUIDZ
    0U,	// EFDCTUIZ
    140U,	// EFDDIV
    140U,	// EFDMUL
    0U,	// EFDNABS
    0U,	// EFDNEG
    140U,	// EFDSUB
    140U,	// EFDTSTEQ
    140U,	// EFDTSTGT
    140U,	// EFDTSTLT
    0U,	// EFSABS
    140U,	// EFSADD
    0U,	// EFSCFD
    0U,	// EFSCFSF
    0U,	// EFSCFSI
    0U,	// EFSCFUF
    0U,	// EFSCFUI
    140U,	// EFSCMPEQ
    140U,	// EFSCMPGT
    140U,	// EFSCMPLT
    0U,	// EFSCTSF
    0U,	// EFSCTSI
    0U,	// EFSCTSIZ
    0U,	// EFSCTUF
    0U,	// EFSCTUI
    0U,	// EFSCTUIZ
    140U,	// EFSDIV
    140U,	// EFSMUL
    0U,	// EFSNABS
    0U,	// EFSNEG
    140U,	// EFSSUB
    140U,	// EFSTSTEQ
    140U,	// EFSTSTGT
    140U,	// EFSTSTLT
    0U,	// EH_SjLj_LongJmp32
    0U,	// EH_SjLj_LongJmp64
    0U,	// EH_SjLj_SetJmp32
    0U,	// EH_SjLj_SetJmp64
    0U,	// EH_SjLj_Setup
    140U,	// EQV
    140U,	// EQV8
    140U,	// EQV8_rec
    140U,	// EQV_rec
    0U,	// EVABS
    156U,	// EVADDIW
    0U,	// EVADDSMIAAW
    0U,	// EVADDSSIAAW
    0U,	// EVADDUMIAAW
    0U,	// EVADDUSIAAW
    140U,	// EVADDW
    140U,	// EVAND
    140U,	// EVANDC
    140U,	// EVCMPEQ
    140U,	// EVCMPGTS
    140U,	// EVCMPGTU
    140U,	// EVCMPLTS
    140U,	// EVCMPLTU
    0U,	// EVCNTLSW
    0U,	// EVCNTLZW
    140U,	// EVDIVWS
    140U,	// EVDIVWU
    140U,	// EVEQV
    0U,	// EVEXTSB
    0U,	// EVEXTSH
    0U,	// EVFSABS
    140U,	// EVFSADD
    0U,	// EVFSCFSF
    0U,	// EVFSCFSI
    0U,	// EVFSCFUF
    0U,	// EVFSCFUI
    140U,	// EVFSCMPEQ
    140U,	// EVFSCMPGT
    140U,	// EVFSCMPLT
    0U,	// EVFSCTSF
    0U,	// EVFSCTSI
    0U,	// EVFSCTSIZ
    0U,	// EVFSCTUF
    0U,	// EVFSCTUI
    0U,	// EVFSCTUIZ
    140U,	// EVFSDIV
    140U,	// EVFSMUL
    0U,	// EVFSNABS
    0U,	// EVFSNEG
    140U,	// EVFSSUB
    140U,	// EVFSTSTEQ
    140U,	// EVFSTSTGT
    140U,	// EVFSTSTLT
    0U,	// EVLDD
    0U,	// EVLDDX
    0U,	// EVLDH
    0U,	// EVLDHX
    0U,	// EVLDW
    0U,	// EVLDWX
    0U,	// EVLHHESPLAT
    0U,	// EVLHHESPLATX
    0U,	// EVLHHOSSPLAT
    0U,	// EVLHHOSSPLATX
    0U,	// EVLHHOUSPLAT
    0U,	// EVLHHOUSPLATX
    0U,	// EVLWHE
    0U,	// EVLWHEX
    0U,	// EVLWHOS
    0U,	// EVLWHOSX
    0U,	// EVLWHOU
    0U,	// EVLWHOUX
    0U,	// EVLWHSPLAT
    0U,	// EVLWHSPLATX
    0U,	// EVLWWSPLAT
    0U,	// EVLWWSPLATX
    140U,	// EVMERGEHI
    140U,	// EVMERGEHILO
    140U,	// EVMERGELO
    140U,	// EVMERGELOHI
    140U,	// EVMHEGSMFAA
    140U,	// EVMHEGSMFAN
    140U,	// EVMHEGSMIAA
    140U,	// EVMHEGSMIAN
    140U,	// EVMHEGUMIAA
    140U,	// EVMHEGUMIAN
    140U,	// EVMHESMF
    140U,	// EVMHESMFA
    140U,	// EVMHESMFAAW
    140U,	// EVMHESMFANW
    140U,	// EVMHESMI
    140U,	// EVMHESMIA
    140U,	// EVMHESMIAAW
    140U,	// EVMHESMIANW
    140U,	// EVMHESSF
    140U,	// EVMHESSFA
    140U,	// EVMHESSFAAW
    140U,	// EVMHESSFANW
    140U,	// EVMHESSIAAW
    140U,	// EVMHESSIANW
    140U,	// EVMHEUMI
    140U,	// EVMHEUMIA
    140U,	// EVMHEUMIAAW
    140U,	// EVMHEUMIANW
    140U,	// EVMHEUSIAAW
    140U,	// EVMHEUSIANW
    140U,	// EVMHOGSMFAA
    140U,	// EVMHOGSMFAN
    140U,	// EVMHOGSMIAA
    140U,	// EVMHOGSMIAN
    140U,	// EVMHOGUMIAA
    140U,	// EVMHOGUMIAN
    140U,	// EVMHOSMF
    140U,	// EVMHOSMFA
    140U,	// EVMHOSMFAAW
    140U,	// EVMHOSMFANW
    140U,	// EVMHOSMI
    140U,	// EVMHOSMIA
    140U,	// EVMHOSMIAAW
    140U,	// EVMHOSMIANW
    140U,	// EVMHOSSF
    140U,	// EVMHOSSFA
    140U,	// EVMHOSSFAAW
    140U,	// EVMHOSSFANW
    140U,	// EVMHOSSIAAW
    140U,	// EVMHOSSIANW
    140U,	// EVMHOUMI
    140U,	// EVMHOUMIA
    140U,	// EVMHOUMIAAW
    140U,	// EVMHOUMIANW
    140U,	// EVMHOUSIAAW
    140U,	// EVMHOUSIANW
    0U,	// EVMRA
    140U,	// EVMWHSMF
    140U,	// EVMWHSMFA
    140U,	// EVMWHSMI
    140U,	// EVMWHSMIA
    140U,	// EVMWHSSF
    140U,	// EVMWHSSFA
    140U,	// EVMWHUMI
    140U,	// EVMWHUMIA
    140U,	// EVMWLSMIAAW
    140U,	// EVMWLSMIANW
    140U,	// EVMWLSSIAAW
    140U,	// EVMWLSSIANW
    140U,	// EVMWLUMI
    140U,	// EVMWLUMIA
    140U,	// EVMWLUMIAAW
    140U,	// EVMWLUMIANW
    140U,	// EVMWLUSIAAW
    140U,	// EVMWLUSIANW
    140U,	// EVMWSMF
    140U,	// EVMWSMFA
    140U,	// EVMWSMFAA
    140U,	// EVMWSMFAN
    140U,	// EVMWSMI
    140U,	// EVMWSMIA
    140U,	// EVMWSMIAA
    140U,	// EVMWSMIAN
    140U,	// EVMWSSF
    140U,	// EVMWSSFA
    140U,	// EVMWSSFAA
    140U,	// EVMWSSFAN
    140U,	// EVMWUMI
    140U,	// EVMWUMIA
    140U,	// EVMWUMIAA
    140U,	// EVMWUMIAN
    140U,	// EVNAND
    0U,	// EVNEG
    140U,	// EVNOR
    140U,	// EVOR
    140U,	// EVORC
    140U,	// EVRLW
    132U,	// EVRLWI
    0U,	// EVRNDW
    1U,	// EVSEL
    140U,	// EVSLW
    132U,	// EVSLWI
    0U,	// EVSPLATFI
    0U,	// EVSPLATI
    132U,	// EVSRWIS
    132U,	// EVSRWIU
    140U,	// EVSRWS
    140U,	// EVSRWU
    0U,	// EVSTDD
    0U,	// EVSTDDX
    0U,	// EVSTDH
    0U,	// EVSTDHX
    0U,	// EVSTDW
    0U,	// EVSTDWX
    0U,	// EVSTWHE
    0U,	// EVSTWHEX
    0U,	// EVSTWHO
    0U,	// EVSTWHOX
    0U,	// EVSTWWE
    0U,	// EVSTWWEX
    0U,	// EVSTWWO
    0U,	// EVSTWWOX
    0U,	// EVSUBFSMIAAW
    0U,	// EVSUBFSSIAAW
    0U,	// EVSUBFUMIAAW
    0U,	// EVSUBFUSIAAW
    140U,	// EVSUBFW
    0U,	// EVSUBIFW
    140U,	// EVXOR
    0U,	// EXTSB
    0U,	// EXTSB8
    0U,	// EXTSB8_32_64
    0U,	// EXTSB8_rec
    0U,	// EXTSB_rec
    0U,	// EXTSH
    0U,	// EXTSH8
    0U,	// EXTSH8_32_64
    0U,	// EXTSH8_rec
    0U,	// EXTSH_rec
    0U,	// EXTSW
    128U,	// EXTSWSLI
    128U,	// EXTSWSLI_32_64
    128U,	// EXTSWSLI_32_64_rec
    128U,	// EXTSWSLI_rec
    0U,	// EXTSW_32
    0U,	// EXTSW_32_64
    0U,	// EXTSW_32_64_rec
    0U,	// EXTSW_rec
    0U,	// EnforceIEIO
    0U,	// FABSD
    0U,	// FABSD_rec
    0U,	// FABSS
    0U,	// FABSS_rec
    140U,	// FADD
    140U,	// FADDS
    140U,	// FADDS_rec
    140U,	// FADD_rec
    0U,	// FADDrtz
    0U,	// FCFID
    0U,	// FCFIDS
    0U,	// FCFIDS_rec
    0U,	// FCFIDU
    0U,	// FCFIDUS
    0U,	// FCFIDUS_rec
    0U,	// FCFIDU_rec
    0U,	// FCFID_rec
    140U,	// FCMPOD
    140U,	// FCMPOS
    140U,	// FCMPUD
    140U,	// FCMPUS
    140U,	// FCPSGND
    140U,	// FCPSGND_rec
    140U,	// FCPSGNS
    140U,	// FCPSGNS_rec
    0U,	// FCTID
    0U,	// FCTIDU
    0U,	// FCTIDUZ
    0U,	// FCTIDUZ_rec
    0U,	// FCTIDU_rec
    0U,	// FCTIDZ
    0U,	// FCTIDZ_rec
    0U,	// FCTID_rec
    0U,	// FCTIW
    0U,	// FCTIWU
    0U,	// FCTIWUZ
    0U,	// FCTIWUZ_rec
    0U,	// FCTIWU_rec
    0U,	// FCTIWZ
    0U,	// FCTIWZ_rec
    0U,	// FCTIW_rec
    140U,	// FDIV
    140U,	// FDIVS
    140U,	// FDIVS_rec
    140U,	// FDIV_rec
    1036U,	// FMADD
    1036U,	// FMADDS
    1036U,	// FMADDS_rec
    1036U,	// FMADD_rec
    0U,	// FMR
    0U,	// FMR_rec
    1036U,	// FMSUB
    1036U,	// FMSUBS
    1036U,	// FMSUBS_rec
    1036U,	// FMSUB_rec
    140U,	// FMUL
    140U,	// FMULS
    140U,	// FMULS_rec
    140U,	// FMUL_rec
    0U,	// FNABSD
    0U,	// FNABSD_rec
    0U,	// FNABSS
    0U,	// FNABSS_rec
    0U,	// FNEGD
    0U,	// FNEGD_rec
    0U,	// FNEGS
    0U,	// FNEGS_rec
    1036U,	// FNMADD
    1036U,	// FNMADDS
    1036U,	// FNMADDS_rec
    1036U,	// FNMADD_rec
    1036U,	// FNMSUB
    1036U,	// FNMSUBS
    1036U,	// FNMSUBS_rec
    1036U,	// FNMSUB_rec
    0U,	// FRE
    0U,	// FRES
    0U,	// FRES_rec
    0U,	// FRE_rec
    0U,	// FRIMD
    0U,	// FRIMD_rec
    0U,	// FRIMS
    0U,	// FRIMS_rec
    0U,	// FRIND
    0U,	// FRIND_rec
    0U,	// FRINS
    0U,	// FRINS_rec
    0U,	// FRIPD
    0U,	// FRIPD_rec
    0U,	// FRIPS
    0U,	// FRIPS_rec
    0U,	// FRIZD
    0U,	// FRIZD_rec
    0U,	// FRIZS
    0U,	// FRIZS_rec
    0U,	// FRSP
    0U,	// FRSP_rec
    0U,	// FRSQRTE
    0U,	// FRSQRTES
    0U,	// FRSQRTES_rec
    0U,	// FRSQRTE_rec
    1036U,	// FSELD
    1036U,	// FSELD_rec
    1036U,	// FSELS
    1036U,	// FSELS_rec
    0U,	// FSQRT
    0U,	// FSQRTS
    0U,	// FSQRTS_rec
    0U,	// FSQRT_rec
    140U,	// FSUB
    140U,	// FSUBS
    140U,	// FSUBS_rec
    140U,	// FSUB_rec
    140U,	// FTDIV
    0U,	// FTSQRT
    0U,	// GETtlsADDR
    0U,	// GETtlsADDR32
    0U,	// GETtlsldADDR
    0U,	// GETtlsldADDR32
    0U,	// HRFID
    0U,	// ICBI
    0U,	// ICBIEP
    0U,	// ICBLC
    0U,	// ICBLQ
    0U,	// ICBT
    0U,	// ICBTLS
    0U,	// ICCCI
    1036U,	// ISEL
    1036U,	// ISEL8
    0U,	// ISYNC
    0U,	// LA
    0U,	// LBARX
    1U,	// LBARXL
    0U,	// LBEPX
    0U,	// LBZ
    0U,	// LBZ8
    140U,	// LBZCIX
    0U,	// LBZU
    0U,	// LBZU8
    0U,	// LBZUX
    0U,	// LBZUX8
    0U,	// LBZX
    0U,	// LBZX8
    140U,	// LBZXTLS
    140U,	// LBZXTLS_
    140U,	// LBZXTLS_32
    0U,	// LD
    0U,	// LDARX
    1U,	// LDARXL
    132U,	// LDAT
    0U,	// LDBRX
    140U,	// LDCIX
    0U,	// LDMX
    0U,	// LDU
    0U,	// LDUX
    0U,	// LDX
    140U,	// LDXTLS
    140U,	// LDXTLS_
    0U,	// LDgotTprelL
    0U,	// LDgotTprelL32
    0U,	// LDtoc
    0U,	// LDtocBA
    0U,	// LDtocCPT
    0U,	// LDtocJTI
    0U,	// LDtocL
    0U,	// LFD
    0U,	// LFDEPX
    0U,	// LFDU
    0U,	// LFDUX
    0U,	// LFDX
    0U,	// LFIWAX
    0U,	// LFIWZX
    0U,	// LFS
    0U,	// LFSU
    0U,	// LFSUX
    0U,	// LFSX
    0U,	// LHA
    0U,	// LHA8
    0U,	// LHARX
    1U,	// LHARXL
    0U,	// LHAU
    0U,	// LHAU8
    0U,	// LHAUX
    0U,	// LHAUX8
    0U,	// LHAX
    0U,	// LHAX8
    0U,	// LHBRX
    0U,	// LHBRX8
    0U,	// LHEPX
    0U,	// LHZ
    0U,	// LHZ8
    140U,	// LHZCIX
    0U,	// LHZU
    0U,	// LHZU8
    0U,	// LHZUX
    0U,	// LHZUX8
    0U,	// LHZX
    0U,	// LHZX8
    140U,	// LHZXTLS
    140U,	// LHZXTLS_
    140U,	// LHZXTLS_32
    0U,	// LI
    0U,	// LI8
    0U,	// LIS
    0U,	// LIS8
    0U,	// LMW
    132U,	// LSWI
    0U,	// LVEBX
    0U,	// LVEHX
    0U,	// LVEWX
    0U,	// LVSL
    0U,	// LVSR
    0U,	// LVX
    0U,	// LVXL
    0U,	// LWA
    0U,	// LWARX
    1U,	// LWARXL
    132U,	// LWAT
    0U,	// LWAUX
    0U,	// LWAX
    0U,	// LWAX_32
    0U,	// LWA_32
    0U,	// LWBRX
    0U,	// LWBRX8
    0U,	// LWEPX
    0U,	// LWZ
    0U,	// LWZ8
    140U,	// LWZCIX
    0U,	// LWZU
    0U,	// LWZU8
    0U,	// LWZUX
    0U,	// LWZUX8
    0U,	// LWZX
    0U,	// LWZX8
    140U,	// LWZXTLS
    140U,	// LWZXTLS_
    140U,	// LWZXTLS_32
    0U,	// LWZtoc
    0U,	// LWZtocL
    0U,	// LXSD
    0U,	// LXSDX
    0U,	// LXSIBZX
    0U,	// LXSIHZX
    0U,	// LXSIWAX
    0U,	// LXSIWZX
    0U,	// LXSSP
    0U,	// LXSSPX
    0U,	// LXV
    0U,	// LXVB16X
    0U,	// LXVD2X
    0U,	// LXVDSX
    0U,	// LXVH8X
    140U,	// LXVL
    140U,	// LXVLL
    0U,	// LXVP
    0U,	// LXVPX
    0U,	// LXVRBX
    0U,	// LXVRDX
    0U,	// LXVRHX
    0U,	// LXVRWX
    0U,	// LXVW4X
    0U,	// LXVWSX
    0U,	// LXVX
    1036U,	// MADDHD
    1036U,	// MADDHDU
    1036U,	// MADDLD
    1036U,	// MADDLD8
    0U,	// MBAR
    0U,	// MCRF
    0U,	// MCRFS
    0U,	// MCRXRX
    0U,	// MFBHRBE
    0U,	// MFCR
    0U,	// MFCR8
    0U,	// MFCTR
    0U,	// MFCTR8
    0U,	// MFDCR
    0U,	// MFFS
    0U,	// MFFSCDRN
    0U,	// MFFSCDRNI
    0U,	// MFFSCE
    0U,	// MFFSCRN
    0U,	// MFFSCRNI
    0U,	// MFFSL
    0U,	// MFFS_rec
    0U,	// MFLR
    0U,	// MFLR8
    0U,	// MFMSR
    0U,	// MFOCRF
    0U,	// MFOCRF8
    0U,	// MFPMR
    0U,	// MFSPR
    0U,	// MFSPR8
    0U,	// MFSR
    0U,	// MFSRIN
    0U,	// MFTB
    0U,	// MFTB8
    0U,	// MFVRD
    0U,	// MFVRSAVE
    0U,	// MFVRSAVEv
    0U,	// MFVRWZ
    0U,	// MFVSCR
    0U,	// MFVSRD
    0U,	// MFVSRLD
    0U,	// MFVSRWZ
    140U,	// MODSD
    140U,	// MODSW
    140U,	// MODUD
    140U,	// MODUW
    0U,	// MSGSYNC
    0U,	// MSYNC
    0U,	// MTCRF
    0U,	// MTCRF8
    0U,	// MTCTR
    0U,	// MTCTR8
    0U,	// MTCTR8loop
    0U,	// MTCTRloop
    0U,	// MTDCR
    0U,	// MTFSB0
    0U,	// MTFSB1
    1036U,	// MTFSF
    140U,	// MTFSFI
    140U,	// MTFSFI_rec
    1036U,	// MTFSF_rec
    0U,	// MTFSFb
    0U,	// MTLR
    0U,	// MTLR8
    0U,	// MTMSR
    0U,	// MTMSRD
    0U,	// MTOCRF
    0U,	// MTOCRF8
    0U,	// MTPMR
    0U,	// MTSPR
    0U,	// MTSPR8
    0U,	// MTSR
    0U,	// MTSRIN
    0U,	// MTVRD
    0U,	// MTVRSAVE
    0U,	// MTVRSAVEv
    0U,	// MTVRWA
    0U,	// MTVRWZ
    0U,	// MTVSCR
    0U,	// MTVSRBM
    0U,	// MTVSRBMI
    0U,	// MTVSRD
    140U,	// MTVSRDD
    0U,	// MTVSRDM
    0U,	// MTVSRHM
    0U,	// MTVSRQM
    0U,	// MTVSRWA
    0U,	// MTVSRWM
    0U,	// MTVSRWS
    0U,	// MTVSRWZ
    140U,	// MULHD
    140U,	// MULHDU
    140U,	// MULHDU_rec
    140U,	// MULHD_rec
    140U,	// MULHW
    140U,	// MULHWU
    140U,	// MULHWU_rec
    140U,	// MULHW_rec
    140U,	// MULLD
    140U,	// MULLDO
    140U,	// MULLDO_rec
    140U,	// MULLD_rec
    8U,	// MULLI
    8U,	// MULLI8
    140U,	// MULLW
    140U,	// MULLWO
    140U,	// MULLWO_rec
    140U,	// MULLW_rec
    0U,	// MoveGOTtoLR
    0U,	// MovePCtoLR
    0U,	// MovePCtoLR8
    140U,	// NAND
    140U,	// NAND8
    140U,	// NAND8_rec
    140U,	// NAND_rec
    0U,	// NAP
    0U,	// NEG
    0U,	// NEG8
    0U,	// NEG8O
    0U,	// NEG8O_rec
    0U,	// NEG8_rec
    0U,	// NEGO
    0U,	// NEGO_rec
    0U,	// NEG_rec
    0U,	// NOP
    0U,	// NOP_GT_PWR6
    0U,	// NOP_GT_PWR7
    140U,	// NOR
    140U,	// NOR8
    140U,	// NOR8_rec
    140U,	// NOR_rec
    140U,	// OR
    140U,	// OR8
    140U,	// OR8_rec
    140U,	// ORC
    140U,	// ORC8
    140U,	// ORC8_rec
    140U,	// ORC_rec
    16U,	// ORI
    16U,	// ORI8
    16U,	// ORIS
    16U,	// ORIS8
    140U,	// OR_rec
    32U,	// PADDI
    32U,	// PADDI8
    0U,	// PADDI8pc
    0U,	// PADDIdtprel
    0U,	// PADDIpc
    140U,	// PDEPD
    140U,	// PEXTD
    0U,	// PLBZ
    0U,	// PLBZ8
    0U,	// PLBZ8pc
    0U,	// PLBZpc
    0U,	// PLD
    0U,	// PLDpc
    0U,	// PLFD
    0U,	// PLFDpc
    0U,	// PLFS
    0U,	// PLFSpc
    0U,	// PLHA
    0U,	// PLHA8
    0U,	// PLHA8pc
    0U,	// PLHApc
    0U,	// PLHZ
    0U,	// PLHZ8
    0U,	// PLHZ8pc
    0U,	// PLHZpc
    0U,	// PLI
    0U,	// PLI8
    0U,	// PLWA
    0U,	// PLWA8
    0U,	// PLWA8pc
    0U,	// PLWApc
    0U,	// PLWZ
    0U,	// PLWZ8
    0U,	// PLWZ8pc
    0U,	// PLWZpc
    0U,	// PLXSD
    0U,	// PLXSDpc
    0U,	// PLXSSP
    0U,	// PLXSSPpc
    0U,	// PLXV
    0U,	// PLXVP
    0U,	// PLXVPpc
    0U,	// PLXVpc
    10252U,	// PMXVBF16GER2
    19237U,	// PMXVBF16GER2NN
    19237U,	// PMXVBF16GER2NP
    19237U,	// PMXVBF16GER2PN
    19237U,	// PMXVBF16GER2PP
    10252U,	// PMXVF16GER2
    19237U,	// PMXVF16GER2NN
    19237U,	// PMXVF16GER2NP
    19237U,	// PMXVF16GER2PN
    19237U,	// PMXVF16GER2PP
    10252U,	// PMXVF32GER
    3365U,	// PMXVF32GERNN
    3365U,	// PMXVF32GERNP
    3365U,	// PMXVF32GERPN
    3365U,	// PMXVF32GERPP
    10252U,	// PMXVF64GER
    421U,	// PMXVF64GERNN
    421U,	// PMXVF64GERNP
    421U,	// PMXVF64GERPN
    421U,	// PMXVF64GERPP
    10252U,	// PMXVI16GER2
    19237U,	// PMXVI16GER2PP
    10252U,	// PMXVI16GER2S
    19237U,	// PMXVI16GER2SPP
    10252U,	// PMXVI4GER8
    27429U,	// PMXVI4GER8PP
    10252U,	// PMXVI8GER4
    35621U,	// PMXVI8GER4PP
    35621U,	// PMXVI8GER4SPP
    0U,	// POPCNTB
    0U,	// POPCNTD
    0U,	// POPCNTW
    0U,	// PPC32GOT
    0U,	// PPC32PICGOT
    0U,	// PREPARE_PROBED_ALLOCA_32
    0U,	// PREPARE_PROBED_ALLOCA_64
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64
    0U,	// PROBED_ALLOCA_32
    0U,	// PROBED_ALLOCA_64
    0U,	// PROBED_STACKALLOC_32
    0U,	// PROBED_STACKALLOC_64
    40U,	// PSQ_L
    44U,	// PSQ_LU
    44U,	// PSQ_LUX
    40U,	// PSQ_LX
    40U,	// PSQ_ST
    44U,	// PSQ_STU
    44U,	// PSQ_STUX
    40U,	// PSQ_STX
    0U,	// PSTB
    0U,	// PSTB8
    0U,	// PSTB8pc
    0U,	// PSTBpc
    0U,	// PSTD
    0U,	// PSTDpc
    0U,	// PSTFD
    0U,	// PSTFDpc
    0U,	// PSTFS
    0U,	// PSTFSpc
    0U,	// PSTH
    0U,	// PSTH8
    0U,	// PSTH8pc
    0U,	// PSTHpc
    0U,	// PSTW
    0U,	// PSTW8
    0U,	// PSTW8pc
    0U,	// PSTWpc
    0U,	// PSTXSD
    0U,	// PSTXSDpc
    0U,	// PSTXSSP
    0U,	// PSTXSSPpc
    0U,	// PSTXV
    0U,	// PSTXVP
    0U,	// PSTXVPpc
    0U,	// PSTXVpc
    0U,	// PS_ABS
    0U,	// PS_ABS_rec
    140U,	// PS_ADD
    140U,	// PS_ADD_rec
    140U,	// PS_CMPO0
    140U,	// PS_CMPO1
    140U,	// PS_CMPU0
    140U,	// PS_CMPU1
    140U,	// PS_DIV
    140U,	// PS_DIV_rec
    48U,	// PS_MADD
    48U,	// PS_MADDS0
    48U,	// PS_MADDS0_rec
    48U,	// PS_MADDS1
    48U,	// PS_MADDS1_rec
    48U,	// PS_MADD_rec
    140U,	// PS_MERGE00
    140U,	// PS_MERGE00_rec
    140U,	// PS_MERGE01
    140U,	// PS_MERGE01_rec
    140U,	// PS_MERGE10
    140U,	// PS_MERGE10_rec
    140U,	// PS_MERGE11
    140U,	// PS_MERGE11_rec
    0U,	// PS_MR
    0U,	// PS_MR_rec
    48U,	// PS_MSUB
    48U,	// PS_MSUB_rec
    140U,	// PS_MUL
    140U,	// PS_MULS0
    140U,	// PS_MULS0_rec
    140U,	// PS_MULS1
    140U,	// PS_MULS1_rec
    140U,	// PS_MUL_rec
    0U,	// PS_NABS
    0U,	// PS_NABS_rec
    0U,	// PS_NEG
    0U,	// PS_NEG_rec
    48U,	// PS_NMADD
    48U,	// PS_NMADD_rec
    48U,	// PS_NMSUB
    48U,	// PS_NMSUB_rec
    0U,	// PS_RES
    0U,	// PS_RES_rec
    0U,	// PS_RSQRTE
    0U,	// PS_RSQRTE_rec
    48U,	// PS_SEL
    48U,	// PS_SEL_rec
    140U,	// PS_SUB
    140U,	// PS_SUB_rec
    48U,	// PS_SUM0
    48U,	// PS_SUM0_rec
    48U,	// PS_SUM1
    48U,	// PS_SUM1_rec
    0U,	// RESTORE_ACC
    0U,	// RESTORE_CR
    0U,	// RESTORE_CRBIT
    0U,	// RESTORE_UACC
    0U,	// RFCI
    0U,	// RFDI
    0U,	// RFEBB
    0U,	// RFI
    0U,	// RFID
    0U,	// RFMCI
    12U,	// RLDCL
    12U,	// RLDCL_rec
    12U,	// RLDCR
    12U,	// RLDCR_rec
    0U,	// RLDIC
    0U,	// RLDICL
    0U,	// RLDICL_32
    0U,	// RLDICL_32_64
    0U,	// RLDICL_32_rec
    0U,	// RLDICL_rec
    0U,	// RLDICR
    0U,	// RLDICR_32
    0U,	// RLDICR_rec
    0U,	// RLDIC_rec
    1U,	// RLDIMI
    1U,	// RLDIMI_rec
    2U,	// RLWIMI
    2U,	// RLWIMI8
    2U,	// RLWIMI8_rec
    2U,	// RLWIMI_rec
    8708U,	// RLWINM
    8708U,	// RLWINM8
    8708U,	// RLWINM8_rec
    8708U,	// RLWINM_rec
    8716U,	// RLWNM
    8716U,	// RLWNM8
    8716U,	// RLWNM8_rec
    8716U,	// RLWNM_rec
    0U,	// ReadTB
    0U,	// SC
    0U,	// SELECT_CC_F16
    0U,	// SELECT_CC_F4
    0U,	// SELECT_CC_F8
    0U,	// SELECT_CC_I4
    0U,	// SELECT_CC_I8
    0U,	// SELECT_CC_SPE
    0U,	// SELECT_CC_SPE4
    0U,	// SELECT_CC_VRRC
    0U,	// SELECT_CC_VSFRC
    0U,	// SELECT_CC_VSRC
    0U,	// SELECT_CC_VSSRC
    0U,	// SELECT_F16
    0U,	// SELECT_F4
    0U,	// SELECT_F8
    0U,	// SELECT_I4
    0U,	// SELECT_I8
    0U,	// SELECT_SPE
    0U,	// SELECT_SPE4
    0U,	// SELECT_VRRC
    0U,	// SELECT_VSFRC
    0U,	// SELECT_VSRC
    0U,	// SELECT_VSSRC
    0U,	// SETB
    0U,	// SETB8
    0U,	// SETBC
    0U,	// SETBC8
    0U,	// SETBCR
    0U,	// SETBCR8
    0U,	// SETFLM
    0U,	// SETNBC
    0U,	// SETNBC8
    0U,	// SETNBCR
    0U,	// SETNBCR8
    0U,	// SETRND
    0U,	// SETRNDi
    0U,	// SLBFEE_rec
    0U,	// SLBIA
    0U,	// SLBIE
    0U,	// SLBIEG
    0U,	// SLBMFEE
    0U,	// SLBMFEV
    0U,	// SLBMTE
    0U,	// SLBSYNC
    140U,	// SLD
    140U,	// SLD_rec
    140U,	// SLW
    140U,	// SLW8
    140U,	// SLW8_rec
    140U,	// SLW_rec
    0U,	// SPELWZ
    0U,	// SPELWZX
    0U,	// SPESTW
    0U,	// SPESTWX
    0U,	// SPILL_ACC
    0U,	// SPILL_CR
    0U,	// SPILL_CRBIT
    0U,	// SPILL_UACC
    140U,	// SRAD
    128U,	// SRADI
    128U,	// SRADI_32
    128U,	// SRADI_rec
    140U,	// SRAD_rec
    140U,	// SRAW
    132U,	// SRAWI
    132U,	// SRAWI_rec
    140U,	// SRAW_rec
    140U,	// SRD
    140U,	// SRD_rec
    140U,	// SRW
    140U,	// SRW8
    140U,	// SRW8_rec
    140U,	// SRW_rec
    0U,	// STB
    0U,	// STB8
    140U,	// STBCIX
    0U,	// STBCX
    0U,	// STBEPX
    0U,	// STBU
    0U,	// STBU8
    0U,	// STBUX
    0U,	// STBUX8
    0U,	// STBX
    0U,	// STBX8
    140U,	// STBXTLS
    140U,	// STBXTLS_
    140U,	// STBXTLS_32
    0U,	// STD
    132U,	// STDAT
    0U,	// STDBRX
    140U,	// STDCIX
    0U,	// STDCX
    0U,	// STDU
    0U,	// STDUX
    0U,	// STDX
    140U,	// STDXTLS
    140U,	// STDXTLS_
    0U,	// STFD
    0U,	// STFDEPX
    0U,	// STFDU
    0U,	// STFDUX
    0U,	// STFDX
    0U,	// STFIWX
    0U,	// STFS
    0U,	// STFSU
    0U,	// STFSUX
    0U,	// STFSX
    0U,	// STH
    0U,	// STH8
    0U,	// STHBRX
    140U,	// STHCIX
    0U,	// STHCX
    0U,	// STHEPX
    0U,	// STHU
    0U,	// STHU8
    0U,	// STHUX
    0U,	// STHUX8
    0U,	// STHX
    0U,	// STHX8
    140U,	// STHXTLS
    140U,	// STHXTLS_
    140U,	// STHXTLS_32
    0U,	// STMW
    0U,	// STOP
    132U,	// STSWI
    0U,	// STVEBX
    0U,	// STVEHX
    0U,	// STVEWX
    0U,	// STVX
    0U,	// STVXL
    0U,	// STW
    0U,	// STW8
    132U,	// STWAT
    0U,	// STWBRX
    140U,	// STWCIX
    0U,	// STWCX
    0U,	// STWEPX
    0U,	// STWU
    0U,	// STWU8
    0U,	// STWUX
    0U,	// STWUX8
    0U,	// STWX
    0U,	// STWX8
    140U,	// STWXTLS
    140U,	// STWXTLS_
    140U,	// STWXTLS_32
    0U,	// STXSD
    0U,	// STXSDX
    0U,	// STXSIBX
    0U,	// STXSIBXv
    0U,	// STXSIHX
    0U,	// STXSIHXv
    0U,	// STXSIWX
    0U,	// STXSSP
    0U,	// STXSSPX
    0U,	// STXV
    0U,	// STXVB16X
    0U,	// STXVD2X
    0U,	// STXVH8X
    140U,	// STXVL
    140U,	// STXVLL
    0U,	// STXVP
    0U,	// STXVPX
    0U,	// STXVRBX
    0U,	// STXVRDX
    0U,	// STXVRHX
    0U,	// STXVRWX
    0U,	// STXVW4X
    0U,	// STXVX
    140U,	// SUBF
    140U,	// SUBF8
    140U,	// SUBF8O
    140U,	// SUBF8O_rec
    140U,	// SUBF8_rec
    140U,	// SUBFC
    140U,	// SUBFC8
    140U,	// SUBFC8O
    140U,	// SUBFC8O_rec
    140U,	// SUBFC8_rec
    140U,	// SUBFCO
    140U,	// SUBFCO_rec
    140U,	// SUBFC_rec
    140U,	// SUBFE
    140U,	// SUBFE8
    140U,	// SUBFE8O
    140U,	// SUBFE8O_rec
    140U,	// SUBFE8_rec
    140U,	// SUBFEO
    140U,	// SUBFEO_rec
    140U,	// SUBFE_rec
    8U,	// SUBFIC
    8U,	// SUBFIC8
    0U,	// SUBFME
    0U,	// SUBFME8
    0U,	// SUBFME8O
    0U,	// SUBFME8O_rec
    0U,	// SUBFME8_rec
    0U,	// SUBFMEO
    0U,	// SUBFMEO_rec
    0U,	// SUBFME_rec
    140U,	// SUBFO
    140U,	// SUBFO_rec
    0U,	// SUBFZE
    0U,	// SUBFZE8
    0U,	// SUBFZE8O
    0U,	// SUBFZE8O_rec
    0U,	// SUBFZE8_rec
    0U,	// SUBFZEO
    0U,	// SUBFZEO_rec
    0U,	// SUBFZE_rec
    140U,	// SUBF_rec
    0U,	// SYNC
    0U,	// TABORT
    140U,	// TABORTDC
    132U,	// TABORTDCI
    140U,	// TABORTWC
    132U,	// TABORTWCI
    0U,	// TAILB
    0U,	// TAILB8
    0U,	// TAILBA
    0U,	// TAILBA8
    0U,	// TAILBCTR
    0U,	// TAILBCTR8
    0U,	// TBEGIN
    0U,	// TBEGIN_RET
    0U,	// TCHECK
    0U,	// TCHECK_RET
    0U,	// TCRETURNai
    0U,	// TCRETURNai8
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi8
    0U,	// TCRETURNri
    0U,	// TCRETURNri8
    140U,	// TD
    8U,	// TDI
    0U,	// TEND
    0U,	// TLBIA
    0U,	// TLBIE
    0U,	// TLBIEL
    0U,	// TLBIVAX
    0U,	// TLBLD
    0U,	// TLBLI
    0U,	// TLBRE
    140U,	// TLBRE2
    0U,	// TLBSX
    140U,	// TLBSX2
    140U,	// TLBSX2D
    0U,	// TLBSYNC
    0U,	// TLBWE
    140U,	// TLBWE2
    0U,	// TRAP
    0U,	// TRECHKPT
    0U,	// TRECLAIM
    0U,	// TSR
    140U,	// TW
    8U,	// TWI
    0U,	// UNENCODED_NOP
    0U,	// UpdateGBR
    140U,	// VABSDUB
    140U,	// VABSDUH
    140U,	// VABSDUW
    140U,	// VADDCUQ
    140U,	// VADDCUW
    1036U,	// VADDECUQ
    1036U,	// VADDEUQM
    140U,	// VADDFP
    140U,	// VADDSBS
    140U,	// VADDSHS
    140U,	// VADDSWS
    140U,	// VADDUBM
    140U,	// VADDUBS
    140U,	// VADDUDM
    140U,	// VADDUHM
    140U,	// VADDUHS
    140U,	// VADDUQM
    140U,	// VADDUWM
    140U,	// VADDUWS
    140U,	// VAND
    140U,	// VANDC
    140U,	// VAVGSB
    140U,	// VAVGSH
    140U,	// VAVGSW
    140U,	// VAVGUB
    140U,	// VAVGUH
    140U,	// VAVGUW
    140U,	// VBPERMD
    140U,	// VBPERMQ
    2U,	// VCFSX
    2U,	// VCFSX_0
    140U,	// VCFUGED
    2U,	// VCFUX
    2U,	// VCFUX_0
    140U,	// VCIPHER
    140U,	// VCIPHERLAST
    140U,	// VCLRLB
    140U,	// VCLRRB
    0U,	// VCLZB
    0U,	// VCLZD
    140U,	// VCLZDM
    0U,	// VCLZH
    0U,	// VCLZLSBB
    0U,	// VCLZW
    140U,	// VCMPBFP
    140U,	// VCMPBFP_rec
    140U,	// VCMPEQFP
    140U,	// VCMPEQFP_rec
    140U,	// VCMPEQUB
    140U,	// VCMPEQUB_rec
    140U,	// VCMPEQUD
    140U,	// VCMPEQUD_rec
    140U,	// VCMPEQUH
    140U,	// VCMPEQUH_rec
    140U,	// VCMPEQUQ
    140U,	// VCMPEQUQ_rec
    140U,	// VCMPEQUW
    140U,	// VCMPEQUW_rec
    140U,	// VCMPGEFP
    140U,	// VCMPGEFP_rec
    140U,	// VCMPGTFP
    140U,	// VCMPGTFP_rec
    140U,	// VCMPGTSB
    140U,	// VCMPGTSB_rec
    140U,	// VCMPGTSD
    140U,	// VCMPGTSD_rec
    140U,	// VCMPGTSH
    140U,	// VCMPGTSH_rec
    140U,	// VCMPGTSQ
    140U,	// VCMPGTSQ_rec
    140U,	// VCMPGTSW
    140U,	// VCMPGTSW_rec
    140U,	// VCMPGTUB
    140U,	// VCMPGTUB_rec
    140U,	// VCMPGTUD
    140U,	// VCMPGTUD_rec
    140U,	// VCMPGTUH
    140U,	// VCMPGTUH_rec
    140U,	// VCMPGTUQ
    140U,	// VCMPGTUQ_rec
    140U,	// VCMPGTUW
    140U,	// VCMPGTUW_rec
    140U,	// VCMPNEB
    140U,	// VCMPNEB_rec
    140U,	// VCMPNEH
    140U,	// VCMPNEH_rec
    140U,	// VCMPNEW
    140U,	// VCMPNEW_rec
    140U,	// VCMPNEZB
    140U,	// VCMPNEZB_rec
    140U,	// VCMPNEZH
    140U,	// VCMPNEZH_rec
    140U,	// VCMPNEZW
    140U,	// VCMPNEZW_rec
    140U,	// VCMPSQ
    140U,	// VCMPUQ
    148U,	// VCNTMBB
    148U,	// VCNTMBD
    148U,	// VCNTMBH
    148U,	// VCNTMBW
    2U,	// VCTSXS
    2U,	// VCTSXS_0
    2U,	// VCTUXS
    2U,	// VCTUXS_0
    0U,	// VCTZB
    0U,	// VCTZD
    140U,	// VCTZDM
    0U,	// VCTZH
    0U,	// VCTZLSBB
    0U,	// VCTZW
    140U,	// VDIVESD
    140U,	// VDIVESQ
    140U,	// VDIVESW
    140U,	// VDIVEUD
    140U,	// VDIVEUQ
    140U,	// VDIVEUW
    140U,	// VDIVSD
    140U,	// VDIVSQ
    140U,	// VDIVSW
    140U,	// VDIVUD
    140U,	// VDIVUQ
    140U,	// VDIVUW
    140U,	// VEQV
    0U,	// VEXPANDBM
    0U,	// VEXPANDDM
    0U,	// VEXPANDHM
    0U,	// VEXPANDQM
    0U,	// VEXPANDWM
    0U,	// VEXPTEFP
    1036U,	// VEXTDDVLX
    1036U,	// VEXTDDVRX
    1036U,	// VEXTDUBVLX
    1036U,	// VEXTDUBVRX
    1036U,	// VEXTDUHVLX
    1036U,	// VEXTDUHVRX
    1036U,	// VEXTDUWVLX
    1036U,	// VEXTDUWVRX
    0U,	// VEXTRACTBM
    2U,	// VEXTRACTD
    0U,	// VEXTRACTDM
    0U,	// VEXTRACTHM
    0U,	// VEXTRACTQM
    2U,	// VEXTRACTUB
    2U,	// VEXTRACTUH
    2U,	// VEXTRACTUW
    0U,	// VEXTRACTWM
    0U,	// VEXTSB2D
    0U,	// VEXTSB2Ds
    0U,	// VEXTSB2W
    0U,	// VEXTSB2Ws
    0U,	// VEXTSD2Q
    0U,	// VEXTSH2D
    0U,	// VEXTSH2Ds
    0U,	// VEXTSH2W
    0U,	// VEXTSH2Ws
    0U,	// VEXTSW2D
    0U,	// VEXTSW2Ds
    140U,	// VEXTUBLX
    140U,	// VEXTUBRX
    140U,	// VEXTUHLX
    140U,	// VEXTUHRX
    140U,	// VEXTUWLX
    140U,	// VEXTUWRX
    0U,	// VGBBD
    52U,	// VGNB
    57U,	// VINSBLX
    57U,	// VINSBRX
    57U,	// VINSBVLX
    57U,	// VINSBVRX
    0U,	// VINSD
    57U,	// VINSDLX
    57U,	// VINSDRX
    0U,	// VINSERTB
    2U,	// VINSERTD
    0U,	// VINSERTH
    2U,	// VINSERTW
    57U,	// VINSHLX
    57U,	// VINSHRX
    57U,	// VINSHVLX
    57U,	// VINSHVRX
    0U,	// VINSW
    57U,	// VINSWLX
    57U,	// VINSWRX
    57U,	// VINSWVLX
    57U,	// VINSWVRX
    0U,	// VLOGEFP
    1036U,	// VMADDFP
    140U,	// VMAXFP
    140U,	// VMAXSB
    140U,	// VMAXSD
    140U,	// VMAXSH
    140U,	// VMAXSW
    140U,	// VMAXUB
    140U,	// VMAXUD
    140U,	// VMAXUH
    140U,	// VMAXUW
    1036U,	// VMHADDSHS
    1036U,	// VMHRADDSHS
    140U,	// VMINFP
    140U,	// VMINSB
    140U,	// VMINSD
    140U,	// VMINSH
    140U,	// VMINSW
    140U,	// VMINUB
    140U,	// VMINUD
    140U,	// VMINUH
    140U,	// VMINUW
    1036U,	// VMLADDUHM
    140U,	// VMODSD
    140U,	// VMODSQ
    140U,	// VMODSW
    140U,	// VMODUD
    140U,	// VMODUQ
    140U,	// VMODUW
    140U,	// VMRGEW
    140U,	// VMRGHB
    140U,	// VMRGHH
    140U,	// VMRGHW
    140U,	// VMRGLB
    140U,	// VMRGLH
    140U,	// VMRGLW
    140U,	// VMRGOW
    1036U,	// VMSUMCUD
    1036U,	// VMSUMMBM
    1036U,	// VMSUMSHM
    1036U,	// VMSUMSHS
    1036U,	// VMSUMUBM
    1036U,	// VMSUMUDM
    1036U,	// VMSUMUHM
    1036U,	// VMSUMUHS
    0U,	// VMUL10CUQ
    140U,	// VMUL10ECUQ
    140U,	// VMUL10EUQ
    0U,	// VMUL10UQ
    140U,	// VMULESB
    140U,	// VMULESD
    140U,	// VMULESH
    140U,	// VMULESW
    140U,	// VMULEUB
    140U,	// VMULEUD
    140U,	// VMULEUH
    140U,	// VMULEUW
    140U,	// VMULHSD
    140U,	// VMULHSW
    140U,	// VMULHUD
    140U,	// VMULHUW
    140U,	// VMULLD
    140U,	// VMULOSB
    140U,	// VMULOSD
    140U,	// VMULOSH
    140U,	// VMULOSW
    140U,	// VMULOUB
    140U,	// VMULOUD
    140U,	// VMULOUH
    140U,	// VMULOUW
    140U,	// VMULUWM
    140U,	// VNAND
    140U,	// VNCIPHER
    140U,	// VNCIPHERLAST
    0U,	// VNEGD
    0U,	// VNEGW
    1036U,	// VNMSUBFP
    140U,	// VNOR
    140U,	// VOR
    140U,	// VORC
    140U,	// VPDEPD
    1036U,	// VPERM
    1036U,	// VPERMR
    1036U,	// VPERMXOR
    140U,	// VPEXTD
    140U,	// VPKPX
    140U,	// VPKSDSS
    140U,	// VPKSDUS
    140U,	// VPKSHSS
    140U,	// VPKSHUS
    140U,	// VPKSWSS
    140U,	// VPKSWUS
    140U,	// VPKUDUM
    140U,	// VPKUDUS
    140U,	// VPKUHUM
    140U,	// VPKUHUS
    140U,	// VPKUWUM
    140U,	// VPKUWUS
    140U,	// VPMSUMB
    140U,	// VPMSUMD
    140U,	// VPMSUMH
    140U,	// VPMSUMW
    0U,	// VPOPCNTB
    0U,	// VPOPCNTD
    0U,	// VPOPCNTH
    0U,	// VPOPCNTW
    0U,	// VPRTYBD
    0U,	// VPRTYBQ
    0U,	// VPRTYBW
    0U,	// VREFP
    0U,	// VRFIM
    0U,	// VRFIN
    0U,	// VRFIP
    0U,	// VRFIZ
    140U,	// VRLB
    140U,	// VRLD
    140U,	// VRLDMI
    140U,	// VRLDNM
    140U,	// VRLH
    140U,	// VRLQ
    140U,	// VRLQMI
    140U,	// VRLQNM
    140U,	// VRLW
    140U,	// VRLWMI
    140U,	// VRLWNM
    0U,	// VRSQRTEFP
    0U,	// VSBOX
    1036U,	// VSEL
    2068U,	// VSHASIGMAD
    2068U,	// VSHASIGMAW
    140U,	// VSL
    140U,	// VSLB
    140U,	// VSLD
    3596U,	// VSLDBI
    2060U,	// VSLDOI
    140U,	// VSLH
    140U,	// VSLO
    140U,	// VSLQ
    140U,	// VSLV
    140U,	// VSLW
    2U,	// VSPLTB
    2U,	// VSPLTBs
    2U,	// VSPLTH
    2U,	// VSPLTHs
    0U,	// VSPLTISB
    0U,	// VSPLTISH
    0U,	// VSPLTISW
    2U,	// VSPLTW
    140U,	// VSR
    140U,	// VSRAB
    140U,	// VSRAD
    140U,	// VSRAH
    140U,	// VSRAQ
    140U,	// VSRAW
    140U,	// VSRB
    140U,	// VSRD
    3596U,	// VSRDBI
    140U,	// VSRH
    140U,	// VSRO
    140U,	// VSRQ
    140U,	// VSRV
    140U,	// VSRW
    0U,	// VSTRIBL
    0U,	// VSTRIBL_rec
    0U,	// VSTRIBR
    0U,	// VSTRIBR_rec
    0U,	// VSTRIHL
    0U,	// VSTRIHL_rec
    0U,	// VSTRIHR
    0U,	// VSTRIHR_rec
    140U,	// VSUBCUQ
    140U,	// VSUBCUW
    1036U,	// VSUBECUQ
    1036U,	// VSUBEUQM
    140U,	// VSUBFP
    140U,	// VSUBSBS
    140U,	// VSUBSHS
    140U,	// VSUBSWS
    140U,	// VSUBUBM
    140U,	// VSUBUBS
    140U,	// VSUBUDM
    140U,	// VSUBUHM
    140U,	// VSUBUHS
    140U,	// VSUBUQM
    140U,	// VSUBUWM
    140U,	// VSUBUWS
    140U,	// VSUM2SWS
    140U,	// VSUM4SBS
    140U,	// VSUM4SHS
    140U,	// VSUM4UBS
    140U,	// VSUMSWS
    0U,	// VUPKHPX
    0U,	// VUPKHSB
    0U,	// VUPKHSH
    0U,	// VUPKHSW
    0U,	// VUPKLPX
    0U,	// VUPKLSB
    0U,	// VUPKLSH
    0U,	// VUPKLSW
    140U,	// VXOR
    24U,	// V_SET0
    24U,	// V_SET0B
    24U,	// V_SET0H
    0U,	// V_SETALLONES
    0U,	// V_SETALLONESB
    0U,	// V_SETALLONESH
    0U,	// WAIT
    0U,	// WRTEE
    0U,	// WRTEEI
    140U,	// XOR
    140U,	// XOR8
    140U,	// XOR8_rec
    16U,	// XORI
    16U,	// XORI8
    16U,	// XORIS
    16U,	// XORIS8
    140U,	// XOR_rec
    0U,	// XSABSDP
    0U,	// XSABSQP
    140U,	// XSADDDP
    140U,	// XSADDQP
    140U,	// XSADDQPO
    140U,	// XSADDSP
    140U,	// XSCMPEQDP
    140U,	// XSCMPEXPDP
    140U,	// XSCMPEXPQP
    140U,	// XSCMPGEDP
    140U,	// XSCMPGTDP
    140U,	// XSCMPODP
    140U,	// XSCMPOQP
    140U,	// XSCMPUDP
    140U,	// XSCMPUQP
    140U,	// XSCPSGNDP
    140U,	// XSCPSGNQP
    0U,	// XSCVDPHP
    0U,	// XSCVDPQP
    0U,	// XSCVDPSP
    0U,	// XSCVDPSPN
    0U,	// XSCVDPSXDS
    0U,	// XSCVDPSXDSs
    0U,	// XSCVDPSXWS
    0U,	// XSCVDPSXWSs
    0U,	// XSCVDPUXDS
    0U,	// XSCVDPUXDSs
    0U,	// XSCVDPUXWS
    0U,	// XSCVDPUXWSs
    0U,	// XSCVHPDP
    0U,	// XSCVQPDP
    0U,	// XSCVQPDPO
    0U,	// XSCVQPSDZ
    0U,	// XSCVQPSQZ
    0U,	// XSCVQPSWZ
    0U,	// XSCVQPUDZ
    0U,	// XSCVQPUQZ
    0U,	// XSCVQPUWZ
    0U,	// XSCVSDQP
    0U,	// XSCVSPDP
    0U,	// XSCVSPDPN
    0U,	// XSCVSQQP
    0U,	// XSCVSXDDP
    0U,	// XSCVSXDSP
    0U,	// XSCVUDQP
    0U,	// XSCVUQQP
    0U,	// XSCVUXDDP
    0U,	// XSCVUXDSP
    140U,	// XSDIVDP
    140U,	// XSDIVQP
    140U,	// XSDIVQPO
    140U,	// XSDIVSP
    140U,	// XSIEXPDP
    140U,	// XSIEXPQP
    57U,	// XSMADDADP
    57U,	// XSMADDASP
    57U,	// XSMADDMDP
    57U,	// XSMADDMSP
    57U,	// XSMADDQP
    57U,	// XSMADDQPO
    140U,	// XSMAXCDP
    140U,	// XSMAXDP
    140U,	// XSMAXJDP
    140U,	// XSMINCDP
    140U,	// XSMINDP
    140U,	// XSMINJDP
    57U,	// XSMSUBADP
    57U,	// XSMSUBASP
    57U,	// XSMSUBMDP
    57U,	// XSMSUBMSP
    57U,	// XSMSUBQP
    57U,	// XSMSUBQPO
    140U,	// XSMULDP
    140U,	// XSMULQP
    140U,	// XSMULQPO
    140U,	// XSMULSP
    0U,	// XSNABSDP
    0U,	// XSNABSQP
    0U,	// XSNEGDP
    0U,	// XSNEGQP
    57U,	// XSNMADDADP
    57U,	// XSNMADDASP
    57U,	// XSNMADDMDP
    57U,	// XSNMADDMSP
    57U,	// XSNMADDQP
    57U,	// XSNMADDQPO
    57U,	// XSNMSUBADP
    57U,	// XSNMSUBASP
    57U,	// XSNMSUBMDP
    57U,	// XSNMSUBMSP
    57U,	// XSNMSUBQP
    57U,	// XSNMSUBQPO
    0U,	// XSRDPI
    0U,	// XSRDPIC
    0U,	// XSRDPIM
    0U,	// XSRDPIP
    0U,	// XSRDPIZ
    0U,	// XSREDP
    0U,	// XSRESP
    0U,	// XSRQPI
    0U,	// XSRQPIX
    0U,	// XSRQPXP
    0U,	// XSRSP
    0U,	// XSRSQRTEDP
    0U,	// XSRSQRTESP
    0U,	// XSSQRTDP
    0U,	// XSSQRTQP
    0U,	// XSSQRTQPO
    0U,	// XSSQRTSP
    140U,	// XSSUBDP
    140U,	// XSSUBQP
    140U,	// XSSUBQPO
    140U,	// XSSUBSP
    140U,	// XSTDIVDP
    0U,	// XSTSQRTDP
    3U,	// XSTSTDCDP
    3U,	// XSTSTDCQP
    3U,	// XSTSTDCSP
    0U,	// XSXEXPDP
    0U,	// XSXEXPQP
    0U,	// XSXSIGDP
    0U,	// XSXSIGQP
    0U,	// XVABSDP
    0U,	// XVABSSP
    140U,	// XVADDDP
    140U,	// XVADDSP
    140U,	// XVBF16GER2
    57U,	// XVBF16GER2NN
    57U,	// XVBF16GER2NP
    57U,	// XVBF16GER2PN
    57U,	// XVBF16GER2PP
    140U,	// XVCMPEQDP
    140U,	// XVCMPEQDP_rec
    140U,	// XVCMPEQSP
    140U,	// XVCMPEQSP_rec
    140U,	// XVCMPGEDP
    140U,	// XVCMPGEDP_rec
    140U,	// XVCMPGESP
    140U,	// XVCMPGESP_rec
    140U,	// XVCMPGTDP
    140U,	// XVCMPGTDP_rec
    140U,	// XVCMPGTSP
    140U,	// XVCMPGTSP_rec
    140U,	// XVCPSGNDP
    140U,	// XVCPSGNSP
    0U,	// XVCVBF16SPN
    0U,	// XVCVDPSP
    0U,	// XVCVDPSXDS
    0U,	// XVCVDPSXWS
    0U,	// XVCVDPUXDS
    0U,	// XVCVDPUXWS
    0U,	// XVCVHPSP
    0U,	// XVCVSPBF16
    0U,	// XVCVSPDP
    0U,	// XVCVSPHP
    0U,	// XVCVSPSXDS
    0U,	// XVCVSPSXWS
    0U,	// XVCVSPUXDS
    0U,	// XVCVSPUXWS
    0U,	// XVCVSXDDP
    0U,	// XVCVSXDSP
    0U,	// XVCVSXWDP
    0U,	// XVCVSXWSP
    0U,	// XVCVUXDDP
    0U,	// XVCVUXDSP
    0U,	// XVCVUXWDP
    0U,	// XVCVUXWSP
    140U,	// XVDIVDP
    140U,	// XVDIVSP
    140U,	// XVF16GER2
    57U,	// XVF16GER2NN
    57U,	// XVF16GER2NP
    57U,	// XVF16GER2PN
    57U,	// XVF16GER2PP
    140U,	// XVF32GER
    57U,	// XVF32GERNN
    57U,	// XVF32GERNP
    57U,	// XVF32GERPN
    57U,	// XVF32GERPP
    140U,	// XVF64GER
    57U,	// XVF64GERNN
    57U,	// XVF64GERNP
    57U,	// XVF64GERPN
    57U,	// XVF64GERPP
    140U,	// XVI16GER2
    57U,	// XVI16GER2PP
    140U,	// XVI16GER2S
    57U,	// XVI16GER2SPP
    140U,	// XVI4GER8
    57U,	// XVI4GER8PP
    140U,	// XVI8GER4
    57U,	// XVI8GER4PP
    57U,	// XVI8GER4SPP
    140U,	// XVIEXPDP
    140U,	// XVIEXPSP
    57U,	// XVMADDADP
    57U,	// XVMADDASP
    57U,	// XVMADDMDP
    57U,	// XVMADDMSP
    140U,	// XVMAXDP
    140U,	// XVMAXSP
    140U,	// XVMINDP
    140U,	// XVMINSP
    57U,	// XVMSUBADP
    57U,	// XVMSUBASP
    57U,	// XVMSUBMDP
    57U,	// XVMSUBMSP
    140U,	// XVMULDP
    140U,	// XVMULSP
    0U,	// XVNABSDP
    0U,	// XVNABSSP
    0U,	// XVNEGDP
    0U,	// XVNEGSP
    57U,	// XVNMADDADP
    57U,	// XVNMADDASP
    57U,	// XVNMADDMDP
    57U,	// XVNMADDMSP
    57U,	// XVNMSUBADP
    57U,	// XVNMSUBASP
    57U,	// XVNMSUBMDP
    57U,	// XVNMSUBMSP
    0U,	// XVRDPI
    0U,	// XVRDPIC
    0U,	// XVRDPIM
    0U,	// XVRDPIP
    0U,	// XVRDPIZ
    0U,	// XVREDP
    0U,	// XVRESP
    0U,	// XVRSPI
    0U,	// XVRSPIC
    0U,	// XVRSPIM
    0U,	// XVRSPIP
    0U,	// XVRSPIZ
    0U,	// XVRSQRTEDP
    0U,	// XVRSQRTESP
    0U,	// XVSQRTDP
    0U,	// XVSQRTSP
    140U,	// XVSUBDP
    140U,	// XVSUBSP
    140U,	// XVTDIVDP
    140U,	// XVTDIVSP
    0U,	// XVTLSBB
    0U,	// XVTSQRTDP
    0U,	// XVTSQRTSP
    3U,	// XVTSTDCDP
    3U,	// XVTSTDCSP
    0U,	// XVXEXPDP
    0U,	// XVXEXPSP
    0U,	// XVXSIGDP
    0U,	// XVXSIGSP
    1036U,	// XXBLENDVB
    1036U,	// XXBLENDVD
    1036U,	// XXBLENDVH
    1036U,	// XXBLENDVW
    0U,	// XXBRD
    0U,	// XXBRH
    0U,	// XXBRQ
    0U,	// XXBRW
    9228U,	// XXEVAL
    60U,	// XXEXTRACTUW
    64U,	// XXGENPCVBM
    64U,	// XXGENPCVDM
    64U,	// XXGENPCVHM
    64U,	// XXGENPCVWM
    3U,	// XXINSERTW
    140U,	// XXLAND
    140U,	// XXLANDC
    140U,	// XXLEQV
    24U,	// XXLEQVOnes
    140U,	// XXLNAND
    140U,	// XXLNOR
    140U,	// XXLOR
    140U,	// XXLORC
    140U,	// XXLORf
    140U,	// XXLXOR
    24U,	// XXLXORdpz
    24U,	// XXLXORspz
    24U,	// XXLXORz
    0U,	// XXMFACC
    140U,	// XXMRGHW
    140U,	// XXMRGLW
    0U,	// XXMTACC
    140U,	// XXPERM
    4108U,	// XXPERMDI
    4636U,	// XXPERMDIs
    140U,	// XXPERMR
    9228U,	// XXPERMX
    1036U,	// XXSEL
    0U,	// XXSETACCZ
    4108U,	// XXSLDWI
    4636U,	// XXSLDWIs
    0U,	// XXSPLTI32DX
    0U,	// XXSPLTIB
    0U,	// XXSPLTIDP
    0U,	// XXSPLTIW
    68U,	// XXSPLTW
    68U,	// XXSPLTWs
    72U,	// gBC
    76U,	// gBCA
    0U,	// gBCAat
    140U,	// gBCCTR
    140U,	// gBCCTRL
    72U,	// gBCL
    76U,	// gBCLA
    0U,	// gBCLAat
    140U,	// gBCLR
    140U,	// gBCLRL
    0U,	// gBCLat
    0U,	// gBCat
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_INSTR_REF
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// BUILD_UACC
    0U,	// CFENCE8
    0U,	// CLRLSLDI
    0U,	// CLRLSLDI_rec
    0U,	// CLRLSLWI
    0U,	// CLRLSLWI_rec
    0U,	// CLRRDI
    0U,	// CLRRDI_rec
    0U,	// CLRRWI
    0U,	// CLRRWI_rec
    0U,	// CP_COPY_FIRST
    0U,	// CP_COPYx
    0U,	// CP_PASTE_LAST
    0U,	// CP_PASTEx
    0U,	// DCBFL
    0U,	// DCBFLP
    0U,	// DCBFx
    0U,	// DCBTCT
    0U,	// DCBTDS
    0U,	// DCBTSTCT
    0U,	// DCBTSTDS
    0U,	// DCBTSTT
    0U,	// DCBTSTx
    0U,	// DCBTT
    0U,	// DCBTx
    0U,	// DFLOADf32
    0U,	// DFLOADf64
    0U,	// DFSTOREf32
    0U,	// DFSTOREf64
    0U,	// EXTLDI
    0U,	// EXTLDI_rec
    0U,	// EXTLWI
    0U,	// EXTLWI_rec
    0U,	// EXTRDI
    0U,	// EXTRDI_rec
    0U,	// EXTRWI
    0U,	// EXTRWI_rec
    0U,	// INSLWI
    0U,	// INSLWI_rec
    0U,	// INSRDI
    0U,	// INSRDI_rec
    0U,	// INSRWI
    0U,	// INSRWI_rec
    0U,	// KILL_PAIR
    0U,	// LAx
    0U,	// LIWAX
    0U,	// LIWZX
    0U,	// RLWIMIbm
    0U,	// RLWIMIbm_rec
    0U,	// RLWINMbm
    0U,	// RLWINMbm_rec
    0U,	// RLWNMbm
    0U,	// RLWNMbm_rec
    0U,	// ROTRDI
    0U,	// ROTRDI_rec
    0U,	// ROTRWI
    0U,	// ROTRWI_rec
    0U,	// SLDI
    0U,	// SLDI_rec
    0U,	// SLWI
    0U,	// SLWI_rec
    0U,	// SPILLTOVSR_LD
    0U,	// SPILLTOVSR_LDX
    0U,	// SPILLTOVSR_ST
    0U,	// SPILLTOVSR_STX
    0U,	// SRDI
    0U,	// SRDI_rec
    0U,	// SRWI
    0U,	// SRWI_rec
    0U,	// STIWX
    0U,	// SUBI
    0U,	// SUBIC
    0U,	// SUBIC_rec
    0U,	// SUBIS
    0U,	// SUBPCIS
    0U,	// XFLOADf32
    0U,	// XFLOADf64
    0U,	// XFSTOREf32
    0U,	// XFSTOREf64
    0U,	// ADD4
    0U,	// ADD4O
    0U,	// ADD4O_rec
    0U,	// ADD4TLS
    0U,	// ADD4_rec
    0U,	// ADD8
    0U,	// ADD8O
    0U,	// ADD8O_rec
    0U,	// ADD8TLS
    0U,	// ADD8TLS_
    0U,	// ADD8_rec
    0U,	// ADDC
    0U,	// ADDC8
    0U,	// ADDC8O
    0U,	// ADDC8O_rec
    0U,	// ADDC8_rec
    0U,	// ADDCO
    0U,	// ADDCO_rec
    0U,	// ADDC_rec
    0U,	// ADDE
    0U,	// ADDE8
    0U,	// ADDE8O
    0U,	// ADDE8O_rec
    0U,	// ADDE8_rec
    0U,	// ADDEO
    0U,	// ADDEO_rec
    0U,	// ADDE_rec
    0U,	// ADDI
    0U,	// ADDI8
    0U,	// ADDIC
    0U,	// ADDIC8
    0U,	// ADDIC_rec
    0U,	// ADDIS
    0U,	// ADDIS8
    0U,	// ADDISdtprelHA
    0U,	// ADDISdtprelHA32
    0U,	// ADDISgotTprelHA
    0U,	// ADDIStlsgdHA
    0U,	// ADDIStlsldHA
    0U,	// ADDIStocHA
    0U,	// ADDIStocHA8
    0U,	// ADDIdtprelL
    0U,	// ADDIdtprelL32
    0U,	// ADDItlsgdL
    0U,	// ADDItlsgdL32
    0U,	// ADDItlsgdLADDR
    0U,	// ADDItlsgdLADDR32
    0U,	// ADDItlsldL
    0U,	// ADDItlsldL32
    0U,	// ADDItlsldLADDR
    0U,	// ADDItlsldLADDR32
    0U,	// ADDItocL
    0U,	// ADDME
    0U,	// ADDME8
    0U,	// ADDME8O
    0U,	// ADDME8O_rec
    0U,	// ADDME8_rec
    0U,	// ADDMEO
    0U,	// ADDMEO_rec
    0U,	// ADDME_rec
    0U,	// ADDPCIS
    0U,	// ADDZE
    0U,	// ADDZE8
    0U,	// ADDZE8O
    0U,	// ADDZE8O_rec
    0U,	// ADDZE8_rec
    0U,	// ADDZEO
    0U,	// ADDZEO_rec
    0U,	// ADDZE_rec
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND
    0U,	// AND8
    0U,	// AND8_rec
    0U,	// ANDC
    0U,	// ANDC8
    0U,	// ANDC8_rec
    0U,	// ANDC_rec
    0U,	// ANDI8_rec
    0U,	// ANDIS8_rec
    0U,	// ANDIS_rec
    0U,	// ANDI_rec
    0U,	// ANDI_rec_1_EQ_BIT
    0U,	// ANDI_rec_1_EQ_BIT8
    0U,	// ANDI_rec_1_GT_BIT
    0U,	// ANDI_rec_1_GT_BIT8
    0U,	// AND_rec
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATTN
    0U,	// B
    0U,	// BA
    0U,	// BC
    0U,	// BCC
    0U,	// BCCA
    0U,	// BCCCTR
    0U,	// BCCCTR8
    0U,	// BCCCTRL
    0U,	// BCCCTRL8
    0U,	// BCCL
    0U,	// BCCLA
    0U,	// BCCLR
    0U,	// BCCLRL
    0U,	// BCCTR
    0U,	// BCCTR8
    0U,	// BCCTR8n
    0U,	// BCCTRL
    0U,	// BCCTRL8
    0U,	// BCCTRL8n
    0U,	// BCCTRLn
    0U,	// BCCTRn
    0U,	// BCDCFN_rec
    0U,	// BCDCFSQ_rec
    0U,	// BCDCFZ_rec
    0U,	// BCDCPSGN_rec
    0U,	// BCDCTN_rec
    0U,	// BCDCTSQ_rec
    0U,	// BCDCTZ_rec
    0U,	// BCDSETSGN_rec
    0U,	// BCDSR_rec
    0U,	// BCDS_rec
    0U,	// BCDTRUNC_rec
    0U,	// BCDUS_rec
    0U,	// BCDUTRUNC_rec
    0U,	// BCL
    0U,	// BCLR
    0U,	// BCLRL
    0U,	// BCLRLn
    0U,	// BCLRn
    0U,	// BCLalways
    0U,	// BCLn
    0U,	// BCTR
    0U,	// BCTR8
    0U,	// BCTRL
    0U,	// BCTRL8
    0U,	// BCTRL8_LDinto_toc
    0U,	// BCTRL_LWZinto_toc
    0U,	// BCn
    0U,	// BDNZ
    0U,	// BDNZ8
    0U,	// BDNZA
    0U,	// BDNZAm
    0U,	// BDNZAp
    0U,	// BDNZL
    0U,	// BDNZLA
    0U,	// BDNZLAm
    0U,	// BDNZLAp
    0U,	// BDNZLR
    0U,	// BDNZLR8
    0U,	// BDNZLRL
    0U,	// BDNZLRLm
    0U,	// BDNZLRLp
    0U,	// BDNZLRm
    0U,	// BDNZLRp
    0U,	// BDNZLm
    0U,	// BDNZLp
    0U,	// BDNZm
    0U,	// BDNZp
    0U,	// BDZ
    0U,	// BDZ8
    0U,	// BDZA
    0U,	// BDZAm
    0U,	// BDZAp
    0U,	// BDZL
    0U,	// BDZLA
    0U,	// BDZLAm
    0U,	// BDZLAp
    0U,	// BDZLR
    0U,	// BDZLR8
    0U,	// BDZLRL
    0U,	// BDZLRLm
    0U,	// BDZLRLp
    0U,	// BDZLRm
    0U,	// BDZLRp
    0U,	// BDZLm
    0U,	// BDZLp
    0U,	// BDZm
    0U,	// BDZp
    0U,	// BL
    0U,	// BL8
    0U,	// BL8_NOP
    0U,	// BL8_NOP_TLS
    0U,	// BL8_NOTOC
    0U,	// BL8_NOTOC_TLS
    0U,	// BL8_TLS
    0U,	// BL8_TLS_
    0U,	// BLA
    0U,	// BLA8
    0U,	// BLA8_NOP
    0U,	// BLR
    0U,	// BLR8
    0U,	// BLRL
    0U,	// BL_NOP
    0U,	// BL_TLS
    0U,	// BPERMD
    0U,	// BRINC
    0U,	// CFUGED
    0U,	// CLRBHRB
    0U,	// CMPB
    0U,	// CMPB8
    0U,	// CMPD
    0U,	// CMPDI
    0U,	// CMPEQB
    0U,	// CMPLD
    0U,	// CMPLDI
    0U,	// CMPLW
    0U,	// CMPLWI
    0U,	// CMPRB
    0U,	// CMPRB8
    0U,	// CMPW
    0U,	// CMPWI
    0U,	// CNTLZD
    0U,	// CNTLZDM
    0U,	// CNTLZD_rec
    0U,	// CNTLZW
    0U,	// CNTLZW8
    0U,	// CNTLZW8_rec
    0U,	// CNTLZW_rec
    0U,	// CNTTZD
    0U,	// CNTTZDM
    0U,	// CNTTZD_rec
    0U,	// CNTTZW
    0U,	// CNTTZW8
    0U,	// CNTTZW8_rec
    0U,	// CNTTZW_rec
    0U,	// CP_ABORT
    0U,	// CP_COPY
    0U,	// CP_COPY8
    0U,	// CP_PASTE
    0U,	// CP_PASTE8
    0U,	// CP_PASTE8_rec
    0U,	// CP_PASTE_rec
    0U,	// CR6SET
    0U,	// CR6UNSET
    0U,	// CRAND
    0U,	// CRANDC
    0U,	// CREQV
    0U,	// CRNAND
    0U,	// CRNOR
    0U,	// CROR
    0U,	// CRORC
    0U,	// CRSET
    0U,	// CRUNSET
    0U,	// CRXOR
    0U,	// CTRL_DEP
    0U,	// DARN
    0U,	// DCBA
    0U,	// DCBF
    0U,	// DCBFEP
    0U,	// DCBI
    0U,	// DCBST
    0U,	// DCBSTEP
    0U,	// DCBT
    0U,	// DCBTEP
    0U,	// DCBTST
    0U,	// DCBTSTEP
    0U,	// DCBZ
    0U,	// DCBZEP
    0U,	// DCBZL
    0U,	// DCBZLEP
    0U,	// DCBZ_L
    0U,	// DCCCI
    0U,	// DIVD
    0U,	// DIVDE
    0U,	// DIVDEO
    0U,	// DIVDEO_rec
    0U,	// DIVDEU
    0U,	// DIVDEUO
    0U,	// DIVDEUO_rec
    0U,	// DIVDEU_rec
    0U,	// DIVDE_rec
    0U,	// DIVDO
    0U,	// DIVDO_rec
    0U,	// DIVDU
    0U,	// DIVDUO
    0U,	// DIVDUO_rec
    0U,	// DIVDU_rec
    0U,	// DIVD_rec
    0U,	// DIVW
    0U,	// DIVWE
    0U,	// DIVWEO
    0U,	// DIVWEO_rec
    0U,	// DIVWEU
    0U,	// DIVWEUO
    0U,	// DIVWEUO_rec
    0U,	// DIVWEU_rec
    0U,	// DIVWE_rec
    0U,	// DIVWO
    0U,	// DIVWO_rec
    0U,	// DIVWU
    0U,	// DIVWUO
    0U,	// DIVWUO_rec
    0U,	// DIVWU_rec
    0U,	// DIVW_rec
    0U,	// DSS
    0U,	// DSSALL
    0U,	// DST
    0U,	// DST64
    0U,	// DSTST
    0U,	// DSTST64
    0U,	// DSTSTT
    0U,	// DSTSTT64
    0U,	// DSTT
    0U,	// DSTT64
    0U,	// DYNALLOC
    0U,	// DYNALLOC8
    0U,	// DYNAREAOFFSET
    0U,	// DYNAREAOFFSET8
    0U,	// EFDABS
    0U,	// EFDADD
    0U,	// EFDCFS
    0U,	// EFDCFSF
    0U,	// EFDCFSI
    0U,	// EFDCFSID
    0U,	// EFDCFUF
    0U,	// EFDCFUI
    0U,	// EFDCFUID
    0U,	// EFDCMPEQ
    0U,	// EFDCMPGT
    0U,	// EFDCMPLT
    0U,	// EFDCTSF
    0U,	// EFDCTSI
    0U,	// EFDCTSIDZ
    0U,	// EFDCTSIZ
    0U,	// EFDCTUF
    0U,	// EFDCTUI
    0U,	// EFDCTUIDZ
    0U,	// EFDCTUIZ
    0U,	// EFDDIV
    0U,	// EFDMUL
    0U,	// EFDNABS
    0U,	// EFDNEG
    0U,	// EFDSUB
    0U,	// EFDTSTEQ
    0U,	// EFDTSTGT
    0U,	// EFDTSTLT
    0U,	// EFSABS
    0U,	// EFSADD
    0U,	// EFSCFD
    0U,	// EFSCFSF
    0U,	// EFSCFSI
    0U,	// EFSCFUF
    0U,	// EFSCFUI
    0U,	// EFSCMPEQ
    0U,	// EFSCMPGT
    0U,	// EFSCMPLT
    0U,	// EFSCTSF
    0U,	// EFSCTSI
    0U,	// EFSCTSIZ
    0U,	// EFSCTUF
    0U,	// EFSCTUI
    0U,	// EFSCTUIZ
    0U,	// EFSDIV
    0U,	// EFSMUL
    0U,	// EFSNABS
    0U,	// EFSNEG
    0U,	// EFSSUB
    0U,	// EFSTSTEQ
    0U,	// EFSTSTGT
    0U,	// EFSTSTLT
    0U,	// EH_SjLj_LongJmp32
    0U,	// EH_SjLj_LongJmp64
    0U,	// EH_SjLj_SetJmp32
    0U,	// EH_SjLj_SetJmp64
    0U,	// EH_SjLj_Setup
    0U,	// EQV
    0U,	// EQV8
    0U,	// EQV8_rec
    0U,	// EQV_rec
    0U,	// EVABS
    0U,	// EVADDIW
    0U,	// EVADDSMIAAW
    0U,	// EVADDSSIAAW
    0U,	// EVADDUMIAAW
    0U,	// EVADDUSIAAW
    0U,	// EVADDW
    0U,	// EVAND
    0U,	// EVANDC
    0U,	// EVCMPEQ
    0U,	// EVCMPGTS
    0U,	// EVCMPGTU
    0U,	// EVCMPLTS
    0U,	// EVCMPLTU
    0U,	// EVCNTLSW
    0U,	// EVCNTLZW
    0U,	// EVDIVWS
    0U,	// EVDIVWU
    0U,	// EVEQV
    0U,	// EVEXTSB
    0U,	// EVEXTSH
    0U,	// EVFSABS
    0U,	// EVFSADD
    0U,	// EVFSCFSF
    0U,	// EVFSCFSI
    0U,	// EVFSCFUF
    0U,	// EVFSCFUI
    0U,	// EVFSCMPEQ
    0U,	// EVFSCMPGT
    0U,	// EVFSCMPLT
    0U,	// EVFSCTSF
    0U,	// EVFSCTSI
    0U,	// EVFSCTSIZ
    0U,	// EVFSCTUF
    0U,	// EVFSCTUI
    0U,	// EVFSCTUIZ
    0U,	// EVFSDIV
    0U,	// EVFSMUL
    0U,	// EVFSNABS
    0U,	// EVFSNEG
    0U,	// EVFSSUB
    0U,	// EVFSTSTEQ
    0U,	// EVFSTSTGT
    0U,	// EVFSTSTLT
    0U,	// EVLDD
    0U,	// EVLDDX
    0U,	// EVLDH
    0U,	// EVLDHX
    0U,	// EVLDW
    0U,	// EVLDWX
    0U,	// EVLHHESPLAT
    0U,	// EVLHHESPLATX
    0U,	// EVLHHOSSPLAT
    0U,	// EVLHHOSSPLATX
    0U,	// EVLHHOUSPLAT
    0U,	// EVLHHOUSPLATX
    0U,	// EVLWHE
    0U,	// EVLWHEX
    0U,	// EVLWHOS
    0U,	// EVLWHOSX
    0U,	// EVLWHOU
    0U,	// EVLWHOUX
    0U,	// EVLWHSPLAT
    0U,	// EVLWHSPLATX
    0U,	// EVLWWSPLAT
    0U,	// EVLWWSPLATX
    0U,	// EVMERGEHI
    0U,	// EVMERGEHILO
    0U,	// EVMERGELO
    0U,	// EVMERGELOHI
    0U,	// EVMHEGSMFAA
    0U,	// EVMHEGSMFAN
    0U,	// EVMHEGSMIAA
    0U,	// EVMHEGSMIAN
    0U,	// EVMHEGUMIAA
    0U,	// EVMHEGUMIAN
    0U,	// EVMHESMF
    0U,	// EVMHESMFA
    0U,	// EVMHESMFAAW
    0U,	// EVMHESMFANW
    0U,	// EVMHESMI
    0U,	// EVMHESMIA
    0U,	// EVMHESMIAAW
    0U,	// EVMHESMIANW
    0U,	// EVMHESSF
    0U,	// EVMHESSFA
    0U,	// EVMHESSFAAW
    0U,	// EVMHESSFANW
    0U,	// EVMHESSIAAW
    0U,	// EVMHESSIANW
    0U,	// EVMHEUMI
    0U,	// EVMHEUMIA
    0U,	// EVMHEUMIAAW
    0U,	// EVMHEUMIANW
    0U,	// EVMHEUSIAAW
    0U,	// EVMHEUSIANW
    0U,	// EVMHOGSMFAA
    0U,	// EVMHOGSMFAN
    0U,	// EVMHOGSMIAA
    0U,	// EVMHOGSMIAN
    0U,	// EVMHOGUMIAA
    0U,	// EVMHOGUMIAN
    0U,	// EVMHOSMF
    0U,	// EVMHOSMFA
    0U,	// EVMHOSMFAAW
    0U,	// EVMHOSMFANW
    0U,	// EVMHOSMI
    0U,	// EVMHOSMIA
    0U,	// EVMHOSMIAAW
    0U,	// EVMHOSMIANW
    0U,	// EVMHOSSF
    0U,	// EVMHOSSFA
    0U,	// EVMHOSSFAAW
    0U,	// EVMHOSSFANW
    0U,	// EVMHOSSIAAW
    0U,	// EVMHOSSIANW
    0U,	// EVMHOUMI
    0U,	// EVMHOUMIA
    0U,	// EVMHOUMIAAW
    0U,	// EVMHOUMIANW
    0U,	// EVMHOUSIAAW
    0U,	// EVMHOUSIANW
    0U,	// EVMRA
    0U,	// EVMWHSMF
    0U,	// EVMWHSMFA
    0U,	// EVMWHSMI
    0U,	// EVMWHSMIA
    0U,	// EVMWHSSF
    0U,	// EVMWHSSFA
    0U,	// EVMWHUMI
    0U,	// EVMWHUMIA
    0U,	// EVMWLSMIAAW
    0U,	// EVMWLSMIANW
    0U,	// EVMWLSSIAAW
    0U,	// EVMWLSSIANW
    0U,	// EVMWLUMI
    0U,	// EVMWLUMIA
    0U,	// EVMWLUMIAAW
    0U,	// EVMWLUMIANW
    0U,	// EVMWLUSIAAW
    0U,	// EVMWLUSIANW
    0U,	// EVMWSMF
    0U,	// EVMWSMFA
    0U,	// EVMWSMFAA
    0U,	// EVMWSMFAN
    0U,	// EVMWSMI
    0U,	// EVMWSMIA
    0U,	// EVMWSMIAA
    0U,	// EVMWSMIAN
    0U,	// EVMWSSF
    0U,	// EVMWSSFA
    0U,	// EVMWSSFAA
    0U,	// EVMWSSFAN
    0U,	// EVMWUMI
    0U,	// EVMWUMIA
    0U,	// EVMWUMIAA
    0U,	// EVMWUMIAN
    0U,	// EVNAND
    0U,	// EVNEG
    0U,	// EVNOR
    0U,	// EVOR
    0U,	// EVORC
    0U,	// EVRLW
    0U,	// EVRLWI
    0U,	// EVRNDW
    0U,	// EVSEL
    0U,	// EVSLW
    0U,	// EVSLWI
    0U,	// EVSPLATFI
    0U,	// EVSPLATI
    0U,	// EVSRWIS
    0U,	// EVSRWIU
    0U,	// EVSRWS
    0U,	// EVSRWU
    0U,	// EVSTDD
    0U,	// EVSTDDX
    0U,	// EVSTDH
    0U,	// EVSTDHX
    0U,	// EVSTDW
    0U,	// EVSTDWX
    0U,	// EVSTWHE
    0U,	// EVSTWHEX
    0U,	// EVSTWHO
    0U,	// EVSTWHOX
    0U,	// EVSTWWE
    0U,	// EVSTWWEX
    0U,	// EVSTWWO
    0U,	// EVSTWWOX
    0U,	// EVSUBFSMIAAW
    0U,	// EVSUBFSSIAAW
    0U,	// EVSUBFUMIAAW
    0U,	// EVSUBFUSIAAW
    0U,	// EVSUBFW
    0U,	// EVSUBIFW
    0U,	// EVXOR
    0U,	// EXTSB
    0U,	// EXTSB8
    0U,	// EXTSB8_32_64
    0U,	// EXTSB8_rec
    0U,	// EXTSB_rec
    0U,	// EXTSH
    0U,	// EXTSH8
    0U,	// EXTSH8_32_64
    0U,	// EXTSH8_rec
    0U,	// EXTSH_rec
    0U,	// EXTSW
    0U,	// EXTSWSLI
    0U,	// EXTSWSLI_32_64
    0U,	// EXTSWSLI_32_64_rec
    0U,	// EXTSWSLI_rec
    0U,	// EXTSW_32
    0U,	// EXTSW_32_64
    0U,	// EXTSW_32_64_rec
    0U,	// EXTSW_rec
    0U,	// EnforceIEIO
    0U,	// FABSD
    0U,	// FABSD_rec
    0U,	// FABSS
    0U,	// FABSS_rec
    0U,	// FADD
    0U,	// FADDS
    0U,	// FADDS_rec
    0U,	// FADD_rec
    0U,	// FADDrtz
    0U,	// FCFID
    0U,	// FCFIDS
    0U,	// FCFIDS_rec
    0U,	// FCFIDU
    0U,	// FCFIDUS
    0U,	// FCFIDUS_rec
    0U,	// FCFIDU_rec
    0U,	// FCFID_rec
    0U,	// FCMPOD
    0U,	// FCMPOS
    0U,	// FCMPUD
    0U,	// FCMPUS
    0U,	// FCPSGND
    0U,	// FCPSGND_rec
    0U,	// FCPSGNS
    0U,	// FCPSGNS_rec
    0U,	// FCTID
    0U,	// FCTIDU
    0U,	// FCTIDUZ
    0U,	// FCTIDUZ_rec
    0U,	// FCTIDU_rec
    0U,	// FCTIDZ
    0U,	// FCTIDZ_rec
    0U,	// FCTID_rec
    0U,	// FCTIW
    0U,	// FCTIWU
    0U,	// FCTIWUZ
    0U,	// FCTIWUZ_rec
    0U,	// FCTIWU_rec
    0U,	// FCTIWZ
    0U,	// FCTIWZ_rec
    0U,	// FCTIW_rec
    0U,	// FDIV
    0U,	// FDIVS
    0U,	// FDIVS_rec
    0U,	// FDIV_rec
    0U,	// FMADD
    0U,	// FMADDS
    0U,	// FMADDS_rec
    0U,	// FMADD_rec
    0U,	// FMR
    0U,	// FMR_rec
    0U,	// FMSUB
    0U,	// FMSUBS
    0U,	// FMSUBS_rec
    0U,	// FMSUB_rec
    0U,	// FMUL
    0U,	// FMULS
    0U,	// FMULS_rec
    0U,	// FMUL_rec
    0U,	// FNABSD
    0U,	// FNABSD_rec
    0U,	// FNABSS
    0U,	// FNABSS_rec
    0U,	// FNEGD
    0U,	// FNEGD_rec
    0U,	// FNEGS
    0U,	// FNEGS_rec
    0U,	// FNMADD
    0U,	// FNMADDS
    0U,	// FNMADDS_rec
    0U,	// FNMADD_rec
    0U,	// FNMSUB
    0U,	// FNMSUBS
    0U,	// FNMSUBS_rec
    0U,	// FNMSUB_rec
    0U,	// FRE
    0U,	// FRES
    0U,	// FRES_rec
    0U,	// FRE_rec
    0U,	// FRIMD
    0U,	// FRIMD_rec
    0U,	// FRIMS
    0U,	// FRIMS_rec
    0U,	// FRIND
    0U,	// FRIND_rec
    0U,	// FRINS
    0U,	// FRINS_rec
    0U,	// FRIPD
    0U,	// FRIPD_rec
    0U,	// FRIPS
    0U,	// FRIPS_rec
    0U,	// FRIZD
    0U,	// FRIZD_rec
    0U,	// FRIZS
    0U,	// FRIZS_rec
    0U,	// FRSP
    0U,	// FRSP_rec
    0U,	// FRSQRTE
    0U,	// FRSQRTES
    0U,	// FRSQRTES_rec
    0U,	// FRSQRTE_rec
    0U,	// FSELD
    0U,	// FSELD_rec
    0U,	// FSELS
    0U,	// FSELS_rec
    0U,	// FSQRT
    0U,	// FSQRTS
    0U,	// FSQRTS_rec
    0U,	// FSQRT_rec
    0U,	// FSUB
    0U,	// FSUBS
    0U,	// FSUBS_rec
    0U,	// FSUB_rec
    0U,	// FTDIV
    0U,	// FTSQRT
    0U,	// GETtlsADDR
    0U,	// GETtlsADDR32
    0U,	// GETtlsldADDR
    0U,	// GETtlsldADDR32
    0U,	// HRFID
    0U,	// ICBI
    0U,	// ICBIEP
    0U,	// ICBLC
    0U,	// ICBLQ
    0U,	// ICBT
    0U,	// ICBTLS
    0U,	// ICCCI
    0U,	// ISEL
    0U,	// ISEL8
    0U,	// ISYNC
    0U,	// LA
    0U,	// LBARX
    0U,	// LBARXL
    0U,	// LBEPX
    0U,	// LBZ
    0U,	// LBZ8
    0U,	// LBZCIX
    0U,	// LBZU
    0U,	// LBZU8
    0U,	// LBZUX
    0U,	// LBZUX8
    0U,	// LBZX
    0U,	// LBZX8
    0U,	// LBZXTLS
    0U,	// LBZXTLS_
    0U,	// LBZXTLS_32
    0U,	// LD
    0U,	// LDARX
    0U,	// LDARXL
    0U,	// LDAT
    0U,	// LDBRX
    0U,	// LDCIX
    0U,	// LDMX
    0U,	// LDU
    0U,	// LDUX
    0U,	// LDX
    0U,	// LDXTLS
    0U,	// LDXTLS_
    0U,	// LDgotTprelL
    0U,	// LDgotTprelL32
    0U,	// LDtoc
    0U,	// LDtocBA
    0U,	// LDtocCPT
    0U,	// LDtocJTI
    0U,	// LDtocL
    0U,	// LFD
    0U,	// LFDEPX
    0U,	// LFDU
    0U,	// LFDUX
    0U,	// LFDX
    0U,	// LFIWAX
    0U,	// LFIWZX
    0U,	// LFS
    0U,	// LFSU
    0U,	// LFSUX
    0U,	// LFSX
    0U,	// LHA
    0U,	// LHA8
    0U,	// LHARX
    0U,	// LHARXL
    0U,	// LHAU
    0U,	// LHAU8
    0U,	// LHAUX
    0U,	// LHAUX8
    0U,	// LHAX
    0U,	// LHAX8
    0U,	// LHBRX
    0U,	// LHBRX8
    0U,	// LHEPX
    0U,	// LHZ
    0U,	// LHZ8
    0U,	// LHZCIX
    0U,	// LHZU
    0U,	// LHZU8
    0U,	// LHZUX
    0U,	// LHZUX8
    0U,	// LHZX
    0U,	// LHZX8
    0U,	// LHZXTLS
    0U,	// LHZXTLS_
    0U,	// LHZXTLS_32
    0U,	// LI
    0U,	// LI8
    0U,	// LIS
    0U,	// LIS8
    0U,	// LMW
    0U,	// LSWI
    0U,	// LVEBX
    0U,	// LVEHX
    0U,	// LVEWX
    0U,	// LVSL
    0U,	// LVSR
    0U,	// LVX
    0U,	// LVXL
    0U,	// LWA
    0U,	// LWARX
    0U,	// LWARXL
    0U,	// LWAT
    0U,	// LWAUX
    0U,	// LWAX
    0U,	// LWAX_32
    0U,	// LWA_32
    0U,	// LWBRX
    0U,	// LWBRX8
    0U,	// LWEPX
    0U,	// LWZ
    0U,	// LWZ8
    0U,	// LWZCIX
    0U,	// LWZU
    0U,	// LWZU8
    0U,	// LWZUX
    0U,	// LWZUX8
    0U,	// LWZX
    0U,	// LWZX8
    0U,	// LWZXTLS
    0U,	// LWZXTLS_
    0U,	// LWZXTLS_32
    0U,	// LWZtoc
    0U,	// LWZtocL
    0U,	// LXSD
    0U,	// LXSDX
    0U,	// LXSIBZX
    0U,	// LXSIHZX
    0U,	// LXSIWAX
    0U,	// LXSIWZX
    0U,	// LXSSP
    0U,	// LXSSPX
    0U,	// LXV
    0U,	// LXVB16X
    0U,	// LXVD2X
    0U,	// LXVDSX
    0U,	// LXVH8X
    0U,	// LXVL
    0U,	// LXVLL
    0U,	// LXVP
    0U,	// LXVPX
    0U,	// LXVRBX
    0U,	// LXVRDX
    0U,	// LXVRHX
    0U,	// LXVRWX
    0U,	// LXVW4X
    0U,	// LXVWSX
    0U,	// LXVX
    0U,	// MADDHD
    0U,	// MADDHDU
    0U,	// MADDLD
    0U,	// MADDLD8
    0U,	// MBAR
    0U,	// MCRF
    0U,	// MCRFS
    0U,	// MCRXRX
    0U,	// MFBHRBE
    0U,	// MFCR
    0U,	// MFCR8
    0U,	// MFCTR
    0U,	// MFCTR8
    0U,	// MFDCR
    0U,	// MFFS
    0U,	// MFFSCDRN
    0U,	// MFFSCDRNI
    0U,	// MFFSCE
    0U,	// MFFSCRN
    0U,	// MFFSCRNI
    0U,	// MFFSL
    0U,	// MFFS_rec
    0U,	// MFLR
    0U,	// MFLR8
    0U,	// MFMSR
    0U,	// MFOCRF
    0U,	// MFOCRF8
    0U,	// MFPMR
    0U,	// MFSPR
    0U,	// MFSPR8
    0U,	// MFSR
    0U,	// MFSRIN
    0U,	// MFTB
    0U,	// MFTB8
    0U,	// MFVRD
    0U,	// MFVRSAVE
    0U,	// MFVRSAVEv
    0U,	// MFVRWZ
    0U,	// MFVSCR
    0U,	// MFVSRD
    0U,	// MFVSRLD
    0U,	// MFVSRWZ
    0U,	// MODSD
    0U,	// MODSW
    0U,	// MODUD
    0U,	// MODUW
    0U,	// MSGSYNC
    0U,	// MSYNC
    0U,	// MTCRF
    0U,	// MTCRF8
    0U,	// MTCTR
    0U,	// MTCTR8
    0U,	// MTCTR8loop
    0U,	// MTCTRloop
    0U,	// MTDCR
    0U,	// MTFSB0
    0U,	// MTFSB1
    0U,	// MTFSF
    0U,	// MTFSFI
    0U,	// MTFSFI_rec
    0U,	// MTFSF_rec
    0U,	// MTFSFb
    0U,	// MTLR
    0U,	// MTLR8
    0U,	// MTMSR
    0U,	// MTMSRD
    0U,	// MTOCRF
    0U,	// MTOCRF8
    0U,	// MTPMR
    0U,	// MTSPR
    0U,	// MTSPR8
    0U,	// MTSR
    0U,	// MTSRIN
    0U,	// MTVRD
    0U,	// MTVRSAVE
    0U,	// MTVRSAVEv
    0U,	// MTVRWA
    0U,	// MTVRWZ
    0U,	// MTVSCR
    0U,	// MTVSRBM
    0U,	// MTVSRBMI
    0U,	// MTVSRD
    0U,	// MTVSRDD
    0U,	// MTVSRDM
    0U,	// MTVSRHM
    0U,	// MTVSRQM
    0U,	// MTVSRWA
    0U,	// MTVSRWM
    0U,	// MTVSRWS
    0U,	// MTVSRWZ
    0U,	// MULHD
    0U,	// MULHDU
    0U,	// MULHDU_rec
    0U,	// MULHD_rec
    0U,	// MULHW
    0U,	// MULHWU
    0U,	// MULHWU_rec
    0U,	// MULHW_rec
    0U,	// MULLD
    0U,	// MULLDO
    0U,	// MULLDO_rec
    0U,	// MULLD_rec
    0U,	// MULLI
    0U,	// MULLI8
    0U,	// MULLW
    0U,	// MULLWO
    0U,	// MULLWO_rec
    0U,	// MULLW_rec
    0U,	// MoveGOTtoLR
    0U,	// MovePCtoLR
    0U,	// MovePCtoLR8
    0U,	// NAND
    0U,	// NAND8
    0U,	// NAND8_rec
    0U,	// NAND_rec
    0U,	// NAP
    0U,	// NEG
    0U,	// NEG8
    0U,	// NEG8O
    0U,	// NEG8O_rec
    0U,	// NEG8_rec
    0U,	// NEGO
    0U,	// NEGO_rec
    0U,	// NEG_rec
    0U,	// NOP
    0U,	// NOP_GT_PWR6
    0U,	// NOP_GT_PWR7
    0U,	// NOR
    0U,	// NOR8
    0U,	// NOR8_rec
    0U,	// NOR_rec
    0U,	// OR
    0U,	// OR8
    0U,	// OR8_rec
    0U,	// ORC
    0U,	// ORC8
    0U,	// ORC8_rec
    0U,	// ORC_rec
    0U,	// ORI
    0U,	// ORI8
    0U,	// ORIS
    0U,	// ORIS8
    0U,	// OR_rec
    0U,	// PADDI
    0U,	// PADDI8
    0U,	// PADDI8pc
    0U,	// PADDIdtprel
    0U,	// PADDIpc
    0U,	// PDEPD
    0U,	// PEXTD
    0U,	// PLBZ
    0U,	// PLBZ8
    0U,	// PLBZ8pc
    0U,	// PLBZpc
    0U,	// PLD
    0U,	// PLDpc
    0U,	// PLFD
    0U,	// PLFDpc
    0U,	// PLFS
    0U,	// PLFSpc
    0U,	// PLHA
    0U,	// PLHA8
    0U,	// PLHA8pc
    0U,	// PLHApc
    0U,	// PLHZ
    0U,	// PLHZ8
    0U,	// PLHZ8pc
    0U,	// PLHZpc
    0U,	// PLI
    0U,	// PLI8
    0U,	// PLWA
    0U,	// PLWA8
    0U,	// PLWA8pc
    0U,	// PLWApc
    0U,	// PLWZ
    0U,	// PLWZ8
    0U,	// PLWZ8pc
    0U,	// PLWZpc
    0U,	// PLXSD
    0U,	// PLXSDpc
    0U,	// PLXSSP
    0U,	// PLXSSPpc
    0U,	// PLXV
    0U,	// PLXVP
    0U,	// PLXVPpc
    0U,	// PLXVpc
    0U,	// PMXVBF16GER2
    0U,	// PMXVBF16GER2NN
    0U,	// PMXVBF16GER2NP
    0U,	// PMXVBF16GER2PN
    0U,	// PMXVBF16GER2PP
    0U,	// PMXVF16GER2
    0U,	// PMXVF16GER2NN
    0U,	// PMXVF16GER2NP
    0U,	// PMXVF16GER2PN
    0U,	// PMXVF16GER2PP
    8U,	// PMXVF32GER
    0U,	// PMXVF32GERNN
    0U,	// PMXVF32GERNP
    0U,	// PMXVF32GERPN
    0U,	// PMXVF32GERPP
    1U,	// PMXVF64GER
    0U,	// PMXVF64GERNN
    0U,	// PMXVF64GERNP
    0U,	// PMXVF64GERPN
    0U,	// PMXVF64GERPP
    0U,	// PMXVI16GER2
    0U,	// PMXVI16GER2PP
    0U,	// PMXVI16GER2S
    0U,	// PMXVI16GER2SPP
    16U,	// PMXVI4GER8
    0U,	// PMXVI4GER8PP
    32U,	// PMXVI8GER4
    0U,	// PMXVI8GER4PP
    0U,	// PMXVI8GER4SPP
    0U,	// POPCNTB
    0U,	// POPCNTD
    0U,	// POPCNTW
    0U,	// PPC32GOT
    0U,	// PPC32PICGOT
    0U,	// PREPARE_PROBED_ALLOCA_32
    0U,	// PREPARE_PROBED_ALLOCA_64
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64
    0U,	// PROBED_ALLOCA_32
    0U,	// PROBED_ALLOCA_64
    0U,	// PROBED_STACKALLOC_32
    0U,	// PROBED_STACKALLOC_64
    0U,	// PSQ_L
    0U,	// PSQ_LU
    0U,	// PSQ_LUX
    0U,	// PSQ_LX
    0U,	// PSQ_ST
    0U,	// PSQ_STU
    0U,	// PSQ_STUX
    0U,	// PSQ_STX
    0U,	// PSTB
    0U,	// PSTB8
    0U,	// PSTB8pc
    0U,	// PSTBpc
    0U,	// PSTD
    0U,	// PSTDpc
    0U,	// PSTFD
    0U,	// PSTFDpc
    0U,	// PSTFS
    0U,	// PSTFSpc
    0U,	// PSTH
    0U,	// PSTH8
    0U,	// PSTH8pc
    0U,	// PSTHpc
    0U,	// PSTW
    0U,	// PSTW8
    0U,	// PSTW8pc
    0U,	// PSTWpc
    0U,	// PSTXSD
    0U,	// PSTXSDpc
    0U,	// PSTXSSP
    0U,	// PSTXSSPpc
    0U,	// PSTXV
    0U,	// PSTXVP
    0U,	// PSTXVPpc
    0U,	// PSTXVpc
    0U,	// PS_ABS
    0U,	// PS_ABS_rec
    0U,	// PS_ADD
    0U,	// PS_ADD_rec
    0U,	// PS_CMPO0
    0U,	// PS_CMPO1
    0U,	// PS_CMPU0
    0U,	// PS_CMPU1
    0U,	// PS_DIV
    0U,	// PS_DIV_rec
    0U,	// PS_MADD
    0U,	// PS_MADDS0
    0U,	// PS_MADDS0_rec
    0U,	// PS_MADDS1
    0U,	// PS_MADDS1_rec
    0U,	// PS_MADD_rec
    0U,	// PS_MERGE00
    0U,	// PS_MERGE00_rec
    0U,	// PS_MERGE01
    0U,	// PS_MERGE01_rec
    0U,	// PS_MERGE10
    0U,	// PS_MERGE10_rec
    0U,	// PS_MERGE11
    0U,	// PS_MERGE11_rec
    0U,	// PS_MR
    0U,	// PS_MR_rec
    0U,	// PS_MSUB
    0U,	// PS_MSUB_rec
    0U,	// PS_MUL
    0U,	// PS_MULS0
    0U,	// PS_MULS0_rec
    0U,	// PS_MULS1
    0U,	// PS_MULS1_rec
    0U,	// PS_MUL_rec
    0U,	// PS_NABS
    0U,	// PS_NABS_rec
    0U,	// PS_NEG
    0U,	// PS_NEG_rec
    0U,	// PS_NMADD
    0U,	// PS_NMADD_rec
    0U,	// PS_NMSUB
    0U,	// PS_NMSUB_rec
    0U,	// PS_RES
    0U,	// PS_RES_rec
    0U,	// PS_RSQRTE
    0U,	// PS_RSQRTE_rec
    0U,	// PS_SEL
    0U,	// PS_SEL_rec
    0U,	// PS_SUB
    0U,	// PS_SUB_rec
    0U,	// PS_SUM0
    0U,	// PS_SUM0_rec
    0U,	// PS_SUM1
    0U,	// PS_SUM1_rec
    0U,	// RESTORE_ACC
    0U,	// RESTORE_CR
    0U,	// RESTORE_CRBIT
    0U,	// RESTORE_UACC
    0U,	// RFCI
    0U,	// RFDI
    0U,	// RFEBB
    0U,	// RFI
    0U,	// RFID
    0U,	// RFMCI
    0U,	// RLDCL
    0U,	// RLDCL_rec
    0U,	// RLDCR
    0U,	// RLDCR_rec
    0U,	// RLDIC
    0U,	// RLDICL
    0U,	// RLDICL_32
    0U,	// RLDICL_32_64
    0U,	// RLDICL_32_rec
    0U,	// RLDICL_rec
    0U,	// RLDICR
    0U,	// RLDICR_32
    0U,	// RLDICR_rec
    0U,	// RLDIC_rec
    0U,	// RLDIMI
    0U,	// RLDIMI_rec
    0U,	// RLWIMI
    0U,	// RLWIMI8
    0U,	// RLWIMI8_rec
    0U,	// RLWIMI_rec
    2U,	// RLWINM
    2U,	// RLWINM8
    2U,	// RLWINM8_rec
    2U,	// RLWINM_rec
    2U,	// RLWNM
    2U,	// RLWNM8
    2U,	// RLWNM8_rec
    2U,	// RLWNM_rec
    0U,	// ReadTB
    0U,	// SC
    0U,	// SELECT_CC_F16
    0U,	// SELECT_CC_F4
    0U,	// SELECT_CC_F8
    0U,	// SELECT_CC_I4
    0U,	// SELECT_CC_I8
    0U,	// SELECT_CC_SPE
    0U,	// SELECT_CC_SPE4
    0U,	// SELECT_CC_VRRC
    0U,	// SELECT_CC_VSFRC
    0U,	// SELECT_CC_VSRC
    0U,	// SELECT_CC_VSSRC
    0U,	// SELECT_F16
    0U,	// SELECT_F4
    0U,	// SELECT_F8
    0U,	// SELECT_I4
    0U,	// SELECT_I8
    0U,	// SELECT_SPE
    0U,	// SELECT_SPE4
    0U,	// SELECT_VRRC
    0U,	// SELECT_VSFRC
    0U,	// SELECT_VSRC
    0U,	// SELECT_VSSRC
    0U,	// SETB
    0U,	// SETB8
    0U,	// SETBC
    0U,	// SETBC8
    0U,	// SETBCR
    0U,	// SETBCR8
    0U,	// SETFLM
    0U,	// SETNBC
    0U,	// SETNBC8
    0U,	// SETNBCR
    0U,	// SETNBCR8
    0U,	// SETRND
    0U,	// SETRNDi
    0U,	// SLBFEE_rec
    0U,	// SLBIA
    0U,	// SLBIE
    0U,	// SLBIEG
    0U,	// SLBMFEE
    0U,	// SLBMFEV
    0U,	// SLBMTE
    0U,	// SLBSYNC
    0U,	// SLD
    0U,	// SLD_rec
    0U,	// SLW
    0U,	// SLW8
    0U,	// SLW8_rec
    0U,	// SLW_rec
    0U,	// SPELWZ
    0U,	// SPELWZX
    0U,	// SPESTW
    0U,	// SPESTWX
    0U,	// SPILL_ACC
    0U,	// SPILL_CR
    0U,	// SPILL_CRBIT
    0U,	// SPILL_UACC
    0U,	// SRAD
    0U,	// SRADI
    0U,	// SRADI_32
    0U,	// SRADI_rec
    0U,	// SRAD_rec
    0U,	// SRAW
    0U,	// SRAWI
    0U,	// SRAWI_rec
    0U,	// SRAW_rec
    0U,	// SRD
    0U,	// SRD_rec
    0U,	// SRW
    0U,	// SRW8
    0U,	// SRW8_rec
    0U,	// SRW_rec
    0U,	// STB
    0U,	// STB8
    0U,	// STBCIX
    0U,	// STBCX
    0U,	// STBEPX
    0U,	// STBU
    0U,	// STBU8
    0U,	// STBUX
    0U,	// STBUX8
    0U,	// STBX
    0U,	// STBX8
    0U,	// STBXTLS
    0U,	// STBXTLS_
    0U,	// STBXTLS_32
    0U,	// STD
    0U,	// STDAT
    0U,	// STDBRX
    0U,	// STDCIX
    0U,	// STDCX
    0U,	// STDU
    0U,	// STDUX
    0U,	// STDX
    0U,	// STDXTLS
    0U,	// STDXTLS_
    0U,	// STFD
    0U,	// STFDEPX
    0U,	// STFDU
    0U,	// STFDUX
    0U,	// STFDX
    0U,	// STFIWX
    0U,	// STFS
    0U,	// STFSU
    0U,	// STFSUX
    0U,	// STFSX
    0U,	// STH
    0U,	// STH8
    0U,	// STHBRX
    0U,	// STHCIX
    0U,	// STHCX
    0U,	// STHEPX
    0U,	// STHU
    0U,	// STHU8
    0U,	// STHUX
    0U,	// STHUX8
    0U,	// STHX
    0U,	// STHX8
    0U,	// STHXTLS
    0U,	// STHXTLS_
    0U,	// STHXTLS_32
    0U,	// STMW
    0U,	// STOP
    0U,	// STSWI
    0U,	// STVEBX
    0U,	// STVEHX
    0U,	// STVEWX
    0U,	// STVX
    0U,	// STVXL
    0U,	// STW
    0U,	// STW8
    0U,	// STWAT
    0U,	// STWBRX
    0U,	// STWCIX
    0U,	// STWCX
    0U,	// STWEPX
    0U,	// STWU
    0U,	// STWU8
    0U,	// STWUX
    0U,	// STWUX8
    0U,	// STWX
    0U,	// STWX8
    0U,	// STWXTLS
    0U,	// STWXTLS_
    0U,	// STWXTLS_32
    0U,	// STXSD
    0U,	// STXSDX
    0U,	// STXSIBX
    0U,	// STXSIBXv
    0U,	// STXSIHX
    0U,	// STXSIHXv
    0U,	// STXSIWX
    0U,	// STXSSP
    0U,	// STXSSPX
    0U,	// STXV
    0U,	// STXVB16X
    0U,	// STXVD2X
    0U,	// STXVH8X
    0U,	// STXVL
    0U,	// STXVLL
    0U,	// STXVP
    0U,	// STXVPX
    0U,	// STXVRBX
    0U,	// STXVRDX
    0U,	// STXVRHX
    0U,	// STXVRWX
    0U,	// STXVW4X
    0U,	// STXVX
    0U,	// SUBF
    0U,	// SUBF8
    0U,	// SUBF8O
    0U,	// SUBF8O_rec
    0U,	// SUBF8_rec
    0U,	// SUBFC
    0U,	// SUBFC8
    0U,	// SUBFC8O
    0U,	// SUBFC8O_rec
    0U,	// SUBFC8_rec
    0U,	// SUBFCO
    0U,	// SUBFCO_rec
    0U,	// SUBFC_rec
    0U,	// SUBFE
    0U,	// SUBFE8
    0U,	// SUBFE8O
    0U,	// SUBFE8O_rec
    0U,	// SUBFE8_rec
    0U,	// SUBFEO
    0U,	// SUBFEO_rec
    0U,	// SUBFE_rec
    0U,	// SUBFIC
    0U,	// SUBFIC8
    0U,	// SUBFME
    0U,	// SUBFME8
    0U,	// SUBFME8O
    0U,	// SUBFME8O_rec
    0U,	// SUBFME8_rec
    0U,	// SUBFMEO
    0U,	// SUBFMEO_rec
    0U,	// SUBFME_rec
    0U,	// SUBFO
    0U,	// SUBFO_rec
    0U,	// SUBFZE
    0U,	// SUBFZE8
    0U,	// SUBFZE8O
    0U,	// SUBFZE8O_rec
    0U,	// SUBFZE8_rec
    0U,	// SUBFZEO
    0U,	// SUBFZEO_rec
    0U,	// SUBFZE_rec
    0U,	// SUBF_rec
    0U,	// SYNC
    0U,	// TABORT
    0U,	// TABORTDC
    0U,	// TABORTDCI
    0U,	// TABORTWC
    0U,	// TABORTWCI
    0U,	// TAILB
    0U,	// TAILB8
    0U,	// TAILBA
    0U,	// TAILBA8
    0U,	// TAILBCTR
    0U,	// TAILBCTR8
    0U,	// TBEGIN
    0U,	// TBEGIN_RET
    0U,	// TCHECK
    0U,	// TCHECK_RET
    0U,	// TCRETURNai
    0U,	// TCRETURNai8
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi8
    0U,	// TCRETURNri
    0U,	// TCRETURNri8
    0U,	// TD
    0U,	// TDI
    0U,	// TEND
    0U,	// TLBIA
    0U,	// TLBIE
    0U,	// TLBIEL
    0U,	// TLBIVAX
    0U,	// TLBLD
    0U,	// TLBLI
    0U,	// TLBRE
    0U,	// TLBRE2
    0U,	// TLBSX
    0U,	// TLBSX2
    0U,	// TLBSX2D
    0U,	// TLBSYNC
    0U,	// TLBWE
    0U,	// TLBWE2
    0U,	// TRAP
    0U,	// TRECHKPT
    0U,	// TRECLAIM
    0U,	// TSR
    0U,	// TW
    0U,	// TWI
    0U,	// UNENCODED_NOP
    0U,	// UpdateGBR
    0U,	// VABSDUB
    0U,	// VABSDUH
    0U,	// VABSDUW
    0U,	// VADDCUQ
    0U,	// VADDCUW
    0U,	// VADDECUQ
    0U,	// VADDEUQM
    0U,	// VADDFP
    0U,	// VADDSBS
    0U,	// VADDSHS
    0U,	// VADDSWS
    0U,	// VADDUBM
    0U,	// VADDUBS
    0U,	// VADDUDM
    0U,	// VADDUHM
    0U,	// VADDUHS
    0U,	// VADDUQM
    0U,	// VADDUWM
    0U,	// VADDUWS
    0U,	// VAND
    0U,	// VANDC
    0U,	// VAVGSB
    0U,	// VAVGSH
    0U,	// VAVGSW
    0U,	// VAVGUB
    0U,	// VAVGUH
    0U,	// VAVGUW
    0U,	// VBPERMD
    0U,	// VBPERMQ
    0U,	// VCFSX
    0U,	// VCFSX_0
    0U,	// VCFUGED
    0U,	// VCFUX
    0U,	// VCFUX_0
    0U,	// VCIPHER
    0U,	// VCIPHERLAST
    0U,	// VCLRLB
    0U,	// VCLRRB
    0U,	// VCLZB
    0U,	// VCLZD
    0U,	// VCLZDM
    0U,	// VCLZH
    0U,	// VCLZLSBB
    0U,	// VCLZW
    0U,	// VCMPBFP
    0U,	// VCMPBFP_rec
    0U,	// VCMPEQFP
    0U,	// VCMPEQFP_rec
    0U,	// VCMPEQUB
    0U,	// VCMPEQUB_rec
    0U,	// VCMPEQUD
    0U,	// VCMPEQUD_rec
    0U,	// VCMPEQUH
    0U,	// VCMPEQUH_rec
    0U,	// VCMPEQUQ
    0U,	// VCMPEQUQ_rec
    0U,	// VCMPEQUW
    0U,	// VCMPEQUW_rec
    0U,	// VCMPGEFP
    0U,	// VCMPGEFP_rec
    0U,	// VCMPGTFP
    0U,	// VCMPGTFP_rec
    0U,	// VCMPGTSB
    0U,	// VCMPGTSB_rec
    0U,	// VCMPGTSD
    0U,	// VCMPGTSD_rec
    0U,	// VCMPGTSH
    0U,	// VCMPGTSH_rec
    0U,	// VCMPGTSQ
    0U,	// VCMPGTSQ_rec
    0U,	// VCMPGTSW
    0U,	// VCMPGTSW_rec
    0U,	// VCMPGTUB
    0U,	// VCMPGTUB_rec
    0U,	// VCMPGTUD
    0U,	// VCMPGTUD_rec
    0U,	// VCMPGTUH
    0U,	// VCMPGTUH_rec
    0U,	// VCMPGTUQ
    0U,	// VCMPGTUQ_rec
    0U,	// VCMPGTUW
    0U,	// VCMPGTUW_rec
    0U,	// VCMPNEB
    0U,	// VCMPNEB_rec
    0U,	// VCMPNEH
    0U,	// VCMPNEH_rec
    0U,	// VCMPNEW
    0U,	// VCMPNEW_rec
    0U,	// VCMPNEZB
    0U,	// VCMPNEZB_rec
    0U,	// VCMPNEZH
    0U,	// VCMPNEZH_rec
    0U,	// VCMPNEZW
    0U,	// VCMPNEZW_rec
    0U,	// VCMPSQ
    0U,	// VCMPUQ
    0U,	// VCNTMBB
    0U,	// VCNTMBD
    0U,	// VCNTMBH
    0U,	// VCNTMBW
    0U,	// VCTSXS
    0U,	// VCTSXS_0
    0U,	// VCTUXS
    0U,	// VCTUXS_0
    0U,	// VCTZB
    0U,	// VCTZD
    0U,	// VCTZDM
    0U,	// VCTZH
    0U,	// VCTZLSBB
    0U,	// VCTZW
    0U,	// VDIVESD
    0U,	// VDIVESQ
    0U,	// VDIVESW
    0U,	// VDIVEUD
    0U,	// VDIVEUQ
    0U,	// VDIVEUW
    0U,	// VDIVSD
    0U,	// VDIVSQ
    0U,	// VDIVSW
    0U,	// VDIVUD
    0U,	// VDIVUQ
    0U,	// VDIVUW
    0U,	// VEQV
    0U,	// VEXPANDBM
    0U,	// VEXPANDDM
    0U,	// VEXPANDHM
    0U,	// VEXPANDQM
    0U,	// VEXPANDWM
    0U,	// VEXPTEFP
    0U,	// VEXTDDVLX
    0U,	// VEXTDDVRX
    0U,	// VEXTDUBVLX
    0U,	// VEXTDUBVRX
    0U,	// VEXTDUHVLX
    0U,	// VEXTDUHVRX
    0U,	// VEXTDUWVLX
    0U,	// VEXTDUWVRX
    0U,	// VEXTRACTBM
    0U,	// VEXTRACTD
    0U,	// VEXTRACTDM
    0U,	// VEXTRACTHM
    0U,	// VEXTRACTQM
    0U,	// VEXTRACTUB
    0U,	// VEXTRACTUH
    0U,	// VEXTRACTUW
    0U,	// VEXTRACTWM
    0U,	// VEXTSB2D
    0U,	// VEXTSB2Ds
    0U,	// VEXTSB2W
    0U,	// VEXTSB2Ws
    0U,	// VEXTSD2Q
    0U,	// VEXTSH2D
    0U,	// VEXTSH2Ds
    0U,	// VEXTSH2W
    0U,	// VEXTSH2Ws
    0U,	// VEXTSW2D
    0U,	// VEXTSW2Ds
    0U,	// VEXTUBLX
    0U,	// VEXTUBRX
    0U,	// VEXTUHLX
    0U,	// VEXTUHRX
    0U,	// VEXTUWLX
    0U,	// VEXTUWRX
    0U,	// VGBBD
    0U,	// VGNB
    0U,	// VINSBLX
    0U,	// VINSBRX
    0U,	// VINSBVLX
    0U,	// VINSBVRX
    0U,	// VINSD
    0U,	// VINSDLX
    0U,	// VINSDRX
    0U,	// VINSERTB
    0U,	// VINSERTD
    0U,	// VINSERTH
    0U,	// VINSERTW
    0U,	// VINSHLX
    0U,	// VINSHRX
    0U,	// VINSHVLX
    0U,	// VINSHVRX
    0U,	// VINSW
    0U,	// VINSWLX
    0U,	// VINSWRX
    0U,	// VINSWVLX
    0U,	// VINSWVRX
    0U,	// VLOGEFP
    0U,	// VMADDFP
    0U,	// VMAXFP
    0U,	// VMAXSB
    0U,	// VMAXSD
    0U,	// VMAXSH
    0U,	// VMAXSW
    0U,	// VMAXUB
    0U,	// VMAXUD
    0U,	// VMAXUH
    0U,	// VMAXUW
    0U,	// VMHADDSHS
    0U,	// VMHRADDSHS
    0U,	// VMINFP
    0U,	// VMINSB
    0U,	// VMINSD
    0U,	// VMINSH
    0U,	// VMINSW
    0U,	// VMINUB
    0U,	// VMINUD
    0U,	// VMINUH
    0U,	// VMINUW
    0U,	// VMLADDUHM
    0U,	// VMODSD
    0U,	// VMODSQ
    0U,	// VMODSW
    0U,	// VMODUD
    0U,	// VMODUQ
    0U,	// VMODUW
    0U,	// VMRGEW
    0U,	// VMRGHB
    0U,	// VMRGHH
    0U,	// VMRGHW
    0U,	// VMRGLB
    0U,	// VMRGLH
    0U,	// VMRGLW
    0U,	// VMRGOW
    0U,	// VMSUMCUD
    0U,	// VMSUMMBM
    0U,	// VMSUMSHM
    0U,	// VMSUMSHS
    0U,	// VMSUMUBM
    0U,	// VMSUMUDM
    0U,	// VMSUMUHM
    0U,	// VMSUMUHS
    0U,	// VMUL10CUQ
    0U,	// VMUL10ECUQ
    0U,	// VMUL10EUQ
    0U,	// VMUL10UQ
    0U,	// VMULESB
    0U,	// VMULESD
    0U,	// VMULESH
    0U,	// VMULESW
    0U,	// VMULEUB
    0U,	// VMULEUD
    0U,	// VMULEUH
    0U,	// VMULEUW
    0U,	// VMULHSD
    0U,	// VMULHSW
    0U,	// VMULHUD
    0U,	// VMULHUW
    0U,	// VMULLD
    0U,	// VMULOSB
    0U,	// VMULOSD
    0U,	// VMULOSH
    0U,	// VMULOSW
    0U,	// VMULOUB
    0U,	// VMULOUD
    0U,	// VMULOUH
    0U,	// VMULOUW
    0U,	// VMULUWM
    0U,	// VNAND
    0U,	// VNCIPHER
    0U,	// VNCIPHERLAST
    0U,	// VNEGD
    0U,	// VNEGW
    0U,	// VNMSUBFP
    0U,	// VNOR
    0U,	// VOR
    0U,	// VORC
    0U,	// VPDEPD
    0U,	// VPERM
    0U,	// VPERMR
    0U,	// VPERMXOR
    0U,	// VPEXTD
    0U,	// VPKPX
    0U,	// VPKSDSS
    0U,	// VPKSDUS
    0U,	// VPKSHSS
    0U,	// VPKSHUS
    0U,	// VPKSWSS
    0U,	// VPKSWUS
    0U,	// VPKUDUM
    0U,	// VPKUDUS
    0U,	// VPKUHUM
    0U,	// VPKUHUS
    0U,	// VPKUWUM
    0U,	// VPKUWUS
    0U,	// VPMSUMB
    0U,	// VPMSUMD
    0U,	// VPMSUMH
    0U,	// VPMSUMW
    0U,	// VPOPCNTB
    0U,	// VPOPCNTD
    0U,	// VPOPCNTH
    0U,	// VPOPCNTW
    0U,	// VPRTYBD
    0U,	// VPRTYBQ
    0U,	// VPRTYBW
    0U,	// VREFP
    0U,	// VRFIM
    0U,	// VRFIN
    0U,	// VRFIP
    0U,	// VRFIZ
    0U,	// VRLB
    0U,	// VRLD
    0U,	// VRLDMI
    0U,	// VRLDNM
    0U,	// VRLH
    0U,	// VRLQ
    0U,	// VRLQMI
    0U,	// VRLQNM
    0U,	// VRLW
    0U,	// VRLWMI
    0U,	// VRLWNM
    0U,	// VRSQRTEFP
    0U,	// VSBOX
    0U,	// VSEL
    0U,	// VSHASIGMAD
    0U,	// VSHASIGMAW
    0U,	// VSL
    0U,	// VSLB
    0U,	// VSLD
    0U,	// VSLDBI
    0U,	// VSLDOI
    0U,	// VSLH
    0U,	// VSLO
    0U,	// VSLQ
    0U,	// VSLV
    0U,	// VSLW
    0U,	// VSPLTB
    0U,	// VSPLTBs
    0U,	// VSPLTH
    0U,	// VSPLTHs
    0U,	// VSPLTISB
    0U,	// VSPLTISH
    0U,	// VSPLTISW
    0U,	// VSPLTW
    0U,	// VSR
    0U,	// VSRAB
    0U,	// VSRAD
    0U,	// VSRAH
    0U,	// VSRAQ
    0U,	// VSRAW
    0U,	// VSRB
    0U,	// VSRD
    0U,	// VSRDBI
    0U,	// VSRH
    0U,	// VSRO
    0U,	// VSRQ
    0U,	// VSRV
    0U,	// VSRW
    0U,	// VSTRIBL
    0U,	// VSTRIBL_rec
    0U,	// VSTRIBR
    0U,	// VSTRIBR_rec
    0U,	// VSTRIHL
    0U,	// VSTRIHL_rec
    0U,	// VSTRIHR
    0U,	// VSTRIHR_rec
    0U,	// VSUBCUQ
    0U,	// VSUBCUW
    0U,	// VSUBECUQ
    0U,	// VSUBEUQM
    0U,	// VSUBFP
    0U,	// VSUBSBS
    0U,	// VSUBSHS
    0U,	// VSUBSWS
    0U,	// VSUBUBM
    0U,	// VSUBUBS
    0U,	// VSUBUDM
    0U,	// VSUBUHM
    0U,	// VSUBUHS
    0U,	// VSUBUQM
    0U,	// VSUBUWM
    0U,	// VSUBUWS
    0U,	// VSUM2SWS
    0U,	// VSUM4SBS
    0U,	// VSUM4SHS
    0U,	// VSUM4UBS
    0U,	// VSUMSWS
    0U,	// VUPKHPX
    0U,	// VUPKHSB
    0U,	// VUPKHSH
    0U,	// VUPKHSW
    0U,	// VUPKLPX
    0U,	// VUPKLSB
    0U,	// VUPKLSH
    0U,	// VUPKLSW
    0U,	// VXOR
    0U,	// V_SET0
    0U,	// V_SET0B
    0U,	// V_SET0H
    0U,	// V_SETALLONES
    0U,	// V_SETALLONESB
    0U,	// V_SETALLONESH
    0U,	// WAIT
    0U,	// WRTEE
    0U,	// WRTEEI
    0U,	// XOR
    0U,	// XOR8
    0U,	// XOR8_rec
    0U,	// XORI
    0U,	// XORI8
    0U,	// XORIS
    0U,	// XORIS8
    0U,	// XOR_rec
    0U,	// XSABSDP
    0U,	// XSABSQP
    0U,	// XSADDDP
    0U,	// XSADDQP
    0U,	// XSADDQPO
    0U,	// XSADDSP
    0U,	// XSCMPEQDP
    0U,	// XSCMPEXPDP
    0U,	// XSCMPEXPQP
    0U,	// XSCMPGEDP
    0U,	// XSCMPGTDP
    0U,	// XSCMPODP
    0U,	// XSCMPOQP
    0U,	// XSCMPUDP
    0U,	// XSCMPUQP
    0U,	// XSCPSGNDP
    0U,	// XSCPSGNQP
    0U,	// XSCVDPHP
    0U,	// XSCVDPQP
    0U,	// XSCVDPSP
    0U,	// XSCVDPSPN
    0U,	// XSCVDPSXDS
    0U,	// XSCVDPSXDSs
    0U,	// XSCVDPSXWS
    0U,	// XSCVDPSXWSs
    0U,	// XSCVDPUXDS
    0U,	// XSCVDPUXDSs
    0U,	// XSCVDPUXWS
    0U,	// XSCVDPUXWSs
    0U,	// XSCVHPDP
    0U,	// XSCVQPDP
    0U,	// XSCVQPDPO
    0U,	// XSCVQPSDZ
    0U,	// XSCVQPSQZ
    0U,	// XSCVQPSWZ
    0U,	// XSCVQPUDZ
    0U,	// XSCVQPUQZ
    0U,	// XSCVQPUWZ
    0U,	// XSCVSDQP
    0U,	// XSCVSPDP
    0U,	// XSCVSPDPN
    0U,	// XSCVSQQP
    0U,	// XSCVSXDDP
    0U,	// XSCVSXDSP
    0U,	// XSCVUDQP
    0U,	// XSCVUQQP
    0U,	// XSCVUXDDP
    0U,	// XSCVUXDSP
    0U,	// XSDIVDP
    0U,	// XSDIVQP
    0U,	// XSDIVQPO
    0U,	// XSDIVSP
    0U,	// XSIEXPDP
    0U,	// XSIEXPQP
    0U,	// XSMADDADP
    0U,	// XSMADDASP
    0U,	// XSMADDMDP
    0U,	// XSMADDMSP
    0U,	// XSMADDQP
    0U,	// XSMADDQPO
    0U,	// XSMAXCDP
    0U,	// XSMAXDP
    0U,	// XSMAXJDP
    0U,	// XSMINCDP
    0U,	// XSMINDP
    0U,	// XSMINJDP
    0U,	// XSMSUBADP
    0U,	// XSMSUBASP
    0U,	// XSMSUBMDP
    0U,	// XSMSUBMSP
    0U,	// XSMSUBQP
    0U,	// XSMSUBQPO
    0U,	// XSMULDP
    0U,	// XSMULQP
    0U,	// XSMULQPO
    0U,	// XSMULSP
    0U,	// XSNABSDP
    0U,	// XSNABSQP
    0U,	// XSNEGDP
    0U,	// XSNEGQP
    0U,	// XSNMADDADP
    0U,	// XSNMADDASP
    0U,	// XSNMADDMDP
    0U,	// XSNMADDMSP
    0U,	// XSNMADDQP
    0U,	// XSNMADDQPO
    0U,	// XSNMSUBADP
    0U,	// XSNMSUBASP
    0U,	// XSNMSUBMDP
    0U,	// XSNMSUBMSP
    0U,	// XSNMSUBQP
    0U,	// XSNMSUBQPO
    0U,	// XSRDPI
    0U,	// XSRDPIC
    0U,	// XSRDPIM
    0U,	// XSRDPIP
    0U,	// XSRDPIZ
    0U,	// XSREDP
    0U,	// XSRESP
    0U,	// XSRQPI
    0U,	// XSRQPIX
    0U,	// XSRQPXP
    0U,	// XSRSP
    0U,	// XSRSQRTEDP
    0U,	// XSRSQRTESP
    0U,	// XSSQRTDP
    0U,	// XSSQRTQP
    0U,	// XSSQRTQPO
    0U,	// XSSQRTSP
    0U,	// XSSUBDP
    0U,	// XSSUBQP
    0U,	// XSSUBQPO
    0U,	// XSSUBSP
    0U,	// XSTDIVDP
    0U,	// XSTSQRTDP
    0U,	// XSTSTDCDP
    0U,	// XSTSTDCQP
    0U,	// XSTSTDCSP
    0U,	// XSXEXPDP
    0U,	// XSXEXPQP
    0U,	// XSXSIGDP
    0U,	// XSXSIGQP
    0U,	// XVABSDP
    0U,	// XVABSSP
    0U,	// XVADDDP
    0U,	// XVADDSP
    0U,	// XVBF16GER2
    0U,	// XVBF16GER2NN
    0U,	// XVBF16GER2NP
    0U,	// XVBF16GER2PN
    0U,	// XVBF16GER2PP
    0U,	// XVCMPEQDP
    0U,	// XVCMPEQDP_rec
    0U,	// XVCMPEQSP
    0U,	// XVCMPEQSP_rec
    0U,	// XVCMPGEDP
    0U,	// XVCMPGEDP_rec
    0U,	// XVCMPGESP
    0U,	// XVCMPGESP_rec
    0U,	// XVCMPGTDP
    0U,	// XVCMPGTDP_rec
    0U,	// XVCMPGTSP
    0U,	// XVCMPGTSP_rec
    0U,	// XVCPSGNDP
    0U,	// XVCPSGNSP
    0U,	// XVCVBF16SPN
    0U,	// XVCVDPSP
    0U,	// XVCVDPSXDS
    0U,	// XVCVDPSXWS
    0U,	// XVCVDPUXDS
    0U,	// XVCVDPUXWS
    0U,	// XVCVHPSP
    0U,	// XVCVSPBF16
    0U,	// XVCVSPDP
    0U,	// XVCVSPHP
    0U,	// XVCVSPSXDS
    0U,	// XVCVSPSXWS
    0U,	// XVCVSPUXDS
    0U,	// XVCVSPUXWS
    0U,	// XVCVSXDDP
    0U,	// XVCVSXDSP
    0U,	// XVCVSXWDP
    0U,	// XVCVSXWSP
    0U,	// XVCVUXDDP
    0U,	// XVCVUXDSP
    0U,	// XVCVUXWDP
    0U,	// XVCVUXWSP
    0U,	// XVDIVDP
    0U,	// XVDIVSP
    0U,	// XVF16GER2
    0U,	// XVF16GER2NN
    0U,	// XVF16GER2NP
    0U,	// XVF16GER2PN
    0U,	// XVF16GER2PP
    0U,	// XVF32GER
    0U,	// XVF32GERNN
    0U,	// XVF32GERNP
    0U,	// XVF32GERPN
    0U,	// XVF32GERPP
    0U,	// XVF64GER
    0U,	// XVF64GERNN
    0U,	// XVF64GERNP
    0U,	// XVF64GERPN
    0U,	// XVF64GERPP
    0U,	// XVI16GER2
    0U,	// XVI16GER2PP
    0U,	// XVI16GER2S
    0U,	// XVI16GER2SPP
    0U,	// XVI4GER8
    0U,	// XVI4GER8PP
    0U,	// XVI8GER4
    0U,	// XVI8GER4PP
    0U,	// XVI8GER4SPP
    0U,	// XVIEXPDP
    0U,	// XVIEXPSP
    0U,	// XVMADDADP
    0U,	// XVMADDASP
    0U,	// XVMADDMDP
    0U,	// XVMADDMSP
    0U,	// XVMAXDP
    0U,	// XVMAXSP
    0U,	// XVMINDP
    0U,	// XVMINSP
    0U,	// XVMSUBADP
    0U,	// XVMSUBASP
    0U,	// XVMSUBMDP
    0U,	// XVMSUBMSP
    0U,	// XVMULDP
    0U,	// XVMULSP
    0U,	// XVNABSDP
    0U,	// XVNABSSP
    0U,	// XVNEGDP
    0U,	// XVNEGSP
    0U,	// XVNMADDADP
    0U,	// XVNMADDASP
    0U,	// XVNMADDMDP
    0U,	// XVNMADDMSP
    0U,	// XVNMSUBADP
    0U,	// XVNMSUBASP
    0U,	// XVNMSUBMDP
    0U,	// XVNMSUBMSP
    0U,	// XVRDPI
    0U,	// XVRDPIC
    0U,	// XVRDPIM
    0U,	// XVRDPIP
    0U,	// XVRDPIZ
    0U,	// XVREDP
    0U,	// XVRESP
    0U,	// XVRSPI
    0U,	// XVRSPIC
    0U,	// XVRSPIM
    0U,	// XVRSPIP
    0U,	// XVRSPIZ
    0U,	// XVRSQRTEDP
    0U,	// XVRSQRTESP
    0U,	// XVSQRTDP
    0U,	// XVSQRTSP
    0U,	// XVSUBDP
    0U,	// XVSUBSP
    0U,	// XVTDIVDP
    0U,	// XVTDIVSP
    0U,	// XVTLSBB
    0U,	// XVTSQRTDP
    0U,	// XVTSQRTSP
    0U,	// XVTSTDCDP
    0U,	// XVTSTDCSP
    0U,	// XVXEXPDP
    0U,	// XVXEXPSP
    0U,	// XVXSIGDP
    0U,	// XVXSIGSP
    0U,	// XXBLENDVB
    0U,	// XXBLENDVD
    0U,	// XXBLENDVH
    0U,	// XXBLENDVW
    0U,	// XXBRD
    0U,	// XXBRH
    0U,	// XXBRQ
    0U,	// XXBRW
    3U,	// XXEVAL
    0U,	// XXEXTRACTUW
    0U,	// XXGENPCVBM
    0U,	// XXGENPCVDM
    0U,	// XXGENPCVHM
    0U,	// XXGENPCVWM
    0U,	// XXINSERTW
    0U,	// XXLAND
    0U,	// XXLANDC
    0U,	// XXLEQV
    0U,	// XXLEQVOnes
    0U,	// XXLNAND
    0U,	// XXLNOR
    0U,	// XXLOR
    0U,	// XXLORC
    0U,	// XXLORf
    0U,	// XXLXOR
    0U,	// XXLXORdpz
    0U,	// XXLXORspz
    0U,	// XXLXORz
    0U,	// XXMFACC
    0U,	// XXMRGHW
    0U,	// XXMRGLW
    0U,	// XXMTACC
    0U,	// XXPERM
    0U,	// XXPERMDI
    0U,	// XXPERMDIs
    0U,	// XXPERMR
    4U,	// XXPERMX
    0U,	// XXSEL
    0U,	// XXSETACCZ
    0U,	// XXSLDWI
    0U,	// XXSLDWIs
    0U,	// XXSPLTI32DX
    0U,	// XXSPLTIB
    0U,	// XXSPLTIDP
    0U,	// XXSPLTIW
    0U,	// XXSPLTW
    0U,	// XXSPLTWs
    0U,	// gBC
    0U,	// gBCA
    0U,	// gBCAat
    0U,	// gBCCTR
    0U,	// gBCCTRL
    0U,	// gBCL
    0U,	// gBCLA
    0U,	// gBCLAat
    0U,	// gBCLR
    0U,	// gBCLRL
    0U,	// gBCLat
    0U,	// gBCat
  };

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MCInst_getOpcode(MI)] << 0;
  Bits |= (uint64_t)OpInfo1[MCInst_getOpcode(MI)] << 32;
  Bits |= (uint64_t)OpInfo2[MCInst_getOpcode(MI)] << 48;
  return (MnemonicData){AsmStrs+(Bits & 32767)-1, Bits};

}
/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
static void printInstruction(MCInst *MI, SStream *O)
{
  unsigned int opcode = MCInst_getOpcode(MI);
  // printf("opcode = %u\n", opcode);

  MnemonicData MnemonicInfo = PPCInstPrinter_getMnemonic(MI);

  SStream_concat0(O, MnemonicInfo.first);

  uint64_t Bits = MnemonicInfo.second;

  // Fragment 0 encoded into 5 bits for 19 unique commands.
  // printf("Fragment 0: %"PRIu64"\n", ((Bits >> 15) & 31));
  switch ((Bits >> 15) & 31) {
  default: // unreachable
  case 0:
    // DBG_VALUE, DBG_INSTR_REF, DBG_LABEL, BUNDLE, LIFETIME_START, LIFETIME_...
    return;
    break;
  case 1:
    // BUILD_UACC, CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CL...
    printOperand(MI, 0, O);
    break;
  case 2:
    // DCBFL, DCBFLP, DCBFx, DCBTCT, DCBTDS, DCBTSTCT, DCBTSTDS, DCBTSTT, DCB...
    printMemRegReg(MI, 0, O);
    break;
  case 3:
    // ADJCALLSTACKDOWN, ADJCALLSTACKUP
    printU16ImmOperand(MI, 0, O);
    SStream_concat0(O, " ");
    printU16ImmOperand(MI, 1, O);
    return;
    break;
  case 4:
    // B, BCLalways, BDNZ, BDNZ8, BDNZL, BDNZLm, BDNZLp, BDNZm, BDNZp, BDZ, B...
    printBranchOperand(MI, 0, O);
    break;
  case 5:
    // BA, BDNZA, BDNZAm, BDNZAp, BDNZLA, BDNZLAm, BDNZLAp, BDZA, BDZAm, BDZA...
    printAbsBranchOperand(MI, 0, O);
    break;
  case 6:
    // BCC, BCCA, BCCCTR, BCCCTR8, BCCCTRL, BCCCTRL8, BCCL, BCCLA, BCCLR, BCC...
    printPredicateOperand(MI, 0, O, "cc");
    break;
  case 7:
    // BCTRL8_LDinto_toc, BCTRL_LWZinto_toc
    printMemRegImm(MI, 0, O);
    return;
    break;
  case 8:
    // BL8_NOP_TLS, BL8_NOTOC_TLS, BL8_TLS, BL8_TLS_, BL_TLS
    printTLSCall(MI, 0, O);
    break;
  case 9:
    // DCBF, DCBT, DCBTST
    printMemRegReg(MI, 1, O);
    SStream_concat0(O, ", ");
    printU5ImmOperand(MI, 0, O);
    return;
    break;
  case 10:
    // DCBTEP, DCBTSTEP
    printU5ImmOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printMemRegReg(MI, 0, O);
    return;
    break;
  case 11:
    // DSS, MBAR, MTFSB0, MTFSB1, TABORTDC, TABORTDCI, TABORTWC, TABORTWCI, T...
    printU5ImmOperand(MI, 0, O);
    break;
  case 12:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64, MTDCR, MTV...
    printOperand(MI, 1, O);
    break;
  case 13:
    // ICBLC, ICBLQ, ICBT, ICBTLS
    printU4ImmOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printMemRegReg(MI, 1, O);
    return;
    break;
  case 14:
    // MTOCRF, MTOCRF8
    printcrbitm(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 1, O);
    return;
    break;
  case 15:
    // MTSR
    printU4ImmOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    return;
    break;
  case 16:
    // RFEBB, TBEGIN, TEND, TSR
    printU1ImmOperand(MI, 0, O);
    return;
    break;
  case 17:
    // XSRQPI, XSRQPIX, XSRQPXP
    printU1ImmOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printU2ImmOperand(MI, 3, O);
    return;
    break;
  case 18:
    // gBCAat, gBCLAat, gBCLat, gBCat
    printATBitsAsHint(MI, 1, O);
    SStream_concat0(O, " ");
    printU5ImmOperand(MI, 0, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    break;
  }


  // Fragment 1 encoded into 5 bits for 19 unique commands.
  // printf("Fragment 1: %"PRIu64"\n", ((Bits >> 20) & 31));
  switch ((Bits >> 20) & 31) {
  default: // unreachable
  case 0:
    // BUILD_UACC, CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CL...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // DCBFL, DCBFLP, DCBFx, DCBTSTT, DCBTSTx, DCBTT, DCBTx, B, BA, BCLalways...
    return;
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, TCRETURNai, TCRETURNai8, TCR...
    SStream_concat0(O, " ");
    break;
  case 3:
    // BCC, CTRL_DEP
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat0(O, " ");
    printPredicateOperand(MI, 0, O, "reg");
    SStream_concat0(O, ", ");
    printBranchOperand(MI, 2, O);
    return;
    break;
  case 4:
    // BCCA
    SStream_concat0(O, "a");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat0(O, " ");
    printPredicateOperand(MI, 0, O, "reg");
    SStream_concat0(O, ", ");
    printAbsBranchOperand(MI, 2, O);
    return;
    break;
  case 5:
    // BCCCTR, BCCCTR8
    SStream_concat0(O, "ctr");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat0(O, " ");
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 6:
    // BCCCTRL, BCCCTRL8
    SStream_concat0(O, "ctrl");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat0(O, " ");
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 7:
    // BCCL
    SStream_concat0(O, "l");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat0(O, " ");
    printPredicateOperand(MI, 0, O, "reg");
    SStream_concat0(O, ", ");
    printBranchOperand(MI, 2, O);
    return;
    break;
  case 8:
    // BCCLA
    SStream_concat0(O, "la");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat0(O, " ");
    printPredicateOperand(MI, 0, O, "reg");
    SStream_concat0(O, ", ");
    printAbsBranchOperand(MI, 2, O);
    return;
    break;
  case 9:
    // BCCLR
    SStream_concat0(O, "lr");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat0(O, " ");
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 10:
    // BCCLRL
    SStream_concat0(O, "lrl");
    printPredicateOperand(MI, 0, O, "pm");
    SStream_concat0(O, " ");
    printPredicateOperand(MI, 0, O, "reg");
    return;
    break;
  case 11:
    // BCCTR, BCCTR8, BCCTR8n, BCCTRL, BCCTRL8, BCCTRL8n, BCCTRLn, BCCTRn, BC...
    SStream_concat0(O, ", 0");
    op_addImm(MI, 0);
    return;
    break;
  case 12:
    // BL8_NOP, BL8_NOP_TLS, BLA8_NOP, BL_NOP
    SStream_concat0(O, "\n\tnop");
    return;
    break;
  case 13:
    // EVSEL, TLBIE
    SStream_concat0(O, ",");
    break;
  case 14:
    // MFTB8
    SStream_concat0(O, ", 268");
    op_addImm(MI, 268);
    return;
    break;
  case 15:
    // MFVRSAVE, MFVRSAVEv
    SStream_concat0(O, ", 256");
    op_addImm(MI, 256);
    return;
    break;
  case 16:
    // V_SETALLONES, V_SETALLONESB, V_SETALLONESH
    SStream_concat0(O, ", -1");
    op_addImm(MI, -1);
    return;
    break;
  case 17:
    // gBCAat, gBCLAat
    printAbsBranchOperand(MI, 3, O);
    return;
    break;
  case 18:
    // gBCLat, gBCat
    printBranchOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 27 unique commands.
  // printf("Fragment 2: %"PRIu64"\n", ((Bits >> 25) & 31));
  switch ((Bits >> 25) & 31) {
  default: // unreachable
  case 0:
    // BUILD_UACC, CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CL...
    printOperand(MI, 1, O);
    break;
  case 1:
    // DCBTCT, DCBTDS, DCBTSTCT, DCBTSTDS, EVADDIW
    printU5ImmOperand(MI, 2, O);
    break;
  case 2:
    // LAx, EVLDD, EVLDH, EVLDW, EVLHHESPLAT, EVLHHOSSPLAT, EVLHHOUSPLAT, EVL...
    printMemRegImm(MI, 1, O);
    break;
  case 3:
    // SUBPCIS, LI, LI8, LIS, LIS8
    printS16ImmOperand(MI, 1, O);
    return;
    break;
  case 4:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, EVLDDX, EVLDHX, EVLDWX, EVLH...
    printMemRegReg(MI, 1, O);
    break;
  case 5:
    // BC, BCL, BCLn, BCn
    printBranchOperand(MI, 1, O);
    return;
    break;
  case 6:
    // CMPRB, CMPRB8
    printU1ImmOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 7:
    // CRSET, CRUNSET, MTDCR, TLBIE, V_SET0, V_SET0B, V_SET0H, XXLEQVOnes, XX...
    printOperand(MI, 0, O);
    break;
  case 8:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64, PMXVBF16GE...
    printOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    break;
  case 9:
    // EVSPLATFI, EVSPLATI, VSPLTISB, VSPLTISH, VSPLTISW
    printS5ImmOperand(MI, 1, O);
    return;
    break;
  case 10:
    // EVSUBIFW
    printU5ImmOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 11:
    // LA
    printS16ImmOperand(MI, 2, O);
    SStream_concat0(O, "(");
    printOperand(MI, 1, O);
    SStream_concat0(O, ")");
    return;
    break;
  case 12:
    // LBZU, LBZU8, LDU, LFDU, LFSU, LHAU, LHAU8, LHZU, LHZU8, LWZU, LWZU8, P...
    printMemRegImm(MI, 2, O);
    break;
  case 13:
    // LBZUX, LBZUX8, LDUX, LFDUX, LFSUX, LHAUX, LHAUX8, LHZUX, LHZUX8, LWAUX...
    printMemRegReg(MI, 2, O);
    break;
  case 14:
    // MFBHRBE
    printU10ImmOperand(MI, 1, O);
    return;
    break;
  case 15:
    // MFFSCDRNI
    printU3ImmOperand(MI, 1, O);
    return;
    break;
  case 16:
    // MFFSCRNI
    printU2ImmOperand(MI, 1, O);
    return;
    break;
  case 17:
    // MFOCRF, MFOCRF8
    printcrbitm(MI, 1, O);
    return;
    break;
  case 18:
    // MFSR
    printU4ImmOperand(MI, 1, O);
    return;
    break;
  case 19:
    // MTVSRBMI
    printU16ImmOperand(MI, 1, O);
    return;
    break;
  case 20:
    // PADDI8pc, PADDIpc
    printImmZeroOperand(MI, 1, O);
    SStream_concat0(O, ", ");
    printS34ImmOperand(MI, 2, O);
    SStream_concat0(O, ", 1");
    op_addImm(MI, 1);
    return;
    break;
  case 21:
    // PLBZ, PLBZ8, PLD, PLFD, PLFS, PLHA, PLHA8, PLHZ, PLHZ8, PLWA, PLWA8, P...
    printMemRegImm34(MI, 1, O);
    SStream_concat0(O, ", 0");
    op_addImm(MI, 0);
    return;
    break;
  case 22:
    // PLBZ8pc, PLBZpc, PLDpc, PLFDpc, PLFSpc, PLHA8pc, PLHApc, PLHZ8pc, PLHZ...
    printMemRegImm34PCRel(MI, 1, O);
    SStream_concat0(O, ", 1");
    op_addImm(MI, 1);
    return;
    break;
  case 23:
    // PLI, PLI8
    printS34ImmOperand(MI, 1, O);
    return;
    break;
  case 24:
    // VINSD, VINSERTB, VINSERTH, VINSW
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printU4ImmOperand(MI, 2, O);
    return;
    break;
  case 25:
    // XXSPLTI32DX
    printU1ImmOperand(MI, 2, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 3, O);
    return;
    break;
  case 26:
    // XXSPLTIB
    printU8ImmOperand(MI, 1, O);
    return;
    break;
  }


  // Fragment 3 encoded into 4 bits for 14 unique commands.
  // printf("Fragment 3: %"PRIu64"\n", ((Bits >> 30) & 15));
  switch ((Bits >> 30) & 15) {
  default: // unreachable
  case 0:
    // BUILD_UACC, CP_COPY_FIRST, CP_COPYx, CP_PASTE_LAST, CP_PASTEx, DCBTCT,...
    return;
    break;
  case 1:
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CLRRDI_rec, CL...
    SStream_concat0(O, ", ");
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32
    SStream_concat0(O, " ");
    printOperand(MI, 3, O);
    SStream_concat0(O, " ");
    printOperand(MI, 4, O);
    return;
    break;
  case 3:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64
    printU5ImmOperand(MI, 0, O);
    return;
    break;
  case 4:
    // EVSEL
    SStream_concat0(O, ",");
    printOperand(MI, 2, O);
    return;
    break;
  case 5:
    // LBARXL, LDARXL, LHARXL, LWARXL
    SStream_concat0(O, ", 1");
    op_addImm(MI, 1);
    return;
    break;
  case 6:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVF1...
    printOperand(MI, 3, O);
    break;
  case 7:
    // RLDIMI, RLDIMI_rec
    printU6ImmOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printU6ImmOperand(MI, 4, O);
    return;
    break;
  case 8:
    // RLWIMI, RLWIMI8, RLWIMI8_rec, RLWIMI_rec
    printU5ImmOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printU5ImmOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    printU5ImmOperand(MI, 5, O);
    return;
    break;
  case 9:
    // VCFSX, VCFUX, VCTSXS, VCTUXS, VSPLTB, VSPLTBs, VSPLTH, VSPLTHs, VSPLTW
    printU5ImmOperand(MI, 1, O);
    return;
    break;
  case 10:
    // VCFSX_0, VCFUX_0, VCTSXS_0, VCTUXS_0
    SStream_concat0(O, ", 0");
    op_addImm(MI, 0);
    return;
    break;
  case 11:
    // VEXTRACTD, VEXTRACTUB, VEXTRACTUH, VEXTRACTUW, VINSERTD, VINSERTW
    printU4ImmOperand(MI, 1, O);
    return;
    break;
  case 12:
    // XSTSTDCDP, XSTSTDCQP, XSTSTDCSP, XVTSTDCDP, XVTSTDCSP
    printU7ImmOperand(MI, 1, O);
    return;
    break;
  case 13:
    // XXINSERTW
    printU4ImmOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 4 encoded into 5 bits for 20 unique commands.
  // printf("Fragment 4: %"PRIu64"\n", ((Bits >> 34) & 31));
  switch ((Bits >> 34) & 31) {
  default: // unreachable
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, CLRRDI, CLRRDI_rec, EXTLDI, EXTLDI_rec, EXTRDI...
    printU6ImmOperand(MI, 2, O);
    break;
  case 1:
    // CLRLSLWI, CLRLSLWI_rec, CLRRWI, CLRRWI_rec, EXTLWI, EXTLWI_rec, EXTRWI...
    printU5ImmOperand(MI, 2, O);
    break;
  case 2:
    // SUBI, SUBIC, SUBIC_rec, SUBIS, ADDI, ADDI8, ADDIC, ADDIC8, ADDIC_rec, ...
    printS16ImmOperand(MI, 2, O);
    return;
    break;
  case 3:
    // ADD4, ADD4O, ADD4O_rec, ADD4TLS, ADD4_rec, ADD8, ADD8O, ADD8O_rec, ADD...
    printOperand(MI, 2, O);
    break;
  case 4:
    // ANDI8_rec, ANDIS8_rec, ANDIS_rec, ANDI_rec, CMPLDI, CMPLWI, ORI, ORI8,...
    printU16ImmOperand(MI, 2, O);
    return;
    break;
  case 5:
    // BCDCFN_rec, BCDCFSQ_rec, BCDCFZ_rec, BCDCTZ_rec, BCDSETSGN_rec, CP_COP...
    printU1ImmOperand(MI, 2, O);
    break;
  case 6:
    // CRSET, CRUNSET, V_SET0, V_SET0B, V_SET0H, XXLEQVOnes, XXLXORdpz, XXLXO...
    printOperand(MI, 0, O);
    return;
    break;
  case 7:
    // EVADDIW, XXPERMDIs, XXSLDWIs
    printOperand(MI, 1, O);
    break;
  case 8:
    // PADDI, PADDI8
    printS34ImmOperand(MI, 2, O);
    SStream_concat0(O, ", 0");
    op_addImm(MI, 0);
    return;
    break;
  case 9:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVF1...
    SStream_concat0(O, ", ");
    printU4ImmOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    break;
  case 10:
    // PSQ_L, PSQ_LX, PSQ_ST, PSQ_STX
    printU1ImmOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printU3ImmOperand(MI, 4, O);
    return;
    break;
  case 11:
    // PSQ_LU, PSQ_LUX, PSQ_STU, PSQ_STUX
    printU1ImmOperand(MI, 4, O);
    SStream_concat0(O, ", ");
    printU3ImmOperand(MI, 5, O);
    return;
    break;
  case 12:
    // PS_MADD, PS_MADDS0, PS_MADDS0_rec, PS_MADDS1, PS_MADDS1_rec, PS_MADD_r...
    printOperand(MI, 3, O);
    SStream_concat0(O, ", ");
    printOperand(MI, 2, O);
    return;
    break;
  case 13:
    // VGNB
    printU3ImmOperand(MI, 2, O);
    return;
    break;
  case 14:
    // VINSBLX, VINSBRX, VINSBVLX, VINSBVRX, VINSDLX, VINSDRX, VINSHLX, VINSH...
    return;
    break;
  case 15:
    // XXEXTRACTUW
    printU4ImmOperand(MI, 2, O);
    return;
    break;
  case 16:
    // XXGENPCVBM, XXGENPCVDM, XXGENPCVHM, XXGENPCVWM
    printS5ImmOperand(MI, 2, O);
    return;
    break;
  case 17:
    // XXSPLTW, XXSPLTWs
    printU2ImmOperand(MI, 2, O);
    return;
    break;
  case 18:
    // gBC, gBCL
    printBranchOperand(MI, 2, O);
    return;
    break;
  case 19:
    // gBCA, gBCLA
    printAbsBranchOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 5 encoded into 2 bits for 4 unique commands.
  // printf("Fragment 5: %"PRIu64"\n", ((Bits >> 39) & 3));
  switch ((Bits >> 39) & 3) {
  default: // unreachable
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, EXTLDI, EXTLDI_rec, EX...
    SStream_concat0(O, ", ");
    break;
  case 1:
    // CLRRDI, CLRRDI_rec, CLRRWI, CLRRWI_rec, ROTRDI, ROTRDI_rec, ROTRWI, RO...
    return;
    break;
  case 2:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVF1...
    printU4ImmOperand(MI, 5, O);
    break;
  case 3:
    // PMXVF64GERNN, PMXVF64GERNP, PMXVF64GERPN, PMXVF64GERPP
    printU2ImmOperand(MI, 5, O);
    return;
    break;
  }


  // Fragment 6 encoded into 4 bits for 10 unique commands.
  // printf("Fragment 6: %"PRIu64"\n", ((Bits >> 41) & 15));
  switch ((Bits >> 41) & 15) {
  default: // unreachable
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, EXTLDI, EXTLDI_rec, EXTRDI, EXTRDI_rec, INSRDI...
    printU6ImmOperand(MI, 3, O);
    return;
    break;
  case 1:
    // CLRLSLWI, CLRLSLWI_rec, EXTLWI, EXTLWI_rec, EXTRWI, EXTRWI_rec, INSLWI...
    printU5ImmOperand(MI, 3, O);
    break;
  case 2:
    // RLWIMIbm, RLWIMIbm_rec, RLWINMbm, RLWINMbm_rec, RLWNMbm, RLWNMbm_rec, ...
    printOperand(MI, 3, O);
    break;
  case 3:
    // BCDSR_rec, BCDS_rec, BCDTRUNC_rec
    printU1ImmOperand(MI, 3, O);
    return;
    break;
  case 4:
    // PMXVBF16GER2, PMXVF16GER2, PMXVF32GER, PMXVF64GER, PMXVI16GER2, PMXVI1...
    printU4ImmOperand(MI, 3, O);
    break;
  case 5:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVF1...
    SStream_concat0(O, ", ");
    break;
  case 6:
    // PMXVF32GERNN, PMXVF32GERNP, PMXVF32GERPN, PMXVF32GERPP
    return;
    break;
  case 7:
    // VSLDBI, VSRDBI
    printU3ImmOperand(MI, 3, O);
    return;
    break;
  case 8:
    // XXPERMDI, XXSLDWI
    printU2ImmOperand(MI, 3, O);
    return;
    break;
  case 9:
    // XXPERMDIs, XXSLDWIs
    printU2ImmOperand(MI, 2, O);
    return;
    break;
  }


  // Fragment 7 encoded into 3 bits for 5 unique commands.
  // printf("Fragment 7: %"PRIu64"\n", ((Bits >> 45) & 7));
  switch ((Bits >> 45) & 7) {
  default: // unreachable
  case 0:
    // CLRLSLWI, CLRLSLWI_rec, EXTLWI, EXTLWI_rec, EXTRWI, EXTRWI_rec, INSLWI...
    return;
    break;
  case 1:
    // PMXVBF16GER2, PMXVF16GER2, PMXVF32GER, PMXVF64GER, PMXVI16GER2, PMXVI1...
    SStream_concat0(O, ", ");
    break;
  case 2:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVF1...
    printU2ImmOperand(MI, 6, O);
    return;
    break;
  case 3:
    // PMXVI4GER8PP
    printU8ImmOperand(MI, 6, O);
    return;
    break;
  case 4:
    // PMXVI8GER4PP, PMXVI8GER4SPP
    printU4ImmOperand(MI, 6, O);
    return;
    break;
  }


  // Fragment 8 encoded into 3 bits for 5 unique commands.
  // printf("Fragment 8: %"PRIu64"\n", ((Bits >> 48) & 7));
  switch ((Bits >> 48) & 7) {
  default: // unreachable
  case 0:
    // PMXVBF16GER2, PMXVF16GER2, PMXVF32GER, PMXVI16GER2, PMXVI16GER2S, PMXV...
    printU4ImmOperand(MI, 4, O);
    break;
  case 1:
    // PMXVF64GER
    printU2ImmOperand(MI, 4, O);
    return;
    break;
  case 2:
    // RLWINM, RLWINM8, RLWINM8_rec, RLWINM_rec, RLWNM, RLWNM8, RLWNM8_rec, R...
    printU5ImmOperand(MI, 4, O);
    return;
    break;
  case 3:
    // XXEVAL
    printU8ImmOperand(MI, 4, O);
    return;
    break;
  case 4:
    // XXPERMX
    printU3ImmOperand(MI, 4, O);
    return;
    break;
  }


  // Fragment 9 encoded into 1 bits for 2 unique commands.
  // printf("Fragment 9: %"PRIu64"\n", ((Bits >> 51) & 1));
  if ((Bits >> 51) & 1) {
    // PMXVF32GER
    return;
  } else {
    // PMXVBF16GER2, PMXVF16GER2, PMXVI16GER2, PMXVI16GER2S, PMXVI4GER8, PMXV...
    SStream_concat0(O, ", ");
  }


  // Fragment 10 encoded into 2 bits for 3 unique commands.
  // printf("Fragment 10: %"PRIu64"\n", ((Bits >> 52) & 3));
  switch ((Bits >> 52) & 3) {
  default: // unreachable
  case 0:
    // PMXVBF16GER2, PMXVF16GER2, PMXVI16GER2, PMXVI16GER2S
    printU2ImmOperand(MI, 5, O);
    return;
    break;
  case 1:
    // PMXVI4GER8
    printU8ImmOperand(MI, 5, O);
    return;
    break;
  case 2:
    // PMXVI8GER4
    printU4ImmOperand(MI, 5, O);
    return;
    break;
  }

}



#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

static char *printAliasInstr(MCInst *MI, SStream *OS, MCRegisterInfo *MRI)
{
  #define GETREGCLASS_CONTAIN(_class, _reg) MCRegisterClass_contains(MCRegisterInfo_getRegClass(MRI, _class), MCOperand_getReg(MCInst_getOperand(MI, _reg)))
  unsigned int I = 0, OpIdx, PrintMethodIdx;
  char *tmpString;
  static const PatternsForOpcode OpToPatterns[] = {
    {PPC_ADDI, 0, 1 },
    {PPC_ADDI8, 1, 1 },
    {PPC_ADDIS, 2, 1 },
    {PPC_ADDIS8, 3, 1 },
    {PPC_ADDPCIS, 4, 1 },
    {PPC_BCC, 5, 24 },
    {PPC_BCCA, 29, 24 },
    {PPC_BCCCTR, 53, 24 },
    {PPC_BCCCTRL, 77, 24 },
    {PPC_BCCL, 101, 24 },
    {PPC_BCCLA, 125, 24 },
    {PPC_BCCLR, 149, 24 },
    {PPC_BCCLRL, 173, 24 },
    {PPC_CMPD, 197, 1 },
    {PPC_CMPDI, 198, 1 },
    {PPC_CMPLD, 199, 1 },
    {PPC_CMPLDI, 200, 1 },
    {PPC_CMPLW, 201, 1 },
    {PPC_CMPLWI, 202, 1 },
    {PPC_CMPW, 203, 1 },
    {PPC_CMPWI, 204, 1 },
    {PPC_CNTLZW, 205, 1 },
    {PPC_CNTLZW8, 206, 1 },
    {PPC_CNTLZW8_rec, 207, 1 },
    {PPC_CNTLZW_rec, 208, 1 },
    {PPC_CREQV, 209, 1 },
    {PPC_CRNOR, 210, 1 },
    {PPC_CROR, 211, 1 },
    {PPC_CRXOR, 212, 1 },
    {PPC_ISEL, 213, 3 },
    {PPC_ISEL8, 216, 3 },
    {PPC_MBAR, 219, 1 },
    {PPC_MFDCR, 220, 8 },
    {PPC_MFSPR, 228, 46 },
    {PPC_MFSPR8, 274, 19 },
    {PPC_MFTB, 293, 1 },
    {PPC_MFVRSAVE, 294, 1 },
    {PPC_MFVSRD, 295, 1 },
    {PPC_MFVSRWZ, 296, 1 },
    {PPC_MTCRF, 297, 1 },
    {PPC_MTCRF8, 298, 1 },
    {PPC_MTDCR, 299, 8 },
    {PPC_MTFSF, 307, 1 },
    {PPC_MTFSFI, 308, 1 },
    {PPC_MTFSFI_rec, 309, 1 },
    {PPC_MTFSF_rec, 310, 1 },
    {PPC_MTMSR, 311, 1 },
    {PPC_MTMSRD, 312, 1 },
    {PPC_MTSPR, 313, 45 },
    {PPC_MTSPR8, 358, 18 },
    {PPC_MTVRSAVE, 376, 1 },
    {PPC_MTVSRD, 377, 1 },
    {PPC_MTVSRWA, 378, 1 },
    {PPC_MTVSRWZ, 379, 1 },
    {PPC_NOR, 380, 1 },
    {PPC_NOR8, 381, 1 },
    {PPC_NOR8_rec, 382, 1 },
    {PPC_NOR_rec, 383, 1 },
    {PPC_OR, 384, 1 },
    {PPC_OR8, 385, 1 },
    {PPC_OR8_rec, 386, 1 },
    {PPC_ORI, 387, 1 },
    {PPC_ORI8, 388, 1 },
    {PPC_OR_rec, 389, 1 },
    {PPC_RFEBB, 390, 1 },
    {PPC_RLDCL, 391, 1 },
    {PPC_RLDCL_rec, 392, 1 },
    {PPC_RLDICL, 393, 2 },
    {PPC_RLDICL_32_64, 395, 2 },
    {PPC_RLDICL_rec, 397, 2 },
    {PPC_RLWINM, 399, 2 },
    {PPC_RLWINM8, 401, 2 },
    {PPC_RLWINM8_rec, 403, 2 },
    {PPC_RLWINM_rec, 405, 2 },
    {PPC_RLWNM, 407, 1 },
    {PPC_RLWNM8, 408, 1 },
    {PPC_RLWNM8_rec, 409, 1 },
    {PPC_RLWNM_rec, 410, 1 },
    {PPC_SC, 411, 1 },
    {PPC_SUBF, 412, 1 },
    {PPC_SUBF8, 413, 1 },
    {PPC_SUBF8_rec, 414, 1 },
    {PPC_SUBFC, 415, 1 },
    {PPC_SUBFC8, 416, 1 },
    {PPC_SUBFC8_rec, 417, 1 },
    {PPC_SUBFC_rec, 418, 1 },
    {PPC_SUBF_rec, 419, 1 },
    {PPC_SYNC, 420, 3 },
    {PPC_TD, 423, 7 },
    {PPC_TDI, 430, 7 },
    {PPC_TEND, 437, 2 },
    {PPC_TLBIE, 439, 1 },
    {PPC_TLBRE2, 440, 2 },
    {PPC_TLBWE2, 442, 2 },
    {PPC_TSR, 444, 2 },
    {PPC_TW, 446, 8 },
    {PPC_TWI, 454, 7 },
    {PPC_VNOR, 461, 1 },
    {PPC_VOR, 462, 1 },
    {PPC_WAIT, 463, 3 },
    {PPC_XORI, 466, 1 },
    {PPC_XORI8, 467, 1 },
    {PPC_XVCPSGNDP, 468, 1 },
    {PPC_XVCPSGNSP, 469, 1 },
    {PPC_XXPERMDI, 470, 5 },
    {PPC_XXPERMDIs, 475, 3 },
    {PPC_gBC, 478, 10 },
    {PPC_gBCA, 488, 10 },
    {PPC_gBCAat, 498, 2 },
    {PPC_gBCCTR, 500, 7 },
    {PPC_gBCCTRL, 507, 7 },
    {PPC_gBCL, 514, 10 },
    {PPC_gBCLA, 524, 10 },
    {PPC_gBCLAat, 534, 2 },
    {PPC_gBCLR, 536, 11 },
    {PPC_gBCLRL, 547, 11 },
    {PPC_gBCLat, 558, 2 },
    {PPC_gBCat, 560, 2 },
  };

  static const AliasPattern Patterns[] = {
    // PPC_ADDI - 0
    {0, 0, 3, 2 },
    // PPC_ADDI8 - 1
    {0, 2, 3, 2 },
    // PPC_ADDIS - 2
    {12, 4, 3, 2 },
    // PPC_ADDIS8 - 3
    {12, 6, 3, 2 },
    // PPC_ADDPCIS - 4
    {25, 8, 2, 2 },
    // PPC_BCC - 5
    {33, 10, 3, 2 },
    {46, 12, 3, 2 },
    {55, 14, 3, 2 },
    {69, 16, 3, 2 },
    {79, 18, 3, 2 },
    {93, 20, 3, 2 },
    {103, 22, 3, 2 },
    {116, 24, 3, 2 },
    {125, 26, 3, 2 },
    {139, 28, 3, 2 },
    {149, 30, 3, 2 },
    {163, 32, 3, 2 },
    {173, 34, 3, 2 },
    {186, 36, 3, 2 },
    {195, 38, 3, 2 },
    {209, 40, 3, 2 },
    {219, 42, 3, 2 },
    {233, 44, 3, 2 },
    {243, 46, 3, 2 },
    {256, 48, 3, 2 },
    {265, 50, 3, 2 },
    {279, 52, 3, 2 },
    {289, 54, 3, 2 },
    {303, 56, 3, 2 },
    // PPC_BCCA - 29
    {313, 58, 3, 2 },
    {327, 60, 3, 2 },
    {337, 62, 3, 2 },
    {352, 64, 3, 2 },
    {363, 66, 3, 2 },
    {378, 68, 3, 2 },
    {389, 70, 3, 2 },
    {403, 72, 3, 2 },
    {413, 74, 3, 2 },
    {428, 76, 3, 2 },
    {439, 78, 3, 2 },
    {454, 80, 3, 2 },
    {465, 82, 3, 2 },
    {479, 84, 3, 2 },
    {489, 86, 3, 2 },
    {504, 88, 3, 2 },
    {515, 90, 3, 2 },
    {530, 92, 3, 2 },
    {541, 94, 3, 2 },
    {555, 96, 3, 2 },
    {565, 98, 3, 2 },
    {580, 100, 3, 2 },
    {591, 102, 3, 2 },
    {606, 104, 3, 2 },
    // PPC_BCCCTR - 53
    {617, 106, 2, 2 },
    {627, 108, 2, 2 },
    {634, 110, 2, 2 },
    {645, 112, 2, 2 },
    {653, 114, 2, 2 },
    {664, 116, 2, 2 },
    {672, 118, 2, 2 },
    {682, 120, 2, 2 },
    {689, 122, 2, 2 },
    {700, 124, 2, 2 },
    {708, 126, 2, 2 },
    {719, 128, 2, 2 },
    {727, 130, 2, 2 },
    {737, 132, 2, 2 },
    {744, 134, 2, 2 },
    {755, 136, 2, 2 },
    {763, 138, 2, 2 },
    {774, 140, 2, 2 },
    {782, 142, 2, 2 },
    {792, 144, 2, 2 },
    {799, 146, 2, 2 },
    {810, 148, 2, 2 },
    {818, 150, 2, 2 },
    {829, 152, 2, 2 },
    // PPC_BCCCTRL - 77
    {837, 154, 2, 2 },
    {848, 156, 2, 2 },
    {856, 158, 2, 2 },
    {868, 160, 2, 2 },
    {877, 162, 2, 2 },
    {889, 164, 2, 2 },
    {898, 166, 2, 2 },
    {909, 168, 2, 2 },
    {917, 170, 2, 2 },
    {929, 172, 2, 2 },
    {938, 174, 2, 2 },
    {950, 176, 2, 2 },
    {959, 178, 2, 2 },
    {970, 180, 2, 2 },
    {978, 182, 2, 2 },
    {990, 184, 2, 2 },
    {999, 186, 2, 2 },
    {1011, 188, 2, 2 },
    {1020, 190, 2, 2 },
    {1031, 192, 2, 2 },
    {1039, 194, 2, 2 },
    {1051, 196, 2, 2 },
    {1060, 198, 2, 2 },
    {1072, 200, 2, 2 },
    // PPC_BCCL - 101
    {1081, 202, 3, 2 },
    {1095, 204, 3, 2 },
    {1105, 206, 3, 2 },
    {1120, 208, 3, 2 },
    {1131, 210, 3, 2 },
    {1146, 212, 3, 2 },
    {1157, 214, 3, 2 },
    {1171, 216, 3, 2 },
    {1181, 218, 3, 2 },
    {1196, 220, 3, 2 },
    {1207, 222, 3, 2 },
    {1222, 224, 3, 2 },
    {1233, 226, 3, 2 },
    {1247, 228, 3, 2 },
    {1257, 230, 3, 2 },
    {1272, 232, 3, 2 },
    {1283, 234, 3, 2 },
    {1298, 236, 3, 2 },
    {1309, 238, 3, 2 },
    {1323, 240, 3, 2 },
    {1333, 242, 3, 2 },
    {1348, 244, 3, 2 },
    {1359, 246, 3, 2 },
    {1374, 248, 3, 2 },
    // PPC_BCCLA - 125
    {1385, 250, 3, 2 },
    {1400, 252, 3, 2 },
    {1411, 254, 3, 2 },
    {1427, 256, 3, 2 },
    {1439, 258, 3, 2 },
    {1455, 260, 3, 2 },
    {1467, 262, 3, 2 },
    {1482, 264, 3, 2 },
    {1493, 266, 3, 2 },
    {1509, 268, 3, 2 },
    {1521, 270, 3, 2 },
    {1537, 272, 3, 2 },
    {1549, 274, 3, 2 },
    {1564, 276, 3, 2 },
    {1575, 278, 3, 2 },
    {1591, 280, 3, 2 },
    {1603, 282, 3, 2 },
    {1619, 284, 3, 2 },
    {1631, 286, 3, 2 },
    {1646, 288, 3, 2 },
    {1657, 290, 3, 2 },
    {1673, 292, 3, 2 },
    {1685, 294, 3, 2 },
    {1701, 296, 3, 2 },
    // PPC_BCCLR - 149
    {1713, 298, 2, 2 },
    {1722, 300, 2, 2 },
    {1728, 302, 2, 2 },
    {1738, 304, 2, 2 },
    {1745, 306, 2, 2 },
    {1755, 308, 2, 2 },
    {1762, 310, 2, 2 },
    {1771, 312, 2, 2 },
    {1777, 314, 2, 2 },
    {1787, 316, 2, 2 },
    {1794, 318, 2, 2 },
    {1804, 320, 2, 2 },
    {1811, 322, 2, 2 },
    {1820, 324, 2, 2 },
    {1826, 326, 2, 2 },
    {1836, 328, 2, 2 },
    {1843, 330, 2, 2 },
    {1853, 332, 2, 2 },
    {1860, 334, 2, 2 },
    {1869, 336, 2, 2 },
    {1875, 338, 2, 2 },
    {1885, 340, 2, 2 },
    {1892, 342, 2, 2 },
    {1902, 344, 2, 2 },
    // PPC_BCCLRL - 173
    {1909, 346, 2, 2 },
    {1919, 348, 2, 2 },
    {1926, 350, 2, 2 },
    {1937, 352, 2, 2 },
    {1945, 354, 2, 2 },
    {1956, 356, 2, 2 },
    {1964, 358, 2, 2 },
    {1974, 360, 2, 2 },
    {1981, 362, 2, 2 },
    {1992, 364, 2, 2 },
    {2000, 366, 2, 2 },
    {2011, 368, 2, 2 },
    {2019, 370, 2, 2 },
    {2029, 372, 2, 2 },
    {2036, 374, 2, 2 },
    {2047, 376, 2, 2 },
    {2055, 378, 2, 2 },
    {2066, 380, 2, 2 },
    {2074, 382, 2, 2 },
    {2084, 384, 2, 2 },
    {2091, 386, 2, 2 },
    {2102, 388, 2, 2 },
    {2110, 390, 2, 2 },
    {2121, 392, 2, 2 },
    // PPC_CMPD - 197
    {2129, 394, 3, 3 },
    // PPC_CMPDI - 198
    {2141, 397, 3, 2 },
    // PPC_CMPLD - 199
    {2156, 399, 3, 3 },
    // PPC_CMPLDI - 200
    {2169, 402, 3, 2 },
    // PPC_CMPLW - 201
    {2185, 404, 3, 3 },
    // PPC_CMPLWI - 202
    {2198, 407, 3, 2 },
    // PPC_CMPW - 203
    {2214, 409, 3, 3 },
    // PPC_CMPWI - 204
    {2226, 412, 3, 2 },
    // PPC_CNTLZW - 205
    {2241, 414, 2, 2 },
    // PPC_CNTLZW8 - 206
    {2241, 416, 2, 2 },
    // PPC_CNTLZW8_rec - 207
    {2255, 418, 2, 2 },
    // PPC_CNTLZW_rec - 208
    {2255, 420, 2, 2 },
    // PPC_CREQV - 209
    {2270, 422, 3, 3 },
    // PPC_CRNOR - 210
    {2279, 425, 3, 3 },
    // PPC_CROR - 211
    {2292, 428, 3, 3 },
    // PPC_CRXOR - 212
    {2306, 431, 3, 3 },
    // PPC_ISEL - 213
    {2315, 434, 4, 4 },
    {2333, 438, 4, 4 },
    {2351, 442, 4, 4 },
    // PPC_ISEL8 - 216
    {2315, 446, 4, 4 },
    {2333, 450, 4, 4 },
    {2351, 454, 4, 4 },
    // PPC_MBAR - 219
    {2369, 458, 1, 1 },
    // PPC_MFDCR - 220
    {2374, 459, 2, 2 },
    {2383, 461, 2, 2 },
    {2392, 463, 2, 2 },
    {2401, 465, 2, 2 },
    {2410, 467, 2, 2 },
    {2419, 469, 2, 2 },
    {2428, 471, 2, 2 },
    {2437, 473, 2, 2 },
    // PPC_MFSPR - 228
    {2446, 475, 2, 2 },
    {2455, 477, 2, 2 },
    {2466, 479, 2, 2 },
    {2476, 481, 2, 2 },
    {2486, 483, 2, 2 },
    {2494, 485, 2, 2 },
    {2503, 487, 2, 2 },
    {2513, 489, 2, 2 },
    {2523, 491, 2, 2 },
    {2534, 493, 2, 2 },
    {2543, 495, 2, 2 },
    {2552, 497, 2, 2 },
    {2562, 499, 2, 2 },
    {2572, 501, 2, 2 },
    {2582, 503, 2, 2 },
    {2592, 505, 2, 2 },
    {2601, 507, 2, 2 },
    {2610, 509, 2, 2 },
    {2619, 511, 2, 2 },
    {2628, 513, 2, 2 },
    {2641, 515, 2, 2 },
    {2655, 517, 2, 2 },
    {2669, 519, 2, 2 },
    {2683, 521, 2, 2 },
    {2697, 523, 2, 2 },
    {2711, 525, 2, 2 },
    {2725, 527, 2, 2 },
    {2739, 529, 2, 2 },
    {2753, 531, 2, 2 },
    {2767, 533, 2, 2 },
    {2781, 535, 2, 2 },
    {2795, 537, 2, 2 },
    {2809, 539, 2, 2 },
    {2823, 541, 2, 2 },
    {2837, 543, 2, 2 },
    {2851, 545, 2, 2 },
    {2865, 547, 2, 2 },
    {2874, 549, 2, 2 },
    {2883, 551, 2, 2 },
    {2893, 553, 2, 2 },
    {2902, 555, 2, 2 },
    {2912, 557, 2, 2 },
    {2922, 559, 2, 2 },
    {2932, 561, 2, 2 },
    {2942, 563, 2, 2 },
    {2952, 565, 2, 2 },
    // PPC_MFSPR8 - 274
    {2446, 567, 2, 2 },
    {2455, 569, 2, 2 },
    {2466, 571, 2, 2 },
    {2476, 573, 2, 2 },
    {2486, 575, 2, 2 },
    {2494, 577, 2, 2 },
    {2503, 579, 2, 2 },
    {2513, 581, 2, 2 },
    {2523, 583, 2, 2 },
    {2534, 585, 2, 2 },
    {2543, 587, 2, 2 },
    {2552, 589, 2, 2 },
    {2562, 591, 2, 2 },
    {2572, 593, 2, 2 },
    {2582, 595, 2, 2 },
    {2592, 597, 2, 2 },
    {2610, 599, 2, 2 },
    {2619, 601, 2, 2 },
    {2628, 603, 2, 2 },
    // PPC_MFTB - 293
    {2962, 605, 2, 2 },
    // PPC_MFVRSAVE - 294
    {2971, 607, 1, 1 },
    // PPC_MFVSRD - 295
    {2983, 608, 2, 2 },
    // PPC_MFVSRWZ - 296
    {2997, 610, 2, 2 },
    // PPC_MTCRF - 297
    {3012, 612, 2, 2 },
    // PPC_MTCRF8 - 298
    {3012, 614, 2, 2 },
    // PPC_MTDCR - 299
    {3020, 616, 2, 2 },
    {3029, 618, 2, 2 },
    {3038, 620, 2, 2 },
    {3047, 622, 2, 2 },
    {3056, 624, 2, 2 },
    {3065, 626, 2, 2 },
    {3074, 628, 2, 2 },
    {3083, 630, 2, 2 },
    // PPC_MTFSF - 307
    {3092, 632, 4, 4 },
    // PPC_MTFSFI - 308
    {3105, 636, 3, 3 },
    // PPC_MTFSFI_rec - 309
    {3119, 639, 3, 3 },
    // PPC_MTFSF_rec - 310
    {3134, 642, 4, 4 },
    // PPC_MTMSR - 311
    {3148, 646, 2, 2 },
    // PPC_MTMSRD - 312
    {3157, 648, 2, 2 },
    // PPC_MTSPR - 313
    {3167, 650, 2, 2 },
    {3176, 652, 2, 2 },
    {3187, 654, 2, 2 },
    {3195, 656, 2, 2 },
    {3204, 658, 2, 2 },
    {3214, 660, 2, 2 },
    {3224, 662, 2, 2 },
    {3235, 664, 2, 2 },
    {3244, 666, 2, 2 },
    {3253, 668, 2, 2 },
    {3263, 670, 2, 2 },
    {3273, 672, 2, 2 },
    {3283, 674, 2, 2 },
    {3293, 676, 2, 2 },
    {3302, 678, 2, 2 },
    {3311, 680, 2, 2 },
    {3320, 682, 2, 2 },
    {3329, 684, 2, 2 },
    {3338, 686, 2, 2 },
    {3351, 688, 2, 2 },
    {3365, 690, 2, 2 },
    {3379, 692, 2, 2 },
    {3393, 694, 2, 2 },
    {3407, 696, 2, 2 },
    {3421, 698, 2, 2 },
    {3435, 700, 2, 2 },
    {3449, 702, 2, 2 },
    {3463, 704, 2, 2 },
    {3477, 706, 2, 2 },
    {3491, 708, 2, 2 },
    {3505, 710, 2, 2 },
    {3519, 712, 2, 2 },
    {3533, 714, 2, 2 },
    {3547, 716, 2, 2 },
    {3561, 718, 2, 2 },
    {3575, 720, 2, 2 },
    {3584, 722, 2, 2 },
    {3593, 724, 2, 2 },
    {3603, 726, 2, 2 },
    {3612, 728, 2, 2 },
    {3622, 730, 2, 2 },
    {3632, 732, 2, 2 },
    {3642, 734, 2, 2 },
    {3652, 736, 2, 2 },
    {3662, 738, 2, 2 },
    // PPC_MTSPR8 - 358
    {3167, 740, 2, 2 },
    {3176, 742, 2, 2 },
    {3187, 744, 2, 2 },
    {3195, 746, 2, 2 },
    {3204, 748, 2, 2 },
    {3214, 750, 2, 2 },
    {3224, 752, 2, 2 },
    {3235, 754, 2, 2 },
    {3244, 756, 2, 2 },
    {3253, 758, 2, 2 },
    {3263, 760, 2, 2 },
    {3273, 762, 2, 2 },
    {3283, 764, 2, 2 },
    {3293, 766, 2, 2 },
    {3311, 768, 2, 2 },
    {3320, 770, 2, 2 },
    {3329, 772, 2, 2 },
    {3338, 774, 2, 2 },
    // PPC_MTVRSAVE - 376
    {3672, 776, 1, 1 },
    // PPC_MTVSRD - 377
    {3684, 777, 2, 2 },
    // PPC_MTVSRWA - 378
    {3698, 779, 2, 2 },
    // PPC_MTVSRWZ - 379
    {3713, 781, 2, 2 },
    // PPC_NOR - 380
    {3728, 783, 3, 3 },
    // PPC_NOR8 - 381
    {3728, 786, 3, 3 },
    // PPC_NOR8_rec - 382
    {3739, 789, 3, 3 },
    // PPC_NOR_rec - 383
    {3739, 792, 3, 3 },
    // PPC_OR - 384
    {3751, 795, 3, 3 },
    // PPC_OR8 - 385
    {3751, 798, 3, 3 },
    // PPC_OR8_rec - 386
    {3761, 801, 3, 3 },
    // PPC_ORI - 387
    {3772, 804, 3, 3 },
    // PPC_ORI8 - 388
    {3772, 807, 3, 3 },
    // PPC_OR_rec - 389
    {3761, 810, 3, 3 },
    // PPC_RFEBB - 390
    {3776, 813, 1, 1 },
    // PPC_RLDCL - 391
    {3782, 814, 4, 4 },
    // PPC_RLDCL_rec - 392
    {3799, 818, 4, 4 },
    // PPC_RLDICL - 393
    {3817, 822, 4, 4 },
    {3837, 826, 4, 3 },
    // PPC_RLDICL_32_64 - 395
    {3817, 829, 4, 4 },
    {3837, 833, 4, 3 },
    // PPC_RLDICL_rec - 397
    {3857, 836, 4, 4 },
    {3878, 840, 4, 3 },
    // PPC_RLWINM - 399
    {3899, 843, 5, 5 },
    {3919, 848, 5, 5 },
    // PPC_RLWINM8 - 401
    {3899, 853, 5, 5 },
    {3919, 858, 5, 5 },
    // PPC_RLWINM8_rec - 403
    {3939, 863, 5, 5 },
    {3960, 868, 5, 5 },
    // PPC_RLWINM_rec - 405
    {3939, 873, 5, 5 },
    {3960, 878, 5, 5 },
    // PPC_RLWNM - 407
    {3981, 883, 5, 5 },
    // PPC_RLWNM8 - 408
    {3981, 888, 5, 5 },
    // PPC_RLWNM8_rec - 409
    {3998, 893, 5, 5 },
    // PPC_RLWNM_rec - 410
    {3998, 898, 5, 5 },
    // PPC_SC - 411
    {4016, 903, 1, 1 },
    // PPC_SUBF - 412
    {4019, 904, 3, 3 },
    // PPC_SUBF8 - 413
    {4019, 907, 3, 3 },
    // PPC_SUBF8_rec - 414
    {4034, 910, 3, 3 },
    // PPC_SUBFC - 415
    {4050, 913, 3, 3 },
    // PPC_SUBFC8 - 416
    {4050, 916, 3, 3 },
    // PPC_SUBFC8_rec - 417
    {4066, 919, 3, 3 },
    // PPC_SUBFC_rec - 418
    {4066, 922, 3, 3 },
    // PPC_SUBF_rec - 419
    {4034, 925, 3, 3 },
    // PPC_SYNC - 420
    {4083, 928, 1, 1 },
    {4088, 929, 1, 1 },
    {4095, 930, 1, 1 },
    // PPC_TD - 423
    {4103, 931, 3, 3 },
    {4115, 934, 3, 3 },
    {4127, 937, 3, 3 },
    {4139, 940, 3, 3 },
    {4151, 943, 3, 3 },
    {4164, 946, 3, 3 },
    {4177, 949, 3, 3 },
    // PPC_TDI - 430
    {4188, 952, 3, 2 },
    {4203, 954, 3, 2 },
    {4218, 956, 3, 2 },
    {4233, 958, 3, 2 },
    {4248, 960, 3, 2 },
    {4264, 962, 3, 2 },
    {4280, 964, 3, 2 },
    // PPC_TEND - 437
    {4294, 966, 1, 1 },
    {4300, 967, 1, 1 },
    // PPC_TLBIE - 439
    {4309, 968, 2, 2 },
    // PPC_TLBRE2 - 440
    {4318, 970, 3, 3 },
    {4333, 973, 3, 3 },
    // PPC_TLBWE2 - 442
    {4348, 976, 3, 3 },
    {4363, 979, 3, 3 },
    // PPC_TSR - 444
    {4378, 982, 1, 1 },
    {4388, 983, 1, 1 },
    // PPC_TW - 446
    {4397, 984, 3, 3 },
    {4402, 987, 3, 3 },
    {4414, 990, 3, 3 },
    {4426, 993, 3, 3 },
    {4438, 996, 3, 3 },
    {4450, 999, 3, 3 },
    {4463, 1002, 3, 3 },
    {4476, 1005, 3, 3 },
    // PPC_TWI - 454
    {4487, 1008, 3, 2 },
    {4502, 1010, 3, 2 },
    {4517, 1012, 3, 2 },
    {4532, 1014, 3, 2 },
    {4547, 1016, 3, 2 },
    {4563, 1018, 3, 2 },
    {4579, 1020, 3, 2 },
    // PPC_VNOR - 461
    {4593, 1022, 3, 3 },
    // PPC_VOR - 462
    {4605, 1025, 3, 3 },
    // PPC_WAIT - 463
    {4616, 1028, 1, 1 },
    {4621, 1029, 1, 1 },
    {4629, 1030, 1, 1 },
    // PPC_XORI - 466
    {4638, 1031, 3, 3 },
    // PPC_XORI8 - 467
    {4638, 1034, 3, 3 },
    // PPC_XVCPSGNDP - 468
    {4643, 1037, 3, 3 },
    // PPC_XVCPSGNSP - 469
    {4658, 1040, 3, 3 },
    // PPC_XXPERMDI - 470
    {4673, 1043, 4, 4 },
    {4691, 1047, 4, 4 },
    {4709, 1051, 4, 4 },
    {4728, 1055, 4, 4 },
    {4747, 1059, 4, 4 },
    // PPC_XXPERMDIs - 475
    {4673, 1063, 3, 3 },
    {4691, 1066, 3, 3 },
    {4747, 1069, 3, 3 },
    // PPC_gBC - 478
    {4762, 1072, 3, 2 },
    {4774, 1074, 3, 2 },
    {4786, 1076, 3, 2 },
    {4799, 1078, 3, 2 },
    {4812, 1080, 3, 2 },
    {4825, 1082, 3, 2 },
    {4838, 1084, 3, 2 },
    {4853, 1086, 3, 2 },
    {4868, 1088, 3, 2 },
    {4882, 1090, 3, 2 },
    // PPC_gBCA - 488
    {4896, 1092, 3, 2 },
    {4909, 1094, 3, 2 },
    {4922, 1096, 3, 2 },
    {4936, 1098, 3, 2 },
    {4950, 1100, 3, 2 },
    {4964, 1102, 3, 2 },
    {4978, 1104, 3, 2 },
    {4994, 1106, 3, 2 },
    {5010, 1108, 3, 2 },
    {5025, 1110, 3, 2 },
    // PPC_gBCAat - 498
    {5040, 1112, 4, 3 },
    {5060, 1115, 4, 3 },
    // PPC_gBCCTR - 500
    {5080, 1118, 3, 3 },
    {5095, 1121, 3, 3 },
    {5104, 1124, 3, 3 },
    {5113, 1127, 3, 3 },
    {5123, 1130, 3, 3 },
    {5133, 1133, 3, 3 },
    {5143, 1136, 3, 3 },
    // PPC_gBCCTRL - 507
    {5153, 1139, 3, 3 },
    {5169, 1142, 3, 3 },
    {5179, 1145, 3, 3 },
    {5189, 1148, 3, 3 },
    {5200, 1151, 3, 3 },
    {5211, 1154, 3, 3 },
    {5222, 1157, 3, 3 },
    // PPC_gBCL - 514
    {5233, 1160, 3, 2 },
    {5246, 1162, 3, 2 },
    {5259, 1164, 3, 2 },
    {5273, 1166, 3, 2 },
    {5287, 1168, 3, 2 },
    {5301, 1170, 3, 2 },
    {5315, 1172, 3, 2 },
    {5331, 1174, 3, 2 },
    {5347, 1176, 3, 2 },
    {5362, 1178, 3, 2 },
    // PPC_gBCLA - 524
    {5377, 1180, 3, 2 },
    {5391, 1182, 3, 2 },
    {5405, 1184, 3, 2 },
    {5420, 1186, 3, 2 },
    {5435, 1188, 3, 2 },
    {5450, 1190, 3, 2 },
    {5465, 1192, 3, 2 },
    {5482, 1194, 3, 2 },
    {5499, 1196, 3, 2 },
    {5515, 1198, 3, 2 },
    // PPC_gBCLAat - 534
    {5531, 1200, 4, 3 },
    {5552, 1203, 4, 3 },
    // PPC_gBCLR - 536
    {5573, 1206, 3, 3 },
    {5587, 1209, 3, 3 },
    {5595, 1212, 3, 3 },
    {5603, 1215, 3, 3 },
    {5612, 1218, 3, 3 },
    {5621, 1221, 3, 3 },
    {5630, 1224, 3, 3 },
    {5639, 1227, 3, 3 },
    {5650, 1230, 3, 3 },
    {5661, 1233, 3, 3 },
    {5671, 1236, 3, 3 },
    // PPC_gBCLRL - 547
    {5681, 1239, 3, 3 },
    {5696, 1242, 3, 3 },
    {5705, 1245, 3, 3 },
    {5714, 1248, 3, 3 },
    {5724, 1251, 3, 3 },
    {5734, 1254, 3, 3 },
    {5744, 1257, 3, 3 },
    {5754, 1260, 3, 3 },
    {5766, 1263, 3, 3 },
    {5778, 1266, 3, 3 },
    {5789, 1269, 3, 3 },
    // PPC_gBCLat - 558
    {5800, 1272, 4, 3 },
    {5820, 1275, 4, 3 },
    // PPC_gBCat - 560
    {5840, 1278, 4, 3 },
    {5859, 1281, 4, 3 },
  };

  static const AliasPatternCond Conds[] = {
    // (ADDI gprc:$rD, ZERO, s16imm:$imm) - 0
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Reg, PPC_ZERO},
    // (ADDI8 g8rc:$rD, ZERO8, s16imm64:$imm) - 2
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Reg, PPC_ZERO8},
    // (ADDIS gprc:$rD, ZERO, s17imm:$imm) - 4
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Reg, PPC_ZERO},
    // (ADDIS8 g8rc:$rD, ZERO8, s17imm64:$imm) - 6
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Reg, PPC_ZERO8},
    // (ADDPCIS g8rc:$RT, 0) - 8
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (BCC 12, crrc:$cc, condbrtarget:$dst) - 10
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 12, CR0, condbrtarget:$dst) - 12
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 14, crrc:$cc, condbrtarget:$dst) - 14
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 14, CR0, condbrtarget:$dst) - 16
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 15, crrc:$cc, condbrtarget:$dst) - 18
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 15, CR0, condbrtarget:$dst) - 20
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 44, crrc:$cc, condbrtarget:$dst) - 22
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 44, CR0, condbrtarget:$dst) - 24
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 46, crrc:$cc, condbrtarget:$dst) - 26
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 46, CR0, condbrtarget:$dst) - 28
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 47, crrc:$cc, condbrtarget:$dst) - 30
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 47, CR0, condbrtarget:$dst) - 32
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 76, crrc:$cc, condbrtarget:$dst) - 34
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 76, CR0, condbrtarget:$dst) - 36
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 78, crrc:$cc, condbrtarget:$dst) - 38
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 78, CR0, condbrtarget:$dst) - 40
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 79, crrc:$cc, condbrtarget:$dst) - 42
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 79, CR0, condbrtarget:$dst) - 44
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 68, crrc:$cc, condbrtarget:$dst) - 46
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 68, CR0, condbrtarget:$dst) - 48
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 70, crrc:$cc, condbrtarget:$dst) - 50
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 70, CR0, condbrtarget:$dst) - 52
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCC 71, crrc:$cc, condbrtarget:$dst) - 54
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCC 71, CR0, condbrtarget:$dst) - 56
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 12, crrc:$cc, abscondbrtarget:$dst) - 58
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 12, CR0, abscondbrtarget:$dst) - 60
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 14, crrc:$cc, abscondbrtarget:$dst) - 62
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 14, CR0, abscondbrtarget:$dst) - 64
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 15, crrc:$cc, abscondbrtarget:$dst) - 66
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 15, CR0, abscondbrtarget:$dst) - 68
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 44, crrc:$cc, abscondbrtarget:$dst) - 70
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 44, CR0, abscondbrtarget:$dst) - 72
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 46, crrc:$cc, abscondbrtarget:$dst) - 74
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 46, CR0, abscondbrtarget:$dst) - 76
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 47, crrc:$cc, abscondbrtarget:$dst) - 78
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 47, CR0, abscondbrtarget:$dst) - 80
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 76, crrc:$cc, abscondbrtarget:$dst) - 82
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 76, CR0, abscondbrtarget:$dst) - 84
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 78, crrc:$cc, abscondbrtarget:$dst) - 86
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 78, CR0, abscondbrtarget:$dst) - 88
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 79, crrc:$cc, abscondbrtarget:$dst) - 90
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 79, CR0, abscondbrtarget:$dst) - 92
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 68, crrc:$cc, abscondbrtarget:$dst) - 94
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 68, CR0, abscondbrtarget:$dst) - 96
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 70, crrc:$cc, abscondbrtarget:$dst) - 98
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 70, CR0, abscondbrtarget:$dst) - 100
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCA 71, crrc:$cc, abscondbrtarget:$dst) - 102
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCA 71, CR0, abscondbrtarget:$dst) - 104
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 12, crrc:$cc) - 106
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 12, CR0) - 108
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 14, crrc:$cc) - 110
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 14, CR0) - 112
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 15, crrc:$cc) - 114
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 15, CR0) - 116
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 44, crrc:$cc) - 118
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 44, CR0) - 120
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 46, crrc:$cc) - 122
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 46, CR0) - 124
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 47, crrc:$cc) - 126
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 47, CR0) - 128
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 76, crrc:$cc) - 130
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 76, CR0) - 132
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 78, crrc:$cc) - 134
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 78, CR0) - 136
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 79, crrc:$cc) - 138
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 79, CR0) - 140
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 68, crrc:$cc) - 142
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 68, CR0) - 144
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 70, crrc:$cc) - 146
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 70, CR0) - 148
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTR 71, crrc:$cc) - 150
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTR 71, CR0) - 152
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 12, crrc:$cc) - 154
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 12, CR0) - 156
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 14, crrc:$cc) - 158
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 14, CR0) - 160
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 15, crrc:$cc) - 162
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 15, CR0) - 164
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 44, crrc:$cc) - 166
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 44, CR0) - 168
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 46, crrc:$cc) - 170
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 46, CR0) - 172
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 47, crrc:$cc) - 174
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 47, CR0) - 176
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 76, crrc:$cc) - 178
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 76, CR0) - 180
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 78, crrc:$cc) - 182
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 78, CR0) - 184
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 79, crrc:$cc) - 186
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 79, CR0) - 188
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 68, crrc:$cc) - 190
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 68, CR0) - 192
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 70, crrc:$cc) - 194
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 70, CR0) - 196
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCCTRL 71, crrc:$cc) - 198
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCCTRL 71, CR0) - 200
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 12, crrc:$cc, condbrtarget:$dst) - 202
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 12, CR0, condbrtarget:$dst) - 204
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 14, crrc:$cc, condbrtarget:$dst) - 206
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 14, CR0, condbrtarget:$dst) - 208
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 15, crrc:$cc, condbrtarget:$dst) - 210
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 15, CR0, condbrtarget:$dst) - 212
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 44, crrc:$cc, condbrtarget:$dst) - 214
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 44, CR0, condbrtarget:$dst) - 216
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 46, crrc:$cc, condbrtarget:$dst) - 218
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 46, CR0, condbrtarget:$dst) - 220
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 47, crrc:$cc, condbrtarget:$dst) - 222
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 47, CR0, condbrtarget:$dst) - 224
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 76, crrc:$cc, condbrtarget:$dst) - 226
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 76, CR0, condbrtarget:$dst) - 228
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 78, crrc:$cc, condbrtarget:$dst) - 230
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 78, CR0, condbrtarget:$dst) - 232
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 79, crrc:$cc, condbrtarget:$dst) - 234
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 79, CR0, condbrtarget:$dst) - 236
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 68, crrc:$cc, condbrtarget:$dst) - 238
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 68, CR0, condbrtarget:$dst) - 240
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 70, crrc:$cc, condbrtarget:$dst) - 242
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 70, CR0, condbrtarget:$dst) - 244
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCL 71, crrc:$cc, condbrtarget:$dst) - 246
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCL 71, CR0, condbrtarget:$dst) - 248
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 12, crrc:$cc, abscondbrtarget:$dst) - 250
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 12, CR0, abscondbrtarget:$dst) - 252
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 14, crrc:$cc, abscondbrtarget:$dst) - 254
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 14, CR0, abscondbrtarget:$dst) - 256
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 15, crrc:$cc, abscondbrtarget:$dst) - 258
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 15, CR0, abscondbrtarget:$dst) - 260
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 44, crrc:$cc, abscondbrtarget:$dst) - 262
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 44, CR0, abscondbrtarget:$dst) - 264
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 46, crrc:$cc, abscondbrtarget:$dst) - 266
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 46, CR0, abscondbrtarget:$dst) - 268
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 47, crrc:$cc, abscondbrtarget:$dst) - 270
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 47, CR0, abscondbrtarget:$dst) - 272
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 76, crrc:$cc, abscondbrtarget:$dst) - 274
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 76, CR0, abscondbrtarget:$dst) - 276
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 78, crrc:$cc, abscondbrtarget:$dst) - 278
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 78, CR0, abscondbrtarget:$dst) - 280
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 79, crrc:$cc, abscondbrtarget:$dst) - 282
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 79, CR0, abscondbrtarget:$dst) - 284
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 68, crrc:$cc, abscondbrtarget:$dst) - 286
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 68, CR0, abscondbrtarget:$dst) - 288
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 70, crrc:$cc, abscondbrtarget:$dst) - 290
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 70, CR0, abscondbrtarget:$dst) - 292
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLA 71, crrc:$cc, abscondbrtarget:$dst) - 294
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLA 71, CR0, abscondbrtarget:$dst) - 296
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 12, crrc:$cc) - 298
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 12, CR0) - 300
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 14, crrc:$cc) - 302
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 14, CR0) - 304
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 15, crrc:$cc) - 306
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 15, CR0) - 308
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 44, crrc:$cc) - 310
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 44, CR0) - 312
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 46, crrc:$cc) - 314
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 46, CR0) - 316
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 47, crrc:$cc) - 318
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 47, CR0) - 320
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 76, crrc:$cc) - 322
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 76, CR0) - 324
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 78, crrc:$cc) - 326
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 78, CR0) - 328
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 79, crrc:$cc) - 330
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 79, CR0) - 332
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 68, crrc:$cc) - 334
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 68, CR0) - 336
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 70, crrc:$cc) - 338
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 70, CR0) - 340
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLR 71, crrc:$cc) - 342
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLR 71, CR0) - 344
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 12, crrc:$cc) - 346
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 12, CR0) - 348
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 14, crrc:$cc) - 350
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 14, CR0) - 352
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 15, crrc:$cc) - 354
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 15, CR0) - 356
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 44, crrc:$cc) - 358
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 44, CR0) - 360
    {AliasPatternCond_K_Imm, uint32_t(44)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 46, crrc:$cc) - 362
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 46, CR0) - 364
    {AliasPatternCond_K_Imm, uint32_t(46)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 47, crrc:$cc) - 366
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 47, CR0) - 368
    {AliasPatternCond_K_Imm, uint32_t(47)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 76, crrc:$cc) - 370
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 76, CR0) - 372
    {AliasPatternCond_K_Imm, uint32_t(76)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 78, crrc:$cc) - 374
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 78, CR0) - 376
    {AliasPatternCond_K_Imm, uint32_t(78)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 79, crrc:$cc) - 378
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 79, CR0) - 380
    {AliasPatternCond_K_Imm, uint32_t(79)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 68, crrc:$cc) - 382
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 68, CR0) - 384
    {AliasPatternCond_K_Imm, uint32_t(68)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 70, crrc:$cc) - 386
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 70, CR0) - 388
    {AliasPatternCond_K_Imm, uint32_t(70)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (BCCLRL 71, crrc:$cc) - 390
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    // (BCCLRL 71, CR0) - 392
    {AliasPatternCond_K_Imm, uint32_t(71)},
    {AliasPatternCond_K_Reg, PPC_CR0},
    // (CMPD CR0, g8rc:$rA, g8rc:$rB) - 394
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CMPDI CR0, g8rc:$rA, s16imm64:$imm) - 397
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CMPLD CR0, g8rc:$rA, g8rc:$rB) - 399
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CMPLDI CR0, g8rc:$rA, u16imm64:$imm) - 402
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CMPLW CR0, gprc:$rA, gprc:$rB) - 404
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CMPLWI CR0, gprc:$rA, u16imm:$imm) - 407
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CMPW CR0, gprc:$rA, gprc:$rB) - 409
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CMPWI CR0, gprc:$rA, s16imm:$imm) - 412
    {AliasPatternCond_K_Reg, PPC_CR0},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CNTLZW gprc:$rA, gprc:$rS) - 414
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CNTLZW8 g8rc:$rA, g8rc:$rS) - 416
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CNTLZW8_rec g8rc:$rA, g8rc:$rS) - 418
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (CNTLZW_rec gprc:$rA, gprc:$rS) - 420
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (CREQV crbitrc:$bx, crbitrc:$bx, crbitrc:$bx) - 422
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_TiedReg, 0},
    {AliasPatternCond_K_TiedReg, 0},
    // (CRNOR crbitrc:$bx, crbitrc:$by, crbitrc:$by) - 425
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (CROR crbitrc:$bx, crbitrc:$by, crbitrc:$by) - 428
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (CRXOR crbitrc:$bx, crbitrc:$bx, crbitrc:$bx) - 431
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_TiedReg, 0},
    {AliasPatternCond_K_TiedReg, 0},
    // (ISEL gprc:$rT, gprc_nor0:$rA, gprc:$rB, CR0LT) - 434
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRC_NOR0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0LT},
    // (ISEL gprc:$rT, gprc_nor0:$rA, gprc:$rB, CR0GT) - 438
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRC_NOR0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0GT},
    // (ISEL gprc:$rT, gprc_nor0:$rA, gprc:$rB, CR0EQ) - 442
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRC_NOR0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0EQ},
    // (ISEL8 g8rc:$rT, g8rc_nox0:$rA, g8rc:$rB, CR0LT) - 446
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RC_NOX0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0LT},
    // (ISEL8 g8rc:$rT, g8rc_nox0:$rA, g8rc:$rB, CR0GT) - 450
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RC_NOX0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0GT},
    // (ISEL8 g8rc:$rT, g8rc_nox0:$rA, g8rc:$rB, CR0EQ) - 454
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RC_NOX0RegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Reg, PPC_CR0EQ},
    // (MBAR 0) - 458
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (MFDCR gprc:$Rx, 128) - 459
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(128)},
    // (MFDCR gprc:$Rx, 129) - 461
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(129)},
    // (MFDCR gprc:$Rx, 130) - 463
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(130)},
    // (MFDCR gprc:$Rx, 131) - 465
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(131)},
    // (MFDCR gprc:$Rx, 132) - 467
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(132)},
    // (MFDCR gprc:$Rx, 133) - 469
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(133)},
    // (MFDCR gprc:$Rx, 134) - 471
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(134)},
    // (MFDCR gprc:$Rx, 135) - 473
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(135)},
    // (MFSPR gprc:$Rx, 1) - 475
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(1)},
    // (MFSPR gprc:$Rx, 3) - 477
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(3)},
    // (MFSPR gprc:$Rx, 4) - 479
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(4)},
    // (MFSPR gprc:$Rx, 5) - 481
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(5)},
    // (MFSPR gprc:$Rx, 8) - 483
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(8)},
    // (MFSPR gprc:$Rx, 9) - 485
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(9)},
    // (MFSPR gprc:$Rx, 13) - 487
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(13)},
    // (MFSPR gprc:$Rx, 17) - 489
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(17)},
    // (MFSPR gprc:$Rx, 18) - 491
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(18)},
    // (MFSPR gprc:$Rx, 19) - 493
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(19)},
    // (MFSPR gprc:$Rx, 22) - 495
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(22)},
    // (MFSPR gprc:$Rx, 25) - 497
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(25)},
    // (MFSPR gprc:$Rx, 26) - 499
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(26)},
    // (MFSPR gprc:$Rx, 27) - 501
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(27)},
    // (MFSPR gprc:$Rx, 28) - 503
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(28)},
    // (MFSPR gprc:$Rx, 29) - 505
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(29)},
    // (MFSPR gprc:$Rx, 48) - 507
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(48)},
    // (MFSPR gprc:$RT, 280) - 509
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(280)},
    // (MFSPR gprc:$RT, 287) - 511
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(287)},
    // (MFSPR gprc:$Rx, 512) - 513
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(512)},
    // (MFSPR gprc:$Rx, 536) - 515
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(536)},
    // (MFSPR gprc:$Rx, 537) - 517
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(537)},
    // (MFSPR gprc:$Rx, 528) - 519
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(528)},
    // (MFSPR gprc:$Rx, 529) - 521
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(529)},
    // (MFSPR gprc:$Rx, 538) - 523
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(538)},
    // (MFSPR gprc:$Rx, 539) - 525
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(539)},
    // (MFSPR gprc:$Rx, 530) - 527
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(530)},
    // (MFSPR gprc:$Rx, 531) - 529
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(531)},
    // (MFSPR gprc:$Rx, 540) - 531
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(540)},
    // (MFSPR gprc:$Rx, 541) - 533
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(541)},
    // (MFSPR gprc:$Rx, 532) - 535
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(532)},
    // (MFSPR gprc:$Rx, 533) - 537
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(533)},
    // (MFSPR gprc:$Rx, 542) - 539
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(542)},
    // (MFSPR gprc:$Rx, 543) - 541
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(543)},
    // (MFSPR gprc:$Rx, 534) - 543
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(534)},
    // (MFSPR gprc:$Rx, 535) - 545
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(535)},
    // (MFSPR gprc:$RT, 896) - 547
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(896)},
    // (MFSPR gprc:$Rx, 980) - 549
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(980)},
    // (MFSPR gprc:$Rx, 981) - 551
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(981)},
    // (MFSPR gprc:$Rx, 986) - 553
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(986)},
    // (MFSPR gprc:$Rx, 988) - 555
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(988)},
    // (MFSPR gprc:$Rx, 989) - 557
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(989)},
    // (MFSPR gprc:$Rx, 990) - 559
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(990)},
    // (MFSPR gprc:$Rx, 991) - 561
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(991)},
    // (MFSPR gprc:$Rx, 1018) - 563
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(1018)},
    // (MFSPR gprc:$Rx, 1019) - 565
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(1019)},
    // (MFSPR8 g8rc:$Rx, 1) - 567
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(1)},
    // (MFSPR8 g8rc:$Rx, 3) - 569
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(3)},
    // (MFSPR8 g8rc:$Rx, 4) - 571
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(4)},
    // (MFSPR8 g8rc:$Rx, 5) - 573
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(5)},
    // (MFSPR8 g8rc:$Rx, 8) - 575
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(8)},
    // (MFSPR8 g8rc:$Rx, 9) - 577
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(9)},
    // (MFSPR8 g8rc:$Rx, 13) - 579
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(13)},
    // (MFSPR8 g8rc:$Rx, 17) - 581
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(17)},
    // (MFSPR8 g8rc:$Rx, 18) - 583
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(18)},
    // (MFSPR8 g8rc:$Rx, 19) - 585
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(19)},
    // (MFSPR8 g8rc:$Rx, 22) - 587
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(22)},
    // (MFSPR8 g8rc:$Rx, 25) - 589
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(25)},
    // (MFSPR8 g8rc:$Rx, 26) - 591
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(26)},
    // (MFSPR8 g8rc:$Rx, 27) - 593
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(27)},
    // (MFSPR8 g8rc:$Rx, 28) - 595
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(28)},
    // (MFSPR8 g8rc:$Rx, 29) - 597
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(29)},
    // (MFSPR8 g8rc:$RT, 280) - 599
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(280)},
    // (MFSPR8 g8rc:$RT, 287) - 601
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(287)},
    // (MFSPR8 g8rc:$Rx, 512) - 603
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(512)},
    // (MFTB gprc:$Rx, 269) - 605
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(269)},
    // (MFVRSAVE gprc:$rS) - 607
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MFVSRD g8rc:$rA, f8rc:$src) - 608
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    // (MFVSRWZ gprc:$rA, f8rc:$src) - 610
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    // (MTCRF 255, gprc:$rA) - 612
    {AliasPatternCond_K_Imm, uint32_t(255)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTCRF8 255, g8rc:$rA) - 614
    {AliasPatternCond_K_Imm, uint32_t(255)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTDCR gprc:$Rx, 128) - 616
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(128)},
    // (MTDCR gprc:$Rx, 129) - 618
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(129)},
    // (MTDCR gprc:$Rx, 130) - 620
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(130)},
    // (MTDCR gprc:$Rx, 131) - 622
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(131)},
    // (MTDCR gprc:$Rx, 132) - 624
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(132)},
    // (MTDCR gprc:$Rx, 133) - 626
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(133)},
    // (MTDCR gprc:$Rx, 134) - 628
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(134)},
    // (MTDCR gprc:$Rx, 135) - 630
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(135)},
    // (MTFSF i32imm:$FLM, f8rc:$FRB, 0, 0) - 632
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (MTFSFI crrc:$BF, i32imm:$U, 0) - 636
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (MTFSFI_rec crrc:$BF, i32imm:$U, 0) - 639
    {AliasPatternCond_K_RegClass, PPC_CRRCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (MTFSF_rec i32imm:$FLM, f8rc:$FRB, 0, 0) - 642
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (MTMSR gprc:$RS, 0) - 646
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (MTMSRD gprc:$RS, 0) - 648
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (MTSPR 1, gprc:$Rx) - 650
    {AliasPatternCond_K_Imm, uint32_t(1)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 3, gprc:$Rx) - 652
    {AliasPatternCond_K_Imm, uint32_t(3)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 8, gprc:$Rx) - 654
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 9, gprc:$Rx) - 656
    {AliasPatternCond_K_Imm, uint32_t(9)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 13, gprc:$Rx) - 658
    {AliasPatternCond_K_Imm, uint32_t(13)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 17, gprc:$Rx) - 660
    {AliasPatternCond_K_Imm, uint32_t(17)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 18, gprc:$Rx) - 662
    {AliasPatternCond_K_Imm, uint32_t(18)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 19, gprc:$Rx) - 664
    {AliasPatternCond_K_Imm, uint32_t(19)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 22, gprc:$Rx) - 666
    {AliasPatternCond_K_Imm, uint32_t(22)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 25, gprc:$Rx) - 668
    {AliasPatternCond_K_Imm, uint32_t(25)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 26, gprc:$Rx) - 670
    {AliasPatternCond_K_Imm, uint32_t(26)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 27, gprc:$Rx) - 672
    {AliasPatternCond_K_Imm, uint32_t(27)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 28, gprc:$Rx) - 674
    {AliasPatternCond_K_Imm, uint32_t(28)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 29, gprc:$Rx) - 676
    {AliasPatternCond_K_Imm, uint32_t(29)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 48, gprc:$Rx) - 678
    {AliasPatternCond_K_Imm, uint32_t(48)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 280, gprc:$RT) - 680
    {AliasPatternCond_K_Imm, uint32_t(280)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 284, gprc:$Rx) - 682
    {AliasPatternCond_K_Imm, uint32_t(284)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 285, gprc:$Rx) - 684
    {AliasPatternCond_K_Imm, uint32_t(285)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 512, gprc:$Rx) - 686
    {AliasPatternCond_K_Imm, uint32_t(512)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 536, gprc:$Rx) - 688
    {AliasPatternCond_K_Imm, uint32_t(536)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 537, gprc:$Rx) - 690
    {AliasPatternCond_K_Imm, uint32_t(537)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 528, gprc:$Rx) - 692
    {AliasPatternCond_K_Imm, uint32_t(528)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 529, gprc:$Rx) - 694
    {AliasPatternCond_K_Imm, uint32_t(529)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 538, gprc:$Rx) - 696
    {AliasPatternCond_K_Imm, uint32_t(538)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 539, gprc:$Rx) - 698
    {AliasPatternCond_K_Imm, uint32_t(539)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 530, gprc:$Rx) - 700
    {AliasPatternCond_K_Imm, uint32_t(530)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 531, gprc:$Rx) - 702
    {AliasPatternCond_K_Imm, uint32_t(531)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 540, gprc:$Rx) - 704
    {AliasPatternCond_K_Imm, uint32_t(540)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 541, gprc:$Rx) - 706
    {AliasPatternCond_K_Imm, uint32_t(541)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 532, gprc:$Rx) - 708
    {AliasPatternCond_K_Imm, uint32_t(532)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 533, gprc:$Rx) - 710
    {AliasPatternCond_K_Imm, uint32_t(533)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 542, gprc:$Rx) - 712
    {AliasPatternCond_K_Imm, uint32_t(542)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 543, gprc:$Rx) - 714
    {AliasPatternCond_K_Imm, uint32_t(543)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 534, gprc:$Rx) - 716
    {AliasPatternCond_K_Imm, uint32_t(534)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 535, gprc:$Rx) - 718
    {AliasPatternCond_K_Imm, uint32_t(535)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 896, gprc:$RT) - 720
    {AliasPatternCond_K_Imm, uint32_t(896)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 980, gprc:$Rx) - 722
    {AliasPatternCond_K_Imm, uint32_t(980)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 981, gprc:$Rx) - 724
    {AliasPatternCond_K_Imm, uint32_t(981)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 986, gprc:$Rx) - 726
    {AliasPatternCond_K_Imm, uint32_t(986)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 988, gprc:$Rx) - 728
    {AliasPatternCond_K_Imm, uint32_t(988)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 989, gprc:$Rx) - 730
    {AliasPatternCond_K_Imm, uint32_t(989)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 990, gprc:$Rx) - 732
    {AliasPatternCond_K_Imm, uint32_t(990)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 991, gprc:$Rx) - 734
    {AliasPatternCond_K_Imm, uint32_t(991)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 1018, gprc:$Rx) - 736
    {AliasPatternCond_K_Imm, uint32_t(1018)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR 1019, gprc:$Rx) - 738
    {AliasPatternCond_K_Imm, uint32_t(1019)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTSPR8 1, g8rc:$Rx) - 740
    {AliasPatternCond_K_Imm, uint32_t(1)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 3, g8rc:$Rx) - 742
    {AliasPatternCond_K_Imm, uint32_t(3)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 8, g8rc:$Rx) - 744
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 9, g8rc:$Rx) - 746
    {AliasPatternCond_K_Imm, uint32_t(9)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 13, g8rc:$Rx) - 748
    {AliasPatternCond_K_Imm, uint32_t(13)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 17, g8rc:$Rx) - 750
    {AliasPatternCond_K_Imm, uint32_t(17)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 18, g8rc:$Rx) - 752
    {AliasPatternCond_K_Imm, uint32_t(18)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 19, g8rc:$Rx) - 754
    {AliasPatternCond_K_Imm, uint32_t(19)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 22, g8rc:$Rx) - 756
    {AliasPatternCond_K_Imm, uint32_t(22)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 25, g8rc:$Rx) - 758
    {AliasPatternCond_K_Imm, uint32_t(25)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 26, g8rc:$Rx) - 760
    {AliasPatternCond_K_Imm, uint32_t(26)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 27, g8rc:$Rx) - 762
    {AliasPatternCond_K_Imm, uint32_t(27)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 28, g8rc:$Rx) - 764
    {AliasPatternCond_K_Imm, uint32_t(28)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 29, g8rc:$Rx) - 766
    {AliasPatternCond_K_Imm, uint32_t(29)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 280, g8rc:$RT) - 768
    {AliasPatternCond_K_Imm, uint32_t(280)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 284, g8rc:$Rx) - 770
    {AliasPatternCond_K_Imm, uint32_t(284)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 285, g8rc:$Rx) - 772
    {AliasPatternCond_K_Imm, uint32_t(285)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTSPR8 512, g8rc:$Rx) - 774
    {AliasPatternCond_K_Imm, uint32_t(512)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTVRSAVE gprc:$rS) - 776
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTVSRD f8rc:$dst, g8rc:$rA) - 777
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (MTVSRWA f8rc:$dst, gprc:$rA) - 779
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (MTVSRWZ f8rc:$dst, gprc:$rA) - 781
    {AliasPatternCond_K_RegClass, PPC_F8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (NOR gprc:$rA, gprc:$rS, gprc:$rS) - 783
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (NOR8 g8rc:$rA, g8rc:$rB, g8rc:$rB) - 786
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (NOR8_rec g8rc:$rA, g8rc:$rB, g8rc:$rB) - 789
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (NOR_rec gprc:$rA, gprc:$rS, gprc:$rS) - 792
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (OR gprc:$rA, gprc:$rB, gprc:$rB) - 795
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (OR8 g8rc:$rA, g8rc:$rB, g8rc:$rB) - 798
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (OR8_rec g8rc:$rA, g8rc:$rB, g8rc:$rB) - 801
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (ORI R0, R0, 0) - 804
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (ORI8 X0, X0, 0) - 807
    {AliasPatternCond_K_Reg, PPC_X0},
    {AliasPatternCond_K_Reg, PPC_X0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (OR_rec gprc:$rA, gprc:$rB, gprc:$rB) - 810
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (RFEBB 1) - 813
    {AliasPatternCond_K_Imm, uint32_t(1)},
    // (RLDCL g8rc:$rA, g8rc:$rS, gprc:$rB, 0) - 814
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (RLDCL_rec g8rc:$rA, g8rc:$rS, gprc:$rB, 0) - 818
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (RLDICL g8rc:$rA, g8rc:$rS, u6imm:$n, 0) - 822
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (RLDICL g8rc:$rA, g8rc:$rS, 0, u6imm:$n) - 826
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (RLDICL_32_64 g8rc:$rA, gprc:$rS, u6imm:$n, 0) - 829
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (RLDICL_32_64 g8rc:$rA, gprc:$rS, 0, u6imm:$n) - 833
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (RLDICL_rec g8rc:$rA, g8rc:$rS, u6imm:$n, 0) - 836
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (RLDICL_rec g8rc:$rA, g8rc:$rS, 0, u6imm:$n) - 840
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (RLWINM gprc:$rA, gprc:$rS, u5imm:$n, 0, 31) - 843
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWINM gprc:$rA, gprc:$rS, 0, u5imm:$n, 31) - 848
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWINM8 g8rc:$rA, g8rc:$rS, u5imm:$n, 0, 31) - 853
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWINM8 g8rc:$rA, g8rc:$rS, 0, u5imm:$n, 31) - 858
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWINM8_rec g8rc:$rA, g8rc:$rS, u5imm:$n, 0, 31) - 863
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWINM8_rec g8rc:$rA, g8rc:$rS, 0, u5imm:$n, 31) - 868
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWINM_rec gprc:$rA, gprc:$rS, u5imm:$n, 0, 31) - 873
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWINM_rec gprc:$rA, gprc:$rS, 0, u5imm:$n, 31) - 878
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWNM gprc:$rA, gprc:$rS, gprc:$rB, 0, 31) - 883
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWNM8 g8rc:$rA, g8rc:$rS, g8rc:$rB, 0, 31) - 888
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWNM8_rec g8rc:$rA, g8rc:$rS, g8rc:$rB, 0, 31) - 893
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (RLWNM_rec gprc:$rA, gprc:$rS, gprc:$rB, 0, 31) - 898
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_Imm, uint32_t(31)},
    // (SC 0) - 903
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (SUBF gprc:$rA, gprc:$rC, gprc:$rB) - 904
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (SUBF8 g8rc:$rA, g8rc:$rC, g8rc:$rB) - 907
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (SUBF8_rec g8rc:$rA, g8rc:$rC, g8rc:$rB) - 910
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (SUBFC gprc:$rA, gprc:$rC, gprc:$rB) - 913
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (SUBFC8 g8rc:$rA, g8rc:$rC, g8rc:$rB) - 916
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (SUBFC8_rec g8rc:$rA, g8rc:$rC, g8rc:$rB) - 919
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (SUBFC_rec gprc:$rA, gprc:$rC, gprc:$rB) - 922
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (SUBF_rec gprc:$rA, gprc:$rC, gprc:$rB) - 925
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (SYNC 0) - 928
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (SYNC 1) - 929
    {AliasPatternCond_K_Imm, uint32_t(1)},
    // (SYNC 2) - 930
    {AliasPatternCond_K_Imm, uint32_t(2)},
    // (TD 16, g8rc:$rA, g8rc:$rB) - 931
    {AliasPatternCond_K_Imm, uint32_t(16)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 4, g8rc:$rA, g8rc:$rB) - 934
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 8, g8rc:$rA, g8rc:$rB) - 937
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 24, g8rc:$rA, g8rc:$rB) - 940
    {AliasPatternCond_K_Imm, uint32_t(24)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 2, g8rc:$rA, g8rc:$rB) - 943
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 1, g8rc:$rA, g8rc:$rB) - 946
    {AliasPatternCond_K_Imm, uint32_t(1)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TD 31, g8rc:$rA, g8rc:$rB) - 949
    {AliasPatternCond_K_Imm, uint32_t(31)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 16, g8rc:$rA, s16imm:$imm) - 952
    {AliasPatternCond_K_Imm, uint32_t(16)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 4, g8rc:$rA, s16imm:$imm) - 954
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 8, g8rc:$rA, s16imm:$imm) - 956
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 24, g8rc:$rA, s16imm:$imm) - 958
    {AliasPatternCond_K_Imm, uint32_t(24)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 2, g8rc:$rA, s16imm:$imm) - 960
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 1, g8rc:$rA, s16imm:$imm) - 962
    {AliasPatternCond_K_Imm, uint32_t(1)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TDI 31, g8rc:$rA, s16imm:$imm) - 964
    {AliasPatternCond_K_Imm, uint32_t(31)},
    {AliasPatternCond_K_RegClass, PPC_G8RCRegClassID},
    // (TEND 0) - 966
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (TEND 1) - 967
    {AliasPatternCond_K_Imm, uint32_t(1)},
    // (TLBIE R0, gprc:$RB) - 968
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TLBRE2 gprc:$RS, gprc:$A, 0) - 970
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (TLBRE2 gprc:$RS, gprc:$A, 1) - 973
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(1)},
    // (TLBWE2 gprc:$RS, gprc:$A, 0) - 976
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (TLBWE2 gprc:$RS, gprc:$A, 1) - 979
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(1)},
    // (TSR 0) - 982
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (TSR 1) - 983
    {AliasPatternCond_K_Imm, uint32_t(1)},
    // (TW 31, R0, R0) - 984
    {AliasPatternCond_K_Imm, uint32_t(31)},
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_Reg, PPC_R0},
    // (TW 16, gprc:$rA, gprc:$rB) - 987
    {AliasPatternCond_K_Imm, uint32_t(16)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 4, gprc:$rA, gprc:$rB) - 990
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 8, gprc:$rA, gprc:$rB) - 993
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 24, gprc:$rA, gprc:$rB) - 996
    {AliasPatternCond_K_Imm, uint32_t(24)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 2, gprc:$rA, gprc:$rB) - 999
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 1, gprc:$rA, gprc:$rB) - 1002
    {AliasPatternCond_K_Imm, uint32_t(1)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TW 31, gprc:$rA, gprc:$rB) - 1005
    {AliasPatternCond_K_Imm, uint32_t(31)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 16, gprc:$rA, s16imm:$imm) - 1008
    {AliasPatternCond_K_Imm, uint32_t(16)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 4, gprc:$rA, s16imm:$imm) - 1010
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 8, gprc:$rA, s16imm:$imm) - 1012
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 24, gprc:$rA, s16imm:$imm) - 1014
    {AliasPatternCond_K_Imm, uint32_t(24)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 2, gprc:$rA, s16imm:$imm) - 1016
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 1, gprc:$rA, s16imm:$imm) - 1018
    {AliasPatternCond_K_Imm, uint32_t(1)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (TWI 31, gprc:$rA, s16imm:$imm) - 1020
    {AliasPatternCond_K_Imm, uint32_t(31)},
    {AliasPatternCond_K_RegClass, PPC_GPRCRegClassID},
    // (VNOR vrrc:$vD, vrrc:$vA, vrrc:$vA) - 1022
    {AliasPatternCond_K_RegClass, PPC_VRRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VRRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (VOR vrrc:$vD, vrrc:$vA, vrrc:$vA) - 1025
    {AliasPatternCond_K_RegClass, PPC_VRRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VRRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (WAIT 0) - 1028
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (WAIT 1) - 1029
    {AliasPatternCond_K_Imm, uint32_t(1)},
    // (WAIT 2) - 1030
    {AliasPatternCond_K_Imm, uint32_t(2)},
    // (XORI R0, R0, 0) - 1031
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_Reg, PPC_R0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (XORI8 X0, X0, 0) - 1034
    {AliasPatternCond_K_Reg, PPC_X0},
    {AliasPatternCond_K_Reg, PPC_X0},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (XVCPSGNDP vsrc:$XT, vsrc:$XB, vsrc:$XB) - 1037
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (XVCPSGNSP vsrc:$XT, vsrc:$XB, vsrc:$XB) - 1040
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 0) - 1043
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 3) - 1047
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Imm, uint32_t(3)},
    // (XXPERMDI vsrc:$XT, vsrc:$XA, vsrc:$XB, 0) - 1051
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (XXPERMDI vsrc:$XT, vsrc:$XA, vsrc:$XB, 3) - 1055
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(3)},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 2) - 1059
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_TiedReg, 1},
    {AliasPatternCond_K_Imm, uint32_t(2)},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 0) - 1063
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSFRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 3) - 1066
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSFRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(3)},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 2) - 1069
    {AliasPatternCond_K_RegClass, PPC_VSRCRegClassID},
    {AliasPatternCond_K_RegClass, PPC_VSFRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(2)},
    // (gBC 12, crbitrc:$bi, condbrtarget:$dst) - 1072
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 4, crbitrc:$bi, condbrtarget:$dst) - 1074
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 14, crbitrc:$bi, condbrtarget:$dst) - 1076
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 6, crbitrc:$bi, condbrtarget:$dst) - 1078
    {AliasPatternCond_K_Imm, uint32_t(6)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 15, crbitrc:$bi, condbrtarget:$dst) - 1080
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 7, crbitrc:$bi, condbrtarget:$dst) - 1082
    {AliasPatternCond_K_Imm, uint32_t(7)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 8, crbitrc:$bi, condbrtarget:$dst) - 1084
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 0, crbitrc:$bi, condbrtarget:$dst) - 1086
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 10, crbitrc:$bi, condbrtarget:$dst) - 1088
    {AliasPatternCond_K_Imm, uint32_t(10)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBC 2, crbitrc:$bi, condbrtarget:$dst) - 1090
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 12, crbitrc:$bi, abscondbrtarget:$dst) - 1092
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 4, crbitrc:$bi, abscondbrtarget:$dst) - 1094
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 14, crbitrc:$bi, abscondbrtarget:$dst) - 1096
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 6, crbitrc:$bi, abscondbrtarget:$dst) - 1098
    {AliasPatternCond_K_Imm, uint32_t(6)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 15, crbitrc:$bi, abscondbrtarget:$dst) - 1100
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 7, crbitrc:$bi, abscondbrtarget:$dst) - 1102
    {AliasPatternCond_K_Imm, uint32_t(7)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 8, crbitrc:$bi, abscondbrtarget:$dst) - 1104
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 0, crbitrc:$bi, abscondbrtarget:$dst) - 1106
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 10, crbitrc:$bi, abscondbrtarget:$dst) - 1108
    {AliasPatternCond_K_Imm, uint32_t(10)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCA 2, crbitrc:$bi, abscondbrtarget:$dst) - 1110
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCAat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1112
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(3)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCAat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1115
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCCTR u5imm:$bo, crbitrc:$bi, 0) - 1118
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTR 12, crbitrc:$bi, 0) - 1121
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTR 4, crbitrc:$bi, 0) - 1124
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTR 14, crbitrc:$bi, 0) - 1127
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTR 6, crbitrc:$bi, 0) - 1130
    {AliasPatternCond_K_Imm, uint32_t(6)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTR 15, crbitrc:$bi, 0) - 1133
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTR 7, crbitrc:$bi, 0) - 1136
    {AliasPatternCond_K_Imm, uint32_t(7)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTRL u5imm:$bo, crbitrc:$bi, 0) - 1139
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTRL 12, crbitrc:$bi, 0) - 1142
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTRL 4, crbitrc:$bi, 0) - 1145
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTRL 14, crbitrc:$bi, 0) - 1148
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTRL 6, crbitrc:$bi, 0) - 1151
    {AliasPatternCond_K_Imm, uint32_t(6)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTRL 15, crbitrc:$bi, 0) - 1154
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCCTRL 7, crbitrc:$bi, 0) - 1157
    {AliasPatternCond_K_Imm, uint32_t(7)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCL 12, crbitrc:$bi, condbrtarget:$dst) - 1160
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 4, crbitrc:$bi, condbrtarget:$dst) - 1162
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 14, crbitrc:$bi, condbrtarget:$dst) - 1164
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 6, crbitrc:$bi, condbrtarget:$dst) - 1166
    {AliasPatternCond_K_Imm, uint32_t(6)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 15, crbitrc:$bi, condbrtarget:$dst) - 1168
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 7, crbitrc:$bi, condbrtarget:$dst) - 1170
    {AliasPatternCond_K_Imm, uint32_t(7)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 8, crbitrc:$bi, condbrtarget:$dst) - 1172
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 0, crbitrc:$bi, condbrtarget:$dst) - 1174
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 10, crbitrc:$bi, condbrtarget:$dst) - 1176
    {AliasPatternCond_K_Imm, uint32_t(10)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCL 2, crbitrc:$bi, condbrtarget:$dst) - 1178
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 12, crbitrc:$bi, abscondbrtarget:$dst) - 1180
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 4, crbitrc:$bi, abscondbrtarget:$dst) - 1182
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 14, crbitrc:$bi, abscondbrtarget:$dst) - 1184
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 6, crbitrc:$bi, abscondbrtarget:$dst) - 1186
    {AliasPatternCond_K_Imm, uint32_t(6)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 15, crbitrc:$bi, abscondbrtarget:$dst) - 1188
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 7, crbitrc:$bi, abscondbrtarget:$dst) - 1190
    {AliasPatternCond_K_Imm, uint32_t(7)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 8, crbitrc:$bi, abscondbrtarget:$dst) - 1192
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 0, crbitrc:$bi, abscondbrtarget:$dst) - 1194
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 10, crbitrc:$bi, abscondbrtarget:$dst) - 1196
    {AliasPatternCond_K_Imm, uint32_t(10)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLA 2, crbitrc:$bi, abscondbrtarget:$dst) - 1198
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLAat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1200
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(3)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLAat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1203
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLR u5imm:$bo, crbitrc:$bi, 0) - 1206
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLR 12, crbitrc:$bi, 0) - 1209
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLR 4, crbitrc:$bi, 0) - 1212
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLR 14, crbitrc:$bi, 0) - 1215
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLR 6, crbitrc:$bi, 0) - 1218
    {AliasPatternCond_K_Imm, uint32_t(6)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLR 15, crbitrc:$bi, 0) - 1221
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLR 7, crbitrc:$bi, 0) - 1224
    {AliasPatternCond_K_Imm, uint32_t(7)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLR 8, crbitrc:$bi, 0) - 1227
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLR 0, crbitrc:$bi, 0) - 1230
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLR 10, crbitrc:$bi, 0) - 1233
    {AliasPatternCond_K_Imm, uint32_t(10)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLR 2, crbitrc:$bi, 0) - 1236
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL u5imm:$bo, crbitrc:$bi, 0) - 1239
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL 12, crbitrc:$bi, 0) - 1242
    {AliasPatternCond_K_Imm, uint32_t(12)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL 4, crbitrc:$bi, 0) - 1245
    {AliasPatternCond_K_Imm, uint32_t(4)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL 14, crbitrc:$bi, 0) - 1248
    {AliasPatternCond_K_Imm, uint32_t(14)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL 6, crbitrc:$bi, 0) - 1251
    {AliasPatternCond_K_Imm, uint32_t(6)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL 15, crbitrc:$bi, 0) - 1254
    {AliasPatternCond_K_Imm, uint32_t(15)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL 7, crbitrc:$bi, 0) - 1257
    {AliasPatternCond_K_Imm, uint32_t(7)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL 8, crbitrc:$bi, 0) - 1260
    {AliasPatternCond_K_Imm, uint32_t(8)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL 0, crbitrc:$bi, 0) - 1263
    {AliasPatternCond_K_Imm, uint32_t(0)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL 10, crbitrc:$bi, 0) - 1266
    {AliasPatternCond_K_Imm, uint32_t(10)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLRL 2, crbitrc:$bi, 0) - 1269
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    {AliasPatternCond_K_Imm, uint32_t(0)},
    // (gBCLat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1272
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(3)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCLat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1275
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1278
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(3)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
    // (gBCat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1281
    {AliasPatternCond_K_Ignore, 0},
    {AliasPatternCond_K_Imm, uint32_t(2)},
    {AliasPatternCond_K_RegClass, PPC_CRBITRCRegClassID},
  };

  static const char AsmStrings[] =
    /* 0 */ "li $\x01, $\xFF\x03\x01\0"
    /* 12 */ "lis $\x01, $\xFF\x03\x01\0"
    /* 25 */ "lnia $\x01\0"
    /* 33 */ "blt $\x02, $\xFF\x03\x02\0"
    /* 46 */ "blt $\xFF\x03\x02\0"
    /* 55 */ "blt- $\x02, $\xFF\x03\x02\0"
    /* 69 */ "blt- $\xFF\x03\x02\0"
    /* 79 */ "blt+ $\x02, $\xFF\x03\x02\0"
    /* 93 */ "blt+ $\xFF\x03\x02\0"
    /* 103 */ "bgt $\x02, $\xFF\x03\x02\0"
    /* 116 */ "bgt $\xFF\x03\x02\0"
    /* 125 */ "bgt- $\x02, $\xFF\x03\x02\0"
    /* 139 */ "bgt- $\xFF\x03\x02\0"
    /* 149 */ "bgt+ $\x02, $\xFF\x03\x02\0"
    /* 163 */ "bgt+ $\xFF\x03\x02\0"
    /* 173 */ "beq $\x02, $\xFF\x03\x02\0"
    /* 186 */ "beq $\xFF\x03\x02\0"
    /* 195 */ "beq- $\x02, $\xFF\x03\x02\0"
    /* 209 */ "beq- $\xFF\x03\x02\0"
    /* 219 */ "beq+ $\x02, $\xFF\x03\x02\0"
    /* 233 */ "beq+ $\xFF\x03\x02\0"
    /* 243 */ "bne $\x02, $\xFF\x03\x02\0"
    /* 256 */ "bne $\xFF\x03\x02\0"
    /* 265 */ "bne- $\x02, $\xFF\x03\x02\0"
    /* 279 */ "bne- $\xFF\x03\x02\0"
    /* 289 */ "bne+ $\x02, $\xFF\x03\x02\0"
    /* 303 */ "bne+ $\xFF\x03\x02\0"
    /* 313 */ "blta $\x02, $\xFF\x03\x03\0"
    /* 327 */ "blta $\xFF\x03\x03\0"
    /* 337 */ "blta- $\x02, $\xFF\x03\x03\0"
    /* 352 */ "blta- $\xFF\x03\x03\0"
    /* 363 */ "blta+ $\x02, $\xFF\x03\x03\0"
    /* 378 */ "blta+ $\xFF\x03\x03\0"
    /* 389 */ "bgta $\x02, $\xFF\x03\x03\0"
    /* 403 */ "bgta $\xFF\x03\x03\0"
    /* 413 */ "bgta- $\x02, $\xFF\x03\x03\0"
    /* 428 */ "bgta- $\xFF\x03\x03\0"
    /* 439 */ "bgta+ $\x02, $\xFF\x03\x03\0"
    /* 454 */ "bgta+ $\xFF\x03\x03\0"
    /* 465 */ "beqa $\x02, $\xFF\x03\x03\0"
    /* 479 */ "beqa $\xFF\x03\x03\0"
    /* 489 */ "beqa- $\x02, $\xFF\x03\x03\0"
    /* 504 */ "beqa- $\xFF\x03\x03\0"
    /* 515 */ "beqa+ $\x02, $\xFF\x03\x03\0"
    /* 530 */ "beqa+ $\xFF\x03\x03\0"
    /* 541 */ "bnea $\x02, $\xFF\x03\x03\0"
    /* 555 */ "bnea $\xFF\x03\x03\0"
    /* 565 */ "bnea- $\x02, $\xFF\x03\x03\0"
    /* 580 */ "bnea- $\xFF\x03\x03\0"
    /* 591 */ "bnea+ $\x02, $\xFF\x03\x03\0"
    /* 606 */ "bnea+ $\xFF\x03\x03\0"
    /* 617 */ "bltctr $\x02\0"
    /* 627 */ "bltctr\0"
    /* 634 */ "bltctr- $\x02\0"
    /* 645 */ "bltctr-\0"
    /* 653 */ "bltctr+ $\x02\0"
    /* 664 */ "bltctr+\0"
    /* 672 */ "bgtctr $\x02\0"
    /* 682 */ "bgtctr\0"
    /* 689 */ "bgtctr- $\x02\0"
    /* 700 */ "bgtctr-\0"
    /* 708 */ "bgtctr+ $\x02\0"
    /* 719 */ "bgtctr+\0"
    /* 727 */ "beqctr $\x02\0"
    /* 737 */ "beqctr\0"
    /* 744 */ "beqctr- $\x02\0"
    /* 755 */ "beqctr-\0"
    /* 763 */ "beqctr+ $\x02\0"
    /* 774 */ "beqctr+\0"
    /* 782 */ "bnectr $\x02\0"
    /* 792 */ "bnectr\0"
    /* 799 */ "bnectr- $\x02\0"
    /* 810 */ "bnectr-\0"
    /* 818 */ "bnectr+ $\x02\0"
    /* 829 */ "bnectr+\0"
    /* 837 */ "bltctrl $\x02\0"
    /* 848 */ "bltctrl\0"
    /* 856 */ "bltctrl- $\x02\0"
    /* 868 */ "bltctrl-\0"
    /* 877 */ "bltctrl+ $\x02\0"
    /* 889 */ "bltctrl+\0"
    /* 898 */ "bgtctrl $\x02\0"
    /* 909 */ "bgtctrl\0"
    /* 917 */ "bgtctrl- $\x02\0"
    /* 929 */ "bgtctrl-\0"
    /* 938 */ "bgtctrl+ $\x02\0"
    /* 950 */ "bgtctrl+\0"
    /* 959 */ "beqctrl $\x02\0"
    /* 970 */ "beqctrl\0"
    /* 978 */ "beqctrl- $\x02\0"
    /* 990 */ "beqctrl-\0"
    /* 999 */ "beqctrl+ $\x02\0"
    /* 1011 */ "beqctrl+\0"
    /* 1020 */ "bnectrl $\x02\0"
    /* 1031 */ "bnectrl\0"
    /* 1039 */ "bnectrl- $\x02\0"
    /* 1051 */ "bnectrl-\0"
    /* 1060 */ "bnectrl+ $\x02\0"
    /* 1072 */ "bnectrl+\0"
    /* 1081 */ "bltl $\x02, $\xFF\x03\x02\0"
    /* 1095 */ "bltl $\xFF\x03\x02\0"
    /* 1105 */ "bltl- $\x02, $\xFF\x03\x02\0"
    /* 1120 */ "bltl- $\xFF\x03\x02\0"
    /* 1131 */ "bltl+ $\x02, $\xFF\x03\x02\0"
    /* 1146 */ "bltl+ $\xFF\x03\x02\0"
    /* 1157 */ "bgtl $\x02, $\xFF\x03\x02\0"
    /* 1171 */ "bgtl $\xFF\x03\x02\0"
    /* 1181 */ "bgtl- $\x02, $\xFF\x03\x02\0"
    /* 1196 */ "bgtl- $\xFF\x03\x02\0"
    /* 1207 */ "bgtl+ $\x02, $\xFF\x03\x02\0"
    /* 1222 */ "bgtl+ $\xFF\x03\x02\0"
    /* 1233 */ "beql $\x02, $\xFF\x03\x02\0"
    /* 1247 */ "beql $\xFF\x03\x02\0"
    /* 1257 */ "beql- $\x02, $\xFF\x03\x02\0"
    /* 1272 */ "beql- $\xFF\x03\x02\0"
    /* 1283 */ "beql+ $\x02, $\xFF\x03\x02\0"
    /* 1298 */ "beql+ $\xFF\x03\x02\0"
    /* 1309 */ "bnel $\x02, $\xFF\x03\x02\0"
    /* 1323 */ "bnel $\xFF\x03\x02\0"
    /* 1333 */ "bnel- $\x02, $\xFF\x03\x02\0"
    /* 1348 */ "bnel- $\xFF\x03\x02\0"
    /* 1359 */ "bnel+ $\x02, $\xFF\x03\x02\0"
    /* 1374 */ "bnel+ $\xFF\x03\x02\0"
    /* 1385 */ "bltla $\x02, $\xFF\x03\x03\0"
    /* 1400 */ "bltla $\xFF\x03\x03\0"
    /* 1411 */ "bltla- $\x02, $\xFF\x03\x03\0"
    /* 1427 */ "bltla- $\xFF\x03\x03\0"
    /* 1439 */ "bltla+ $\x02, $\xFF\x03\x03\0"
    /* 1455 */ "bltla+ $\xFF\x03\x03\0"
    /* 1467 */ "bgtla $\x02, $\xFF\x03\x03\0"
    /* 1482 */ "bgtla $\xFF\x03\x03\0"
    /* 1493 */ "bgtla- $\x02, $\xFF\x03\x03\0"
    /* 1509 */ "bgtla- $\xFF\x03\x03\0"
    /* 1521 */ "bgtla+ $\x02, $\xFF\x03\x03\0"
    /* 1537 */ "bgtla+ $\xFF\x03\x03\0"
    /* 1549 */ "beqla $\x02, $\xFF\x03\x03\0"
    /* 1564 */ "beqla $\xFF\x03\x03\0"
    /* 1575 */ "beqla- $\x02, $\xFF\x03\x03\0"
    /* 1591 */ "beqla- $\xFF\x03\x03\0"
    /* 1603 */ "beqla+ $\x02, $\xFF\x03\x03\0"
    /* 1619 */ "beqla+ $\xFF\x03\x03\0"
    /* 1631 */ "bnela $\x02, $\xFF\x03\x03\0"
    /* 1646 */ "bnela $\xFF\x03\x03\0"
    /* 1657 */ "bnela- $\x02, $\xFF\x03\x03\0"
    /* 1673 */ "bnela- $\xFF\x03\x03\0"
    /* 1685 */ "bnela+ $\x02, $\xFF\x03\x03\0"
    /* 1701 */ "bnela+ $\xFF\x03\x03\0"
    /* 1713 */ "bltlr $\x02\0"
    /* 1722 */ "bltlr\0"
    /* 1728 */ "bltlr- $\x02\0"
    /* 1738 */ "bltlr-\0"
    /* 1745 */ "bltlr+ $\x02\0"
    /* 1755 */ "bltlr+\0"
    /* 1762 */ "bgtlr $\x02\0"
    /* 1771 */ "bgtlr\0"
    /* 1777 */ "bgtlr- $\x02\0"
    /* 1787 */ "bgtlr-\0"
    /* 1794 */ "bgtlr+ $\x02\0"
    /* 1804 */ "bgtlr+\0"
    /* 1811 */ "beqlr $\x02\0"
    /* 1820 */ "beqlr\0"
    /* 1826 */ "beqlr- $\x02\0"
    /* 1836 */ "beqlr-\0"
    /* 1843 */ "beqlr+ $\x02\0"
    /* 1853 */ "beqlr+\0"
    /* 1860 */ "bnelr $\x02\0"
    /* 1869 */ "bnelr\0"
    /* 1875 */ "bnelr- $\x02\0"
    /* 1885 */ "bnelr-\0"
    /* 1892 */ "bnelr+ $\x02\0"
    /* 1902 */ "bnelr+\0"
    /* 1909 */ "bltlrl $\x02\0"
    /* 1919 */ "bltlrl\0"
    /* 1926 */ "bltlrl- $\x02\0"
    /* 1937 */ "bltlrl-\0"
    /* 1945 */ "bltlrl+ $\x02\0"
    /* 1956 */ "bltlrl+\0"
    /* 1964 */ "bgtlrl $\x02\0"
    /* 1974 */ "bgtlrl\0"
    /* 1981 */ "bgtlrl- $\x02\0"
    /* 1992 */ "bgtlrl-\0"
    /* 2000 */ "bgtlrl+ $\x02\0"
    /* 2011 */ "bgtlrl+\0"
    /* 2019 */ "beqlrl $\x02\0"
    /* 2029 */ "beqlrl\0"
    /* 2036 */ "beqlrl- $\x02\0"
    /* 2047 */ "beqlrl-\0"
    /* 2055 */ "beqlrl+ $\x02\0"
    /* 2066 */ "beqlrl+\0"
    /* 2074 */ "bnelrl $\x02\0"
    /* 2084 */ "bnelrl\0"
    /* 2091 */ "bnelrl- $\x02\0"
    /* 2102 */ "bnelrl-\0"
    /* 2110 */ "bnelrl+ $\x02\0"
    /* 2121 */ "bnelrl+\0"
    /* 2129 */ "cmpd $\x02, $\x03\0"
    /* 2141 */ "cmpdi $\x02, $\xFF\x03\x01\0"
    /* 2156 */ "cmpld $\x02, $\x03\0"
    /* 2169 */ "cmpldi $\x02, $\xFF\x03\x04\0"
    /* 2185 */ "cmplw $\x02, $\x03\0"
    /* 2198 */ "cmplwi $\x02, $\xFF\x03\x04\0"
    /* 2214 */ "cmpw $\x02, $\x03\0"
    /* 2226 */ "cmpwi $\x02, $\xFF\x03\x01\0"
    /* 2241 */ "cntlzw $\x01, $\x02\0"
    /* 2255 */ "cntlzw. $\x01, $\x02\0"
    /* 2270 */ "crset $\x01\0"
    /* 2279 */ "crnot $\x01, $\x02\0"
    /* 2292 */ "crmove $\x01, $\x02\0"
    /* 2306 */ "crclr $\x01\0"
    /* 2315 */ "isellt $\x01, $\x02, $\x03\0"
    /* 2333 */ "iselgt $\x01, $\x02, $\x03\0"
    /* 2351 */ "iseleq $\x01, $\x02, $\x03\0"
    /* 2369 */ "mbar\0"
    /* 2374 */ "mfbr0 $\x01\0"
    /* 2383 */ "mfbr1 $\x01\0"
    /* 2392 */ "mfbr2 $\x01\0"
    /* 2401 */ "mfbr3 $\x01\0"
    /* 2410 */ "mfbr4 $\x01\0"
    /* 2419 */ "mfbr5 $\x01\0"
    /* 2428 */ "mfbr6 $\x01\0"
    /* 2437 */ "mfbr7 $\x01\0"
    /* 2446 */ "mfxer $\x01\0"
    /* 2455 */ "mfudscr $\x01\0"
    /* 2466 */ "mfrtcu $\x01\0"
    /* 2476 */ "mfrtcl $\x01\0"
    /* 2486 */ "mflr $\x01\0"
    /* 2494 */ "mfctr $\x01\0"
    /* 2503 */ "mfuamr $\x01\0"
    /* 2513 */ "mfdscr $\x01\0"
    /* 2523 */ "mfdsisr $\x01\0"
    /* 2534 */ "mfdar $\x01\0"
    /* 2543 */ "mfdec $\x01\0"
    /* 2552 */ "mfsdr1 $\x01\0"
    /* 2562 */ "mfsrr0 $\x01\0"
    /* 2572 */ "mfsrr1 $\x01\0"
    /* 2582 */ "mfcfar $\x01\0"
    /* 2592 */ "mfamr $\x01\0"
    /* 2601 */ "mfpid $\x01\0"
    /* 2610 */ "mfasr $\x01\0"
    /* 2619 */ "mfpvr $\x01\0"
    /* 2628 */ "mfspefscr $\x01\0"
    /* 2641 */ "mfdbatu $\x01, 0\0"
    /* 2655 */ "mfdbatl $\x01, 0\0"
    /* 2669 */ "mfibatu $\x01, 0\0"
    /* 2683 */ "mfibatl $\x01, 0\0"
    /* 2697 */ "mfdbatu $\x01, 1\0"
    /* 2711 */ "mfdbatl $\x01, 1\0"
    /* 2725 */ "mfibatu $\x01, 1\0"
    /* 2739 */ "mfibatl $\x01, 1\0"
    /* 2753 */ "mfdbatu $\x01, 2\0"
    /* 2767 */ "mfdbatl $\x01, 2\0"
    /* 2781 */ "mfibatu $\x01, 2\0"
    /* 2795 */ "mfibatl $\x01, 2\0"
    /* 2809 */ "mfdbatu $\x01, 3\0"
    /* 2823 */ "mfdbatl $\x01, 3\0"
    /* 2837 */ "mfibatu $\x01, 3\0"
    /* 2851 */ "mfibatl $\x01, 3\0"
    /* 2865 */ "mfppr $\x01\0"
    /* 2874 */ "mfesr $\x01\0"
    /* 2883 */ "mfdear $\x01\0"
    /* 2893 */ "mftcr $\x01\0"
    /* 2902 */ "mftbhi $\x01\0"
    /* 2912 */ "mftblo $\x01\0"
    /* 2922 */ "mfsrr2 $\x01\0"
    /* 2932 */ "mfsrr3 $\x01\0"
    /* 2942 */ "mfdccr $\x01\0"
    /* 2952 */ "mficcr $\x01\0"
    /* 2962 */ "mftbu $\x01\0"
    /* 2971 */ "mfvrsave $\x01\0"
    /* 2983 */ "mffprd $\x01, $\x02\0"
    /* 2997 */ "mffprwz $\x01, $\x02\0"
    /* 3012 */ "mtcr $\x02\0"
    /* 3020 */ "mtbr0 $\x01\0"
    /* 3029 */ "mtbr1 $\x01\0"
    /* 3038 */ "mtbr2 $\x01\0"
    /* 3047 */ "mtbr3 $\x01\0"
    /* 3056 */ "mtbr4 $\x01\0"
    /* 3065 */ "mtbr5 $\x01\0"
    /* 3074 */ "mtbr6 $\x01\0"
    /* 3083 */ "mtbr7 $\x01\0"
    /* 3092 */ "mtfsf $\x01, $\x02\0"
    /* 3105 */ "mtfsfi $\x01, $\x02\0"
    /* 3119 */ "mtfsfi. $\x01, $\x02\0"
    /* 3134 */ "mtfsf. $\x01, $\x02\0"
    /* 3148 */ "mtmsr $\x01\0"
    /* 3157 */ "mtmsrd $\x01\0"
    /* 3167 */ "mtxer $\x02\0"
    /* 3176 */ "mtudscr $\x02\0"
    /* 3187 */ "mtlr $\x02\0"
    /* 3195 */ "mtctr $\x02\0"
    /* 3204 */ "mtuamr $\x02\0"
    /* 3214 */ "mtdscr $\x02\0"
    /* 3224 */ "mtdsisr $\x02\0"
    /* 3235 */ "mtdar $\x02\0"
    /* 3244 */ "mtdec $\x02\0"
    /* 3253 */ "mtsdr1 $\x02\0"
    /* 3263 */ "mtsrr0 $\x02\0"
    /* 3273 */ "mtsrr1 $\x02\0"
    /* 3283 */ "mtcfar $\x02\0"
    /* 3293 */ "mtamr $\x02\0"
    /* 3302 */ "mtpid $\x02\0"
    /* 3311 */ "mtasr $\x02\0"
    /* 3320 */ "mttbl $\x02\0"
    /* 3329 */ "mttbu $\x02\0"
    /* 3338 */ "mtspefscr $\x02\0"
    /* 3351 */ "mtdbatu 0, $\x02\0"
    /* 3365 */ "mtdbatl 0, $\x02\0"
    /* 3379 */ "mtibatu 0, $\x02\0"
    /* 3393 */ "mtibatl 0, $\x02\0"
    /* 3407 */ "mtdbatu 1, $\x02\0"
    /* 3421 */ "mtdbatl 1, $\x02\0"
    /* 3435 */ "mtibatu 1, $\x02\0"
    /* 3449 */ "mtibatl 1, $\x02\0"
    /* 3463 */ "mtdbatu 2, $\x02\0"
    /* 3477 */ "mtdbatl 2, $\x02\0"
    /* 3491 */ "mtibatu 2, $\x02\0"
    /* 3505 */ "mtibatl 2, $\x02\0"
    /* 3519 */ "mtdbatu 3, $\x02\0"
    /* 3533 */ "mtdbatl 3, $\x02\0"
    /* 3547 */ "mtibatu 3, $\x02\0"
    /* 3561 */ "mtibatl 3, $\x02\0"
    /* 3575 */ "mtppr $\x02\0"
    /* 3584 */ "mtesr $\x02\0"
    /* 3593 */ "mtdear $\x02\0"
    /* 3603 */ "mttcr $\x02\0"
    /* 3612 */ "mttbhi $\x02\0"
    /* 3622 */ "mttblo $\x02\0"
    /* 3632 */ "mtsrr2 $\x02\0"
    /* 3642 */ "mtsrr3 $\x02\0"
    /* 3652 */ "mtdccr $\x02\0"
    /* 3662 */ "mticcr $\x02\0"
    /* 3672 */ "mtvrsave $\x01\0"
    /* 3684 */ "mtfprd $\x01, $\x02\0"
    /* 3698 */ "mtfprwa $\x01, $\x02\0"
    /* 3713 */ "mtfprwz $\x01, $\x02\0"
    /* 3728 */ "not $\x01, $\x02\0"
    /* 3739 */ "not. $\x01, $\x02\0"
    /* 3751 */ "mr $\x01, $\x02\0"
    /* 3761 */ "mr. $\x01, $\x02\0"
    /* 3772 */ "nop\0"
    /* 3776 */ "rfebb\0"
    /* 3782 */ "rotld $\x01, $\x02, $\x03\0"
    /* 3799 */ "rotld. $\x01, $\x02, $\x03\0"
    /* 3817 */ "rotldi $\x01, $\x02, $\xFF\x03\x05\0"
    /* 3837 */ "clrldi $\x01, $\x02, $\xFF\x04\x05\0"
    /* 3857 */ "rotldi. $\x01, $\x02, $\xFF\x03\x05\0"
    /* 3878 */ "clrldi. $\x01, $\x02, $\xFF\x04\x05\0"
    /* 3899 */ "rotlwi $\x01, $\x02, $\xFF\x03\x06\0"
    /* 3919 */ "clrlwi $\x01, $\x02, $\xFF\x04\x06\0"
    /* 3939 */ "rotlwi. $\x01, $\x02, $\xFF\x03\x06\0"
    /* 3960 */ "clrlwi. $\x01, $\x02, $\xFF\x04\x06\0"
    /* 3981 */ "rotlw $\x01, $\x02, $\x03\0"
    /* 3998 */ "rotlw. $\x01, $\x02, $\x03\0"
    /* 4016 */ "sc\0"
    /* 4019 */ "sub $\x01, $\x03, $\x02\0"
    /* 4034 */ "sub. $\x01, $\x03, $\x02\0"
    /* 4050 */ "subc $\x01, $\x03, $\x02\0"
    /* 4066 */ "subc. $\x01, $\x03, $\x02\0"
    /* 4083 */ "sync\0"
    /* 4088 */ "lwsync\0"
    /* 4095 */ "ptesync\0"
    /* 4103 */ "tdlt $\x02, $\x03\0"
    /* 4115 */ "tdeq $\x02, $\x03\0"
    /* 4127 */ "tdgt $\x02, $\x03\0"
    /* 4139 */ "tdne $\x02, $\x03\0"
    /* 4151 */ "tdllt $\x02, $\x03\0"
    /* 4164 */ "tdlgt $\x02, $\x03\0"
    /* 4177 */ "tdu $\x02, $\x03\0"
    /* 4188 */ "tdlti $\x02, $\xFF\x03\x01\0"
    /* 4203 */ "tdeqi $\x02, $\xFF\x03\x01\0"
    /* 4218 */ "tdgti $\x02, $\xFF\x03\x01\0"
    /* 4233 */ "tdnei $\x02, $\xFF\x03\x01\0"
    /* 4248 */ "tdllti $\x02, $\xFF\x03\x01\0"
    /* 4264 */ "tdlgti $\x02, $\xFF\x03\x01\0"
    /* 4280 */ "tdui $\x02, $\xFF\x03\x01\0"
    /* 4294 */ "tend.\0"
    /* 4300 */ "tendall.\0"
    /* 4309 */ "tlbie $\x02\0"
    /* 4318 */ "tlbrehi $\x01, $\x02\0"
    /* 4333 */ "tlbrelo $\x01, $\x02\0"
    /* 4348 */ "tlbwehi $\x01, $\x02\0"
    /* 4363 */ "tlbwelo $\x01, $\x02\0"
    /* 4378 */ "tsuspend.\0"
    /* 4388 */ "tresume.\0"
    /* 4397 */ "trap\0"
    /* 4402 */ "twlt $\x02, $\x03\0"
    /* 4414 */ "tweq $\x02, $\x03\0"
    /* 4426 */ "twgt $\x02, $\x03\0"
    /* 4438 */ "twne $\x02, $\x03\0"
    /* 4450 */ "twllt $\x02, $\x03\0"
    /* 4463 */ "twlgt $\x02, $\x03\0"
    /* 4476 */ "twu $\x02, $\x03\0"
    /* 4487 */ "twlti $\x02, $\xFF\x03\x01\0"
    /* 4502 */ "tweqi $\x02, $\xFF\x03\x01\0"
    /* 4517 */ "twgti $\x02, $\xFF\x03\x01\0"
    /* 4532 */ "twnei $\x02, $\xFF\x03\x01\0"
    /* 4547 */ "twllti $\x02, $\xFF\x03\x01\0"
    /* 4563 */ "twlgti $\x02, $\xFF\x03\x01\0"
    /* 4579 */ "twui $\x02, $\xFF\x03\x01\0"
    /* 4593 */ "vnot $\x01, $\x02\0"
    /* 4605 */ "vmr $\x01, $\x02\0"
    /* 4616 */ "wait\0"
    /* 4621 */ "waitrsv\0"
    /* 4629 */ "waitimpl\0"
    /* 4638 */ "xnop\0"
    /* 4643 */ "xvmovdp $\x01, $\x02\0"
    /* 4658 */ "xvmovsp $\x01, $\x02\0"
    /* 4673 */ "xxspltd $\x01, $\x02, 0\0"
    /* 4691 */ "xxspltd $\x01, $\x02, 1\0"
    /* 4709 */ "xxmrghd $\x01, $\x02, $\x03\0"
    /* 4728 */ "xxmrgld $\x01, $\x02, $\x03\0"
    /* 4747 */ "xxswapd $\x01, $\x02\0"
    /* 4762 */ "bt $\x02, $\xFF\x03\x02\0"
    /* 4774 */ "bf $\x02, $\xFF\x03\x02\0"
    /* 4786 */ "bt- $\x02, $\xFF\x03\x02\0"
    /* 4799 */ "bf- $\x02, $\xFF\x03\x02\0"
    /* 4812 */ "bt+ $\x02, $\xFF\x03\x02\0"
    /* 4825 */ "bf+ $\x02, $\xFF\x03\x02\0"
    /* 4838 */ "bdnzt $\x02, $\xFF\x03\x02\0"
    /* 4853 */ "bdnzf $\x02, $\xFF\x03\x02\0"
    /* 4868 */ "bdzt $\x02, $\xFF\x03\x02\0"
    /* 4882 */ "bdzf $\x02, $\xFF\x03\x02\0"
    /* 4896 */ "bta $\x02, $\xFF\x03\x03\0"
    /* 4909 */ "bfa $\x02, $\xFF\x03\x03\0"
    /* 4922 */ "bta- $\x02, $\xFF\x03\x03\0"
    /* 4936 */ "bfa- $\x02, $\xFF\x03\x03\0"
    /* 4950 */ "bta+ $\x02, $\xFF\x03\x03\0"
    /* 4964 */ "bfa+ $\x02, $\xFF\x03\x03\0"
    /* 4978 */ "bdnzta $\x02, $\xFF\x03\x03\0"
    /* 4994 */ "bdnzfa $\x02, $\xFF\x03\x03\0"
    /* 5010 */ "bdzta $\x02, $\xFF\x03\x03\0"
    /* 5025 */ "bdzfa $\x02, $\xFF\x03\x03\0"
    /* 5040 */ "bca+ $\xFF\x01\x06, $\x03, $\xFF\x04\x02\0"
    /* 5060 */ "bca- $\xFF\x01\x06, $\x03, $\xFF\x04\x02\0"
    /* 5080 */ "bcctr $\xFF\x01\x06, $\x02\0"
    /* 5095 */ "btctr $\x02\0"
    /* 5104 */ "bfctr $\x02\0"
    /* 5113 */ "btctr- $\x02\0"
    /* 5123 */ "bfctr- $\x02\0"
    /* 5133 */ "btctr+ $\x02\0"
    /* 5143 */ "bfctr+ $\x02\0"
    /* 5153 */ "bcctrl $\xFF\x01\x06, $\x02\0"
    /* 5169 */ "btctrl $\x02\0"
    /* 5179 */ "bfctrl $\x02\0"
    /* 5189 */ "btctrl- $\x02\0"
    /* 5200 */ "bfctrl- $\x02\0"
    /* 5211 */ "btctrl+ $\x02\0"
    /* 5222 */ "bfctrl+ $\x02\0"
    /* 5233 */ "btl $\x02, $\xFF\x03\x02\0"
    /* 5246 */ "bfl $\x02, $\xFF\x03\x02\0"
    /* 5259 */ "btl- $\x02, $\xFF\x03\x02\0"
    /* 5273 */ "bfl- $\x02, $\xFF\x03\x02\0"
    /* 5287 */ "btl+ $\x02, $\xFF\x03\x02\0"
    /* 5301 */ "bfl+ $\x02, $\xFF\x03\x02\0"
    /* 5315 */ "bdnztl $\x02, $\xFF\x03\x02\0"
    /* 5331 */ "bdnzfl $\x02, $\xFF\x03\x02\0"
    /* 5347 */ "bdztl $\x02, $\xFF\x03\x02\0"
    /* 5362 */ "bdzfl $\x02, $\xFF\x03\x02\0"
    /* 5377 */ "btla $\x02, $\xFF\x03\x03\0"
    /* 5391 */ "bfla $\x02, $\xFF\x03\x03\0"
    /* 5405 */ "btla- $\x02, $\xFF\x03\x03\0"
    /* 5420 */ "bfla- $\x02, $\xFF\x03\x03\0"
    /* 5435 */ "btla+ $\x02, $\xFF\x03\x03\0"
    /* 5450 */ "bfla+ $\x02, $\xFF\x03\x03\0"
    /* 5465 */ "bdnztla $\x02, $\xFF\x03\x03\0"
    /* 5482 */ "bdnzfla $\x02, $\xFF\x03\x03\0"
    /* 5499 */ "bdztla $\x02, $\xFF\x03\x03\0"
    /* 5515 */ "bdzfla $\x02, $\xFF\x03\x03\0"
    /* 5531 */ "bcla+ $\xFF\x01\x06, $\x03, $\xFF\x04\x02\0"
    /* 5552 */ "bcla- $\xFF\x01\x06, $\x03, $\xFF\x04\x02\0"
    /* 5573 */ "bclr $\xFF\x01\x06, $\x02\0"
    /* 5587 */ "btlr $\x02\0"
    /* 5595 */ "bflr $\x02\0"
    /* 5603 */ "btlr- $\x02\0"
    /* 5612 */ "bflr- $\x02\0"
    /* 5621 */ "btlr+ $\x02\0"
    /* 5630 */ "bflr+ $\x02\0"
    /* 5639 */ "bdnztlr $\x02\0"
    /* 5650 */ "bdnzflr $\x02\0"
    /* 5661 */ "bdztlr $\x02\0"
    /* 5671 */ "bdzflr $\x02\0"
    /* 5681 */ "bclrl $\xFF\x01\x06, $\x02\0"
    /* 5696 */ "btlrl $\x02\0"
    /* 5705 */ "bflrl $\x02\0"
    /* 5714 */ "btlrl- $\x02\0"
    /* 5724 */ "bflrl- $\x02\0"
    /* 5734 */ "btlrl+ $\x02\0"
    /* 5744 */ "bflrl+ $\x02\0"
    /* 5754 */ "bdnztlrl $\x02\0"
    /* 5766 */ "bdnzflrl $\x02\0"
    /* 5778 */ "bdztlrl $\x02\0"
    /* 5789 */ "bdzflrl $\x02\0"
    /* 5800 */ "bcl+ $\xFF\x01\x06, $\x03, $\xFF\x04\x02\0"
    /* 5820 */ "bcl- $\xFF\x01\x06, $\x03, $\xFF\x04\x02\0"
    /* 5840 */ "bc+ $\xFF\x01\x06, $\x03, $\xFF\x04\x02\0"
    /* 5859 */ "bc- $\xFF\x01\x06, $\x03, $\xFF\x04\x02\0"
  ;

#ifndef NDEBUG
  static struct SortCheck {
    SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
                 OpToPatterns.begin(), OpToPatterns.end(),
                 [](const PatternsForOpcode &L, const PatternsForOpcode &R) {
                   return L.Opcode < R.Opcode;
                 }) &&
             "tablegen failed to sort opcode patterns");
    }
  } sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M {
    makeArrayRef(OpToPatterns),
    makeArrayRef(Patterns),
    makeArrayRef(Conds),
    StringRef(AsmStrings, array_lengthof(AsmStrings)),
    NULL,
  };
  const char *AsmString = matchAliasPatterns(MI, NULL, M);
  if (!AsmString) return false;


  tmpString = cs_strdup(AsmString);

  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;

  tmpString[I] = 0;
  SStream_concat0(OS, tmpString);

  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      SStream_concat0(OS, " ");
      ++I;
    }

    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          OpIdx = AsmString[I++] - 1;
          PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, OpIdx, PrintMethodIdx, OS);
        } else
            printOperand(MI, (unsigned)(AsmString[I++]) - 1, OS);
      } else {
          SStream_concat1(OS, AsmString[I++]);
      }
    } while (AsmString[I] != '\0');
  }

  return tmpString;
}
        
static void printCustomAliasOperand(
         const MCInst *MI, unsigned OpIdx,
         unsigned PrintMethodIdx,
         SStream *OS)
{
  switch (PrintMethodIdx) {
  default:
    break;
  case 0:
    printS16ImmOperand(MI, OpIdx, OS);
    break;
  case 1:
    printBranchOperand(MI, OpIdx, OS);
    break;
  case 2:
    printAbsBranchOperand(MI, OpIdx, OS);
    break;
  case 3:
    printU16ImmOperand(MI, OpIdx, OS);
    break;
  case 4:
    printU6ImmOperand(MI, OpIdx, OS);
    break;
  case 5:
    printU5ImmOperand(MI, OpIdx, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
